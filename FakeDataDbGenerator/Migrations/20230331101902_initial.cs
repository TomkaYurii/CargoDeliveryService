using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace FakeDataDriverDbGenerator.Migrations
{
    public partial class initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Companies",
                columns: table => new
                {
                    CompanyID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CompanyName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Address = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Phone = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    Email = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ContactPerson = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    ContactPhone = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    ContactEmail = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Companies", x => x.CompanyID);
                });

            migrationBuilder.CreateTable(
                name: "Photos",
                columns: table => new
                {
                    PhotoID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PhotoData = table.Column<byte[]>(type: "varbinary(max)", nullable: false),
                    ContentType = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    FileName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    FileSize = table.Column<int>(type: "int", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Photos", x => x.PhotoID);
                });

            migrationBuilder.CreateTable(
                name: "Trucks",
                columns: table => new
                {
                    TruckID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TruckNumber = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    Model = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Year = table.Column<int>(type: "int", nullable: false),
                    Capacity = table.Column<int>(type: "int", nullable: false),
                    FuelType = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    FuelConsumption = table.Column<decimal>(type: "decimal(4,2)", nullable: true),
                    RegistrationNumber = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    VIN = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    EngineNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ChassisNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    InsurancePolicyNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    InsuranceExpirationDate = table.Column<DateTime>(type: "date", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Trucks", x => x.TruckID);
                });

            migrationBuilder.CreateTable(
                name: "Drivers",
                columns: table => new
                {
                    DriverID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FirstName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    LastName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    MiddleName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Gender = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: false),
                    Birthdate = table.Column<DateTime>(type: "date", nullable: false),
                    PlaceOfBirth = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Nationality = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    MaritalStatus = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    IdentificationType = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IdentificationNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IdentificationExpirationDate = table.Column<DateTime>(type: "date", nullable: true),
                    Address = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Phone = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    Email = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DriverLicenseNumber = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    DriverLicenseCategory = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DriverLicenseIssuingDate = table.Column<DateTime>(type: "date", nullable: false),
                    DriverLicenseExpirationDate = table.Column<DateTime>(type: "date", nullable: false),
                    DriverLicenseIssuingAuthority = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EmploymentStatus = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    EmploymentStartDate = table.Column<DateTime>(type: "date", nullable: true),
                    EmploymentEndDate = table.Column<DateTime>(type: "date", nullable: true),
                    CompanyID = table.Column<int>(type: "int", nullable: true),
                    PhotoID = table.Column<int>(type: "int", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Drivers", x => x.DriverID);
                    table.ForeignKey(
                        name: "FK__Drivers__Company__3B75D760",
                        column: x => x.CompanyID,
                        principalTable: "Companies",
                        principalColumn: "CompanyID");
                    table.ForeignKey(
                        name: "FK__Drivers__PhotoID__3C69FB99",
                        column: x => x.PhotoID,
                        principalTable: "Photos",
                        principalColumn: "PhotoID");
                });

            migrationBuilder.CreateTable(
                name: "Inspections",
                columns: table => new
                {
                    InspectionID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InspectionDate = table.Column<DateTime>(type: "date", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Result = table.Column<bool>(type: "bit", nullable: false),
                    TruckID = table.Column<int>(type: "int", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Inspections", x => x.InspectionID);
                    table.ForeignKey(
                        name: "FK__Inspectio__Truck__300424B4",
                        column: x => x.TruckID,
                        principalTable: "Trucks",
                        principalColumn: "TruckID");
                });

            migrationBuilder.CreateTable(
                name: "Repairs",
                columns: table => new
                {
                    RepairID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RepairDate = table.Column<DateTime>(type: "date", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(2000)", maxLength: 2000, nullable: true),
                    Cost = table.Column<decimal>(type: "decimal(10,2)", nullable: false),
                    TruckID = table.Column<int>(type: "int", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Repairs", x => x.RepairID);
                    table.ForeignKey(
                        name: "FK__Repairs__TruckID__34C8D9D1",
                        column: x => x.TruckID,
                        principalTable: "Trucks",
                        principalColumn: "TruckID");
                });

            migrationBuilder.CreateTable(
                name: "Expenses",
                columns: table => new
                {
                    ExpensesID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DriverID = table.Column<int>(type: "int", nullable: false),
                    TruckID = table.Column<int>(type: "int", nullable: false),
                    DriverPayment = table.Column<decimal>(type: "decimal(10,2)", nullable: false),
                    FuelCost = table.Column<decimal>(type: "decimal(10,2)", nullable: false),
                    MaintenanceCost = table.Column<decimal>(type: "decimal(10,2)", nullable: false),
                    Category = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: false),
                    Date = table.Column<DateTime>(type: "date", nullable: false),
                    Note = table.Column<string>(type: "text", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    UpdatedAt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DeletedAt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Expenses__DFC8A07C5CE04B84", x => x.ExpensesID);
                    table.ForeignKey(
                        name: "FK__Expenses__Driver__412EB0B6",
                        column: x => x.DriverID,
                        principalTable: "Drivers",
                        principalColumn: "DriverID");
                    table.ForeignKey(
                        name: "FK__Expenses__TruckI__4222D4EF",
                        column: x => x.TruckID,
                        principalTable: "Trucks",
                        principalColumn: "TruckID");
                });

            migrationBuilder.InsertData(
                table: "Companies",
                columns: new[] { "CompanyID", "Address", "CompanyName", "ContactEmail", "ContactPerson", "ContactPhone", "CreatedAt", "DeletedAt", "Email", "Phone" },
                values: new object[,]
                {
                    { 1, "1602 Fidel Village, Port Marisol, Niue", "Brown and Sons", "Maria.Pagac@yahoo.com", "Maximillian Ankunding", "980-855-2963", new DateTime(2022, 11, 22, 12, 47, 47, 168, DateTimeKind.Local).AddTicks(5104), null, "Elody_Senger71@hotmail.com", "477-690-1371" },
                    { 2, "07005 Kilback Flat, East Mayra, Djibouti", "Jakubowski, Cummerata and Wyman", "Jeffery_Heaney@gmail.com", "Evan Stanton", "760-702-2495", new DateTime(2022, 8, 17, 4, 59, 53, 638, DateTimeKind.Local).AddTicks(2284), null, "Mathew.Walsh3@gmail.com", "703-237-8869" },
                    { 3, "3358 Demarco Village, Alexanderton, Trinidad and Tobago", "Predovic Group", "Jeffery_Kertzmann@yahoo.com", "Dedrick Labadie", "285-748-6858", new DateTime(2022, 10, 21, 23, 44, 21, 166, DateTimeKind.Local).AddTicks(5339), null, "Karson.Hirthe@yahoo.com", "274-825-4094" },
                    { 4, "72535 Kirlin Mall, Legrosmouth, Kuwait", "Zboncak, Maggio and Jenkins", "Maxime_Leannon@gmail.com", "Ashtyn Batz", "910-425-8470", new DateTime(2022, 5, 16, 6, 9, 1, 108, DateTimeKind.Local).AddTicks(7025), null, "Elizabeth_Ondricka@yahoo.com", "838-864-0031" },
                    { 5, "5193 Corkery Village, North Jaylanland, Venezuela", "Graham - Gislason", "Clotilde_Batz@yahoo.com", "Eloise Bruen", "517-917-3198", new DateTime(2022, 5, 13, 13, 34, 54, 24, DateTimeKind.Local).AddTicks(8305), null, "Timothy77@hotmail.com", "224-808-7172" },
                    { 6, "471 Klein Roads, McLaughlinville, San Marino", "Mayert, Windler and Smitham", "Ariel_Hoeger@gmail.com", "Melyna Conn", "704-233-1359", new DateTime(2023, 3, 26, 7, 46, 40, 738, DateTimeKind.Local).AddTicks(9026), null, "Gunner.Doyle3@gmail.com", "586-763-0123" },
                    { 7, "8849 Baumbach Villages, North Shanny, India", "Swaniawski - Olson", "Vesta_Raynor@yahoo.com", "Berta Cruickshank", "281-259-8610", new DateTime(2023, 2, 6, 1, 58, 27, 452, DateTimeKind.Local).AddTicks(9724), null, "Albin_Kshlerin29@hotmail.com", "880-475-1430" },
                    { 8, "2171 Jacklyn Vista, Kristintown, Cyprus", "Cruickshank, Hessel and Gleason", "Rolando_Beer@gmail.com", "Jordan Dickens", "568-274-6961", new DateTime(2022, 12, 19, 20, 10, 14, 167, DateTimeKind.Local).AddTicks(442), null, "Nigel56@yahoo.com", "948-983-8468" },
                    { 9, "05948 Trevion Ville, East Macfurt, Micronesia", "Koch - Beer", "Laverne.Balistreri@yahoo.com", "Ozella Cremin", "580-642-2267", new DateTime(2022, 6, 21, 16, 2, 46, 982, DateTimeKind.Local).AddTicks(1391), null, "Ernestine_Langosh21@gmail.com", "900-851-5362" },
                    { 10, "96256 Jadon Field, Gorczanyton, Comoros", "Rolfson, Rosenbaum and Pouros", "Myrtis54@yahoo.com", "Dawn Collier", "310-461-4841", new DateTime(2022, 9, 3, 19, 45, 46, 68, DateTimeKind.Local).AddTicks(8119), null, "Briana31@gmail.com", "913-365-6958" },
                    { 11, "33301 Roberta Vista, New Stellaport, Slovenia", "Bayer - Koch", "Arlene67@yahoo.com", "Diego Kub", "382-329-7457", new DateTime(2022, 7, 23, 10, 1, 53, 562, DateTimeKind.Local).AddTicks(1610), null, "Trisha_Friesen@yahoo.com", "925-688-7635" },
                    { 12, "61887 Jakob Lodge, South Sven, Jamaica", "Hayes, Crist and Carter", "Heber80@yahoo.com", "Edythe Sipes", "453-977-0962", new DateTime(2022, 6, 11, 0, 18, 1, 55, DateTimeKind.Local).AddTicks(5182), null, "Nathanial.Morissette@hotmail.com", "247-902-8221" },
                    { 13, "50865 Renner Vista, North Callieborough, Austria", "Murray - Steuber", "Magnus_Johnson57@hotmail.com", "Chloe Hansen", "853-343-5772", new DateTime(2023, 3, 6, 20, 27, 23, 771, DateTimeKind.Local).AddTicks(9945), null, "Kathryn_Yost31@gmail.com", "250-415-9817" },
                    { 14, "7463 Daugherty Lodge, Lake Oswald, Samoa", "Walsh LLC", "Edwin67@hotmail.com", "Brown Walter", "436-697-9261", new DateTime(2022, 9, 24, 17, 58, 24, 207, DateTimeKind.Local).AddTicks(5968), null, "Francesco.Jerde@hotmail.com", "707-762-3905" },
                    { 15, "883 Murazik Vista, Port Dorcasport, Iceland", "Erdman - Funk", "Raven_Abshire@hotmail.com", "Guiseppe Harber", "444-969-4087", new DateTime(2022, 8, 20, 2, 10, 35, 393, DateTimeKind.Local).AddTicks(1461), null, "Willie72@hotmail.com", "301-485-5211" },
                    { 16, "9109 Blanda Loop, Pedroville, Angola", "Langworth Group", "Shayne_Sauer33@yahoo.com", "Mortimer Hudson", "322-500-7120", new DateTime(2022, 12, 23, 9, 22, 31, 28, DateTimeKind.Local).AddTicks(9215), null, "Lea.Wisoky66@hotmail.com", "615-997-6628" },
                    { 17, "058 Juana Walk, Emmanuelburgh, Thailand", "Schneider - O'Conner", "Clint.Strosin72@hotmail.com", "Jalen Waters", "354-519-2654", new DateTime(2022, 6, 9, 18, 34, 57, 764, DateTimeKind.Local).AddTicks(2430), null, "Katheryn77@yahoo.com", "751-280-0893" },
                    { 18, "29550 Wallace Mall, McCulloughburgh, Israel", "Boyle and Sons", "Jaime_Ritchie50@yahoo.com", "Idell Walter", "664-913-7433", new DateTime(2022, 6, 1, 2, 49, 21, 281, DateTimeKind.Local).AddTicks(4409), null, "Joshua.Mayert53@hotmail.com", "322-320-3414" },
                    { 19, "322 Heather Walks, New Filiberto, Falkland Islands (Malvinas)", "Huel - Beatty", "Thurman_Legros0@yahoo.com", "Jada Wehner", "557-435-7099", new DateTime(2022, 7, 7, 4, 19, 48, 21, DateTimeKind.Local).AddTicks(8215), null, "Dominic.Koelpin20@hotmail.com", "971-863-5265" },
                    { 20, "46003 Sandra Manor, Wunschport, Estonia", "Pfannerstill LLC", "Gwendolyn.Connelly86@yahoo.com", "Eunice Kuhn", "750-773-8255", new DateTime(2022, 7, 6, 18, 27, 1, 2, DateTimeKind.Local).AddTicks(3195), null, "Antonetta_Dickens@gmail.com", "504-373-0631" }
                });

            migrationBuilder.InsertData(
                table: "Photos",
                columns: new[] { "PhotoID", "ContentType", "CreatedAt", "DeletedAt", "FileName", "FileSize", "PhotoData" },
                values: new object[,]
                {
                    { 1, "Automotive", new DateTime(2022, 7, 24, 8, 26, 51, 828, DateTimeKind.Local).AddTicks(2528), null, "molestiae", 13381, new byte[] { 70, 208, 134, 130, 64, 151, 228, 163, 149, 207, 255, 70, 105, 156, 115, 196, 161, 205, 16, 52, 19, 91, 78, 163, 111, 132, 165, 74, 223, 122, 14, 160, 156, 227, 193, 23, 108, 228, 142, 130, 78, 2, 33, 190, 15, 59, 83, 88, 240, 163, 40, 24, 75, 233, 145, 235, 129, 227, 18, 188, 241, 154, 196, 26, 193, 94, 169, 134, 218, 91, 87, 189, 63, 142, 230, 16, 57, 143, 147, 52, 48, 77, 90, 60, 82, 246, 85, 179, 81, 214, 149, 137, 209, 210, 144, 180, 62, 7, 253, 177, 146, 205, 125, 148, 75, 107, 217, 189, 3, 128, 177, 242, 79, 222, 139, 164, 63, 135, 199, 202, 8, 246, 52, 4, 198, 206, 236, 109, 253, 50, 210, 49, 146, 226, 161, 99, 207, 197, 240, 231, 29, 152, 175, 209, 37, 163, 58, 242, 70, 236, 116, 183, 63, 50, 168, 155, 152, 121, 206, 125, 127, 107, 191, 209, 174, 127, 95, 108, 60, 40, 212, 122, 150, 224, 173, 112, 70, 99, 223, 34, 147, 249, 39, 16, 189, 26, 242, 95, 58, 6, 202, 86, 247, 115, 103, 177, 216, 222, 34, 165, 67, 206, 181, 29, 24, 249, 32, 94, 133, 55, 84, 53, 154, 172, 234, 133, 68, 175, 19, 147, 141, 255, 49, 54, 94, 125, 130, 35, 120, 252, 152, 104, 64, 57, 222, 197, 68, 9, 248, 196, 250, 147, 218, 3, 177, 149, 188, 75, 137, 226, 108, 41, 203, 143, 23, 68, 156, 126, 190, 154, 119, 253, 229, 137, 159, 236, 244, 96, 205, 37, 64, 59, 182, 79, 153, 250, 37, 46, 132, 201, 193, 55, 154, 150, 143, 111, 156, 177, 34, 154, 40, 197, 75, 94, 77, 253, 173, 81, 100, 196, 160, 91, 125, 100, 161, 49, 114, 124, 246, 29, 30, 110, 250, 245, 216, 63, 98, 79, 249, 47, 80, 67, 62, 51, 252, 123, 239, 88, 2, 155, 76, 211, 202, 191, 40, 101, 185, 53, 244, 94, 252, 32, 187, 4, 123, 186, 203, 85, 133, 13, 154, 94, 88, 52, 116, 93, 29, 74, 103, 38, 65, 26, 122, 90, 209, 75, 163, 58, 205, 114, 133, 44, 91, 155, 51, 48, 135, 57, 184, 66, 175, 154, 210, 244, 1, 238, 123, 149, 75, 202, 72, 111, 206, 205, 28, 225, 165, 96, 51, 47, 22, 145, 136, 19, 136, 109, 2, 188, 1, 68, 213, 227, 146, 36, 118, 167, 72, 133, 88, 226, 207, 13, 239, 2, 42, 21, 94, 141, 126, 81, 138, 39, 6, 136, 44, 30, 17, 190, 108, 148, 235, 190, 148, 6, 245, 100, 221, 169, 86, 117, 153, 31, 8, 80, 96, 8, 162, 134, 232, 114, 14, 117, 62, 175, 186, 174, 220, 9, 248, 88, 149, 137, 25, 196, 247, 16, 121, 232, 13, 197, 56, 180, 54, 8, 183, 106, 31, 182, 39, 35, 124, 139, 214, 249, 133, 117, 128, 228, 76, 70, 135, 211, 176, 254, 224, 15, 6, 67, 89, 79, 143, 185, 120, 34, 58, 89, 63, 54, 248, 79, 143, 38, 225, 213, 219, 9, 179, 31, 62, 129, 144, 148, 156, 198, 62, 100, 4, 55, 39, 167, 100, 219, 93, 216, 148, 195, 18, 179, 191, 43, 54, 73, 236, 252, 183, 97, 242, 219, 34, 214, 92, 230, 4, 215, 190, 250, 28, 178, 228, 214, 85, 7, 14, 80, 234, 179, 201, 9, 64, 24, 246, 255, 95, 19, 75, 71, 167, 159, 15, 220, 114, 40, 21, 81, 75, 126, 214, 133, 25, 154, 166, 96, 206, 233, 213, 46, 59, 156, 18, 3, 152, 232, 155, 9, 224, 92, 134, 241, 140, 119, 83, 125, 162, 7, 99, 45, 242, 189, 4, 108, 220, 67, 239, 166, 114, 149, 48, 118, 61, 28, 11, 11, 141, 11, 68, 137, 141, 11, 113, 239, 247, 229, 248, 161, 71, 40, 190, 199, 133, 168, 59, 126, 151, 166, 38, 84, 248, 245, 150, 74, 43, 16, 179, 112, 108, 71, 240, 151, 194, 218, 159, 231, 76, 21, 116, 247, 74, 78, 95, 74, 215, 105, 240, 148, 224, 141, 115, 230, 228, 240, 145, 151, 116, 38, 195, 231, 49, 136, 53, 255, 56, 38, 4, 171, 8, 84, 49, 130, 49, 47, 9, 170, 149, 76, 114, 193, 31, 31, 143, 222, 212, 9, 178, 210, 72, 7, 114, 37, 81, 140, 197, 194, 24, 96, 17, 176, 101, 68, 139, 139, 91, 240, 181, 180, 230, 230, 2, 39, 180, 1, 199, 18, 248, 87, 42, 46, 116, 49, 98, 0, 225, 12, 48, 164, 106, 71, 146, 53, 58, 193, 92, 219, 147, 4, 130, 228, 84, 253, 236, 98, 5, 75, 113, 80, 197, 179, 201, 193, 53, 227, 60, 51, 225, 138, 170, 79, 191, 16, 74, 158, 84, 204, 236, 242, 164, 236, 126, 244, 212, 70, 218, 119, 69, 0, 251, 150, 155, 224, 223, 183, 126, 208, 255, 87, 133, 41, 249, 9, 90, 51, 36, 67, 179, 77, 13, 57, 94, 126, 171, 217, 52, 212, 236, 239, 8, 197, 237, 225, 143, 19, 180, 223, 49, 146, 32, 131, 204, 149, 108, 123, 242, 117, 154, 161, 33, 151, 195, 247, 242, 193, 56, 28, 53, 5, 130, 169, 228, 15, 79, 192, 59, 24, 121, 70, 126, 69, 18, 32, 45, 137, 108, 200, 17, 48, 231, 191, 58, 75, 206, 113, 1, 245, 238, 206, 218, 152, 169, 43, 15, 119, 159, 188, 70, 172, 63, 217, 251, 83, 34, 220, 132, 162, 202, 105, 84, 111, 10, 5, 30, 195, 110, 152, 65, 221, 190, 69, 42, 171, 108, 230, 155, 230, 17, 181, 233, 176, 130, 101, 240, 13, 195, 230, 40, 242, 236, 94, 43, 133, 121, 106, 141, 164, 12, 76, 8, 7, 122, 104, 237, 249, 174, 80, 231, 59, 64, 157, 145, 21, 127, 164, 237, 165, 20, 17, 255, 135, 111, 79, 241, 96, 26, 165, 50, 1, 88, 246, 218, 197, 172, 226, 53, 26, 119, 247, 94, 115, 255, 237, 177, 78, 205, 22, 6, 213 } },
                    { 2, "Music", new DateTime(2022, 9, 26, 15, 56, 51, 243, DateTimeKind.Local).AddTicks(1802), null, "fuga", 49433, new byte[] { 113, 147, 198, 149, 36, 185, 227, 111, 124, 56, 152, 183, 221, 32, 11, 193, 22, 30, 236, 46, 240, 189, 22, 70, 242, 169, 230, 147, 108, 98, 105, 51, 239, 133, 90, 185, 10, 83, 176, 245, 168, 71, 129, 47, 255, 114, 188, 101, 43, 174, 82, 135, 80, 29, 184, 180, 125, 127, 163, 122, 210, 79, 3, 25, 206, 100, 199, 87, 198, 81, 182, 194, 109, 247, 134, 168, 60, 230, 70, 128, 237, 129, 104, 189, 16, 226, 227, 209, 204, 165, 60, 139, 176, 54, 34, 88, 67, 103, 97, 155, 170, 100, 159, 217, 247, 143, 26, 88, 151, 15, 120, 150, 56, 34, 140, 81, 231, 69, 9, 235, 128, 246, 139, 32, 20, 43, 18, 55, 213, 45, 100, 212, 133, 171, 213, 137, 225, 142, 197, 128, 200, 139, 57, 188, 45, 166, 82, 141, 169, 208, 112, 254, 94, 117, 26, 179, 216, 127, 197, 204, 125, 226, 131, 105, 170, 164, 16, 141, 77, 2, 111, 88, 128, 137, 35, 245, 189, 206, 242, 110, 216, 132, 141, 4, 189, 102, 118, 15, 145, 33, 177, 98, 201, 249, 2, 229, 8, 207, 17, 137, 149, 197, 64, 167, 97, 24, 126, 213, 82, 36, 246, 9, 140, 86, 243, 248, 85, 126, 172, 68, 45, 1, 251, 43, 81, 12, 142, 134, 134, 62, 237, 237, 189, 105, 216, 19, 67, 230, 162, 164, 232, 160, 189, 108, 43, 167, 214, 114, 5, 10, 143, 137, 34, 205, 91, 148, 201, 21, 85, 84, 137, 247, 78, 19, 55, 8, 76, 35, 126, 224, 181, 111, 220, 8, 91, 140, 67, 143, 255, 169, 54, 27, 129, 124, 174, 99, 203, 239, 13, 67, 73, 45, 144, 78, 27, 241, 81, 169, 52, 34, 91, 179, 244, 36, 84, 32, 173, 26, 113, 206, 81, 58, 21, 171, 30, 109, 117, 210, 101, 211, 61, 92, 21, 58, 151, 135, 222, 141, 237, 106, 58, 153, 90, 221, 78, 131, 39, 92, 39, 142, 182, 177, 125, 62, 242, 15, 24, 228, 48, 173, 123, 127, 68, 96, 229, 254, 157, 186, 141, 205, 65, 31, 44, 7, 147, 183, 223, 56, 92, 154, 70, 25, 171, 214, 29, 139, 223, 214, 71, 135, 111, 250, 93, 63, 239, 187, 85, 249, 247, 80, 229, 109, 206, 90, 77, 151, 132, 118, 171, 58, 47, 223, 136, 149, 103, 98, 211, 109, 67, 89, 30, 198, 114, 5, 93, 71, 194, 237, 24, 215, 98, 229, 64, 11, 181, 217, 74, 80, 137, 133, 7, 104, 43, 13, 88, 143, 113, 199, 216, 141, 232, 231, 181, 157, 50, 30, 250, 201, 252, 5, 212, 151, 94, 211, 216, 73, 159, 124, 224, 141, 23, 131, 227, 189, 82, 181, 155, 101, 173, 206, 213, 250, 20, 139, 239, 123, 47, 162, 217, 150, 222, 129, 83, 131, 177, 111, 10, 88, 53, 14, 240, 245, 231, 74, 117, 101, 3, 248, 74, 124, 131, 149, 27, 46, 48, 217, 130, 211, 227, 92, 25, 252, 162, 73, 175, 150, 47, 95, 12, 226, 170, 66, 48, 158, 221, 223, 19, 201, 21, 138, 119, 55, 88, 93, 19, 72, 101, 37, 83, 215, 236, 55, 116, 216, 245, 244, 82, 157, 155, 222, 53, 164, 235, 103, 209, 64, 101, 125, 80, 80, 197, 185, 189, 88, 229, 225, 164, 69, 54, 102, 49, 9, 12, 52, 246, 115, 205, 87, 169, 233, 141, 118, 46, 55, 84, 211, 76, 240, 139, 210, 226, 231, 212, 2, 17, 51, 122, 28, 242, 19, 79, 12, 102, 52, 172, 43, 151, 182, 113, 94, 114, 13, 212, 102, 195, 79, 139, 133, 3, 18, 149, 179, 186, 100, 131, 73, 53, 9, 34, 194, 248, 177, 101, 149, 153, 128, 15, 249, 139, 41, 59, 149, 126, 45, 95, 213, 19, 109, 63, 194, 167, 245, 24, 224, 126, 155, 82, 2, 176, 98, 246, 142, 147, 175, 101, 192, 168, 62, 204, 66, 64, 145, 250, 218, 215, 255, 53, 141, 4, 174, 54, 199, 202, 96, 26, 3, 153, 132, 23, 253, 46, 13, 73, 40, 50, 173, 1, 207, 199, 158, 44, 212, 161, 253, 129, 22, 250, 61, 9, 126, 102, 197, 253, 1, 44, 47, 195, 51, 148, 98, 39, 36, 39, 206, 19, 51, 72, 210, 168, 41, 253, 102, 197, 102, 130, 98, 38, 205, 222, 4, 8, 92, 123, 153, 151, 105, 15, 71, 251, 3, 233, 206, 59, 101, 119, 8, 173, 210, 233, 78, 205, 40, 149, 223, 128, 255, 255, 151, 127, 202, 8, 246, 84, 143, 89, 202, 168, 142, 55, 169, 35, 0, 214, 164, 64, 47, 43, 96, 238, 121, 180, 83, 227, 144, 54, 223, 199, 156, 24, 151, 106, 120, 200, 49, 250, 242, 122, 171, 11, 172, 95, 30, 155, 63, 43, 205, 82, 240, 158, 81, 212, 158, 168, 5, 21, 180, 19, 196, 88, 122, 3, 12, 117, 159, 63, 171, 56, 164, 170, 78, 180, 127, 85, 66, 25, 150, 184, 163, 100, 105, 141, 215, 253, 199, 195, 203, 207, 194, 28, 69, 222, 182, 82, 144, 169, 83, 169, 251, 0, 127, 148, 173, 69, 80, 156, 84, 73, 102, 235, 127, 252, 112, 95, 239, 237, 44, 14, 173, 220, 116, 219, 118, 136, 100, 111, 253, 45, 196, 152, 198, 236, 189, 163, 229, 213, 223, 145, 173, 42, 110, 129, 105, 214, 157, 73, 110, 87, 99, 163, 124, 69, 251, 31, 139, 164, 30, 37, 224, 224, 158, 39, 132, 205, 37, 146, 63, 204, 122, 25, 13, 155, 97, 130, 109, 242, 113, 159, 234, 27, 0, 166, 201, 32, 28, 128, 240, 157, 23, 64, 183, 185, 176, 204, 139, 70, 252, 156, 177, 10, 10, 162, 220, 73, 149, 225, 228, 120, 177, 153, 50, 126, 58, 197, 224, 247, 93, 100, 176, 164, 161, 161, 181, 57, 98, 84, 234, 148, 246, 39, 245, 213, 238, 224, 16, 94, 202, 128, 139, 59, 156, 119, 236, 125, 13, 56, 126, 235, 236, 148, 233, 152, 235, 12, 104 } },
                    { 3, "Home", new DateTime(2022, 11, 29, 23, 26, 50, 658, DateTimeKind.Local).AddTicks(922), null, "qui", 36483, new byte[] { 157, 86, 5, 169, 7, 219, 227, 58, 99, 160, 50, 39, 80, 164, 163, 189, 140, 110, 200, 39, 204, 31, 222, 234, 117, 207, 39, 221, 248, 74, 197, 199, 65, 39, 242, 91, 168, 195, 210, 103, 1, 139, 224, 160, 240, 169, 36, 114, 102, 185, 124, 247, 84, 82, 223, 125, 120, 27, 51, 56, 179, 5, 66, 24, 219, 107, 230, 41, 177, 71, 21, 200, 155, 97, 37, 64, 62, 61, 249, 204, 171, 181, 119, 62, 205, 206, 114, 239, 71, 116, 227, 140, 144, 154, 179, 252, 72, 199, 197, 133, 195, 250, 193, 31, 164, 180, 91, 243, 44, 159, 62, 58, 34, 102, 141, 254, 142, 3, 75, 12, 248, 246, 226, 60, 99, 136, 56, 1, 173, 41, 247, 118, 120, 116, 9, 176, 243, 87, 154, 25, 115, 126, 194, 168, 54, 169, 106, 41, 13, 181, 109, 69, 124, 184, 140, 204, 24, 132, 187, 27, 123, 89, 70, 2, 167, 200, 193, 173, 93, 220, 10, 54, 105, 49, 153, 122, 51, 58, 6, 186, 30, 14, 243, 247, 188, 178, 249, 191, 231, 61, 152, 111, 156, 126, 158, 25, 56, 192, 0, 109, 231, 188, 204, 49, 170, 54, 219, 75, 30, 18, 152, 222, 126, 1, 253, 108, 102, 78, 70, 244, 206, 2, 197, 32, 68, 155, 154, 234, 147, 128, 65, 115, 57, 152, 210, 97, 66, 194, 77, 133, 214, 174, 160, 213, 164, 185, 240, 154, 129, 49, 178, 233, 121, 11, 159, 229, 246, 172, 236, 14, 156, 241, 184, 158, 208, 36, 164, 229, 46, 156, 42, 163, 1, 193, 30, 31, 97, 240, 123, 138, 171, 0, 104, 97, 205, 88, 250, 45, 248, 237, 106, 150, 213, 62, 233, 229, 246, 2, 5, 128, 21, 10, 107, 229, 7, 15, 231, 183, 237, 127, 131, 6, 49, 97, 99, 155, 136, 86, 209, 119, 41, 118, 236, 65, 49, 147, 206, 195, 216, 57, 41, 95, 235, 250, 117, 160, 148, 131, 90, 190, 112, 66, 64, 121, 105, 100, 101, 116, 218, 77, 92, 160, 48, 141, 86, 158, 29, 42, 180, 115, 65, 36, 223, 180, 86, 36, 27, 54, 236, 194, 7, 5, 251, 18, 6, 231, 54, 115, 215, 205, 46, 89, 232, 139, 220, 137, 46, 93, 164, 215, 130, 106, 207, 231, 125, 76, 99, 139, 35, 69, 72, 46, 135, 23, 69, 87, 164, 30, 134, 111, 103, 170, 82, 230, 68, 231, 60, 84, 215, 204, 245, 189, 146, 21, 64, 156, 53, 20, 149, 186, 131, 170, 80, 145, 132, 0, 209, 208, 69, 133, 228, 16, 215, 52, 111, 216, 24, 232, 162, 150, 15, 15, 180, 86, 79, 138, 156, 114, 215, 169, 33, 144, 136, 203, 235, 189, 89, 192, 97, 68, 21, 108, 15, 81, 232, 229, 230, 93, 165, 103, 132, 77, 113, 255, 170, 116, 246, 250, 66, 250, 100, 95, 248, 155, 100, 84, 135, 11, 73, 178, 127, 87, 135, 94, 128, 163, 255, 98, 109, 106, 164, 62, 205, 112, 36, 211, 30, 137, 32, 118, 198, 95, 126, 103, 224, 182, 116, 115, 237, 148, 93, 219, 19, 243, 231, 44, 198, 18, 126, 7, 116, 147, 140, 216, 85, 37, 145, 135, 118, 144, 53, 254, 234, 210, 235, 32, 217, 31, 126, 202, 47, 140, 117, 217, 12, 200, 43, 217, 136, 247, 13, 12, 10, 25, 1, 50, 210, 166, 17, 186, 36, 236, 252, 92, 94, 95, 240, 64, 7, 199, 83, 166, 148, 180, 216, 232, 30, 178, 203, 141, 249, 184, 254, 127, 131, 41, 244, 208, 209, 184, 77, 51, 13, 195, 166, 66, 144, 25, 123, 173, 215, 234, 209, 193, 164, 102, 119, 86, 65, 25, 20, 32, 218, 132, 193, 108, 237, 125, 216, 53, 106, 32, 111, 78, 122, 32, 153, 208, 13, 149, 88, 4, 55, 30, 181, 15, 230, 61, 219, 28, 177, 158, 143, 183, 164, 45, 88, 136, 2, 58, 84, 19, 64, 69, 66, 183, 122, 131, 70, 131, 205, 167, 72, 172, 193, 15, 232, 187, 207, 177, 133, 176, 162, 187, 132, 204, 144, 183, 170, 77, 199, 16, 205, 211, 64, 69, 196, 242, 220, 253, 148, 99, 246, 87, 79, 9, 85, 227, 246, 148, 68, 157, 184, 80, 180, 164, 112, 132, 192, 117, 39, 195, 216, 249, 187, 188, 217, 116, 107, 124, 75, 246, 222, 210, 29, 34, 186, 74, 108, 122, 118, 173, 192, 21, 8, 42, 88, 124, 31, 155, 212, 63, 49, 103, 214, 209, 138, 252, 155, 147, 47, 225, 119, 122, 73, 78, 191, 230, 51, 146, 234, 38, 24, 69, 254, 121, 2, 195, 241, 145, 100, 92, 85, 207, 167, 12, 196, 119, 251, 76, 152, 189, 174, 216, 75, 149, 53, 70, 204, 186, 107, 113, 73, 141, 177, 174, 38, 235, 104, 92, 206, 198, 11, 10, 47, 211, 140, 167, 210, 61, 137, 71, 234, 231, 249, 44, 119, 63, 250, 105, 68, 188, 247, 54, 38, 242, 19, 200, 30, 249, 229, 217, 14, 159, 125, 209, 178, 163, 169, 119, 9, 141, 115, 143, 49, 35, 134, 98, 147, 132, 54, 230, 240, 255, 24, 18, 207, 212, 228, 60, 191, 195, 137, 216, 87, 175, 57, 75, 105, 40, 122, 211, 150, 130, 95, 182, 72, 104, 4, 2, 108, 177, 52, 153, 195, 255, 232, 15, 135, 107, 2, 221, 191, 108, 184, 69, 4, 155, 55, 129, 234, 59, 248, 107, 9, 98, 79, 110, 159, 97, 202, 103, 208, 226, 208, 14, 143, 239, 21, 88, 199, 41, 196, 254, 37, 157, 20, 42, 202, 26, 178, 173, 48, 131, 23, 49, 184, 201, 144, 96, 175, 122, 112, 37, 161, 155, 13, 221, 155, 169, 182, 20, 133, 223, 185, 192, 118, 250, 69, 108, 78, 37, 163, 132, 174, 29, 54, 76, 202, 159, 85, 197, 95, 180, 169, 77, 185, 158, 92, 138, 144, 55, 142, 32, 99, 157, 39, 81, 201, 86, 186, 190, 132, 35, 18, 137, 214, 235, 119, 132, 100, 192, 18, 252 } },
                    { 4, "Health", new DateTime(2023, 2, 2, 6, 56, 50, 73, DateTimeKind.Local).AddTicks(36), null, "sit", 23534, new byte[] { 200, 25, 69, 188, 235, 253, 226, 6, 74, 8, 204, 152, 196, 39, 58, 186, 1, 191, 164, 32, 168, 129, 166, 141, 249, 245, 104, 39, 132, 50, 32, 90, 147, 201, 139, 253, 70, 51, 245, 218, 91, 207, 64, 17, 225, 224, 140, 127, 161, 196, 166, 102, 89, 134, 6, 70, 115, 184, 195, 245, 148, 187, 129, 24, 232, 113, 4, 251, 156, 60, 116, 206, 202, 202, 197, 216, 65, 148, 172, 24, 104, 232, 133, 191, 139, 186, 0, 13, 194, 68, 138, 142, 111, 255, 69, 160, 78, 40, 41, 111, 219, 145, 227, 100, 80, 216, 156, 142, 193, 46, 5, 222, 11, 170, 141, 171, 53, 193, 140, 45, 112, 247, 57, 88, 178, 229, 94, 203, 133, 37, 138, 25, 107, 61, 61, 214, 5, 32, 111, 178, 30, 114, 76, 147, 62, 172, 130, 197, 113, 153, 106, 140, 155, 251, 254, 228, 88, 138, 178, 106, 121, 208, 9, 155, 163, 236, 115, 206, 109, 182, 165, 20, 82, 217, 15, 254, 170, 165, 25, 6, 99, 153, 89, 235, 187, 254, 125, 111, 62, 88, 126, 123, 110, 4, 57, 77, 104, 176, 239, 82, 57, 179, 87, 187, 243, 85, 57, 193, 235, 255, 58, 178, 112, 172, 7, 224, 119, 30, 224, 165, 110, 3, 143, 20, 55, 42, 166, 77, 160, 194, 150, 249, 181, 199, 204, 175, 65, 158, 247, 101, 196, 187, 131, 62, 30, 204, 10, 194, 253, 88, 214, 73, 208, 74, 227, 53, 35, 67, 131, 201, 174, 235, 33, 41, 105, 64, 252, 168, 223, 87, 158, 216, 39, 122, 224, 178, 127, 81, 246, 107, 31, 228, 80, 71, 236, 77, 41, 107, 228, 151, 139, 254, 27, 46, 183, 217, 154, 90, 213, 222, 207, 97, 226, 166, 186, 253, 34, 85, 105, 48, 181, 210, 76, 23, 169, 202, 155, 217, 61, 27, 22, 144, 196, 72, 203, 160, 189, 248, 195, 7, 23, 37, 123, 24, 156, 189, 2, 170, 141, 238, 43, 212, 2, 179, 225, 184, 177, 3, 133, 237, 61, 193, 29, 185, 199, 62, 157, 153, 218, 25, 64, 41, 145, 97, 24, 144, 87, 52, 123, 235, 200, 241, 75, 78, 240, 66, 141, 16, 103, 18, 238, 185, 115, 214, 202, 86, 7, 193, 80, 93, 32, 104, 207, 115, 173, 1, 66, 161, 155, 80, 97, 125, 135, 154, 36, 75, 117, 206, 201, 132, 176, 141, 50, 199, 43, 135, 182, 187, 150, 193, 137, 149, 227, 30, 202, 96, 33, 215, 161, 239, 0, 236, 117, 22, 177, 113, 49, 216, 177, 126, 225, 57, 248, 204, 172, 147, 53, 8, 72, 38, 74, 134, 10, 217, 199, 204, 153, 105, 207, 196, 42, 157, 45, 217, 132, 196, 23, 27, 22, 185, 85, 221, 9, 24, 224, 80, 157, 23, 113, 55, 42, 25, 143, 123, 164, 121, 226, 156, 79, 229, 215, 200, 9, 236, 84, 67, 11, 30, 72, 232, 123, 25, 242, 142, 208, 109, 124, 242, 248, 119, 46, 129, 247, 151, 154, 16, 14, 178, 53, 10, 226, 123, 204, 49, 226, 140, 212, 29, 196, 157, 68, 126, 207, 137, 188, 17, 39, 0, 170, 55, 252, 239, 163, 216, 182, 86, 209, 113, 82, 67, 52, 89, 233, 61, 5, 255, 76, 193, 172, 68, 152, 95, 45, 90, 50, 175, 178, 109, 219, 136, 233, 14, 8, 254, 13, 242, 215, 244, 122, 139, 187, 98, 202, 128, 104, 235, 149, 145, 131, 189, 196, 102, 83, 101, 158, 157, 193, 73, 165, 6, 163, 100, 150, 201, 90, 38, 80, 234, 48, 19, 39, 88, 70, 32, 137, 54, 149, 173, 242, 71, 26, 32, 233, 30, 196, 131, 186, 162, 95, 111, 48, 142, 79, 116, 232, 87, 204, 0, 38, 66, 154, 170, 96, 112, 149, 108, 31, 50, 220, 104, 8, 20, 86, 93, 236, 130, 122, 120, 5, 214, 107, 174, 139, 192, 227, 153, 8, 210, 56, 50, 105, 148, 135, 175, 173, 111, 192, 121, 137, 88, 99, 135, 198, 247, 103, 27, 55, 241, 135, 101, 220, 83, 251, 79, 214, 236, 31, 159, 141, 251, 99, 77, 250, 170, 254, 115, 141, 167, 176, 124, 194, 1, 239, 173, 115, 228, 231, 147, 89, 199, 97, 23, 74, 211, 85, 21, 153, 55, 217, 192, 80, 32, 236, 141, 244, 22, 141, 28, 248, 243, 142, 144, 65, 11, 163, 219, 100, 77, 220, 242, 4, 139, 70, 197, 153, 76, 3, 39, 84, 232, 218, 85, 205, 239, 44, 162, 21, 97, 184, 92, 86, 203, 155, 101, 56, 209, 213, 63, 47, 122, 177, 75, 91, 230, 188, 196, 217, 38, 243, 168, 19, 101, 199, 15, 25, 56, 194, 82, 222, 0, 198, 2, 149, 127, 155, 56, 240, 225, 141, 200, 118, 195, 247, 218, 55, 143, 250, 231, 50, 103, 200, 238, 110, 15, 73, 241, 4, 139, 76, 255, 14, 131, 96, 47, 179, 174, 182, 219, 75, 132, 212, 248, 153, 42, 50, 79, 110, 236, 216, 138, 62, 219, 31, 119, 56, 215, 148, 133, 53, 170, 51, 100, 149, 141, 186, 243, 99, 200, 38, 137, 216, 31, 156, 174, 147, 208, 85, 67, 221, 250, 131, 23, 179, 194, 193, 51, 99, 233, 246, 220, 26, 49, 165, 160, 80, 111, 99, 12, 112, 62, 235, 165, 198, 78, 177, 30, 63, 113, 227, 104, 130, 80, 167, 59, 38, 28, 177, 211, 203, 134, 143, 122, 209, 74, 111, 167, 121, 251, 93, 35, 108, 73, 210, 158, 14, 221, 81, 100, 16, 162, 244, 241, 5, 142, 89, 201, 137, 105, 122, 52, 189, 144, 64, 234, 174, 113, 211, 123, 223, 10, 164, 67, 19, 191, 251, 57, 126, 9, 45, 73, 202, 77, 194, 40, 146, 157, 116, 67, 241, 165, 30, 16, 129, 41, 101, 220, 8, 232, 239, 157, 9, 213, 132, 6, 254, 176, 222, 69, 146, 32, 74, 127, 60, 48, 105, 112, 205, 23, 87, 16, 252, 143, 138, 57, 235, 148, 194, 234, 90, 30, 48, 149, 25, 144 } },
                    { 5, "Clothing", new DateTime(2022, 4, 7, 14, 26, 49, 487, DateTimeKind.Local).AddTicks(9150), null, "numquam", 10584, new byte[] { 244, 221, 133, 207, 206, 30, 226, 209, 49, 113, 101, 9, 56, 171, 210, 183, 118, 16, 128, 26, 132, 228, 110, 48, 124, 26, 169, 112, 16, 26, 124, 237, 230, 107, 35, 159, 228, 162, 23, 76, 181, 20, 159, 130, 209, 23, 245, 140, 220, 207, 208, 213, 94, 186, 46, 16, 110, 84, 83, 179, 117, 113, 193, 23, 245, 120, 35, 204, 135, 50, 210, 212, 248, 52, 100, 112, 68, 235, 95, 100, 37, 28, 148, 65, 73, 166, 143, 43, 60, 19, 49, 143, 79, 99, 215, 67, 83, 136, 141, 89, 244, 40, 4, 170, 252, 252, 221, 42, 85, 189, 204, 130, 245, 238, 142, 88, 221, 127, 206, 79, 232, 247, 144, 116, 0, 67, 132, 149, 92, 32, 29, 187, 94, 5, 112, 253, 23, 234, 68, 76, 200, 101, 214, 127, 70, 175, 154, 96, 213, 126, 102, 211, 186, 62, 112, 252, 152, 144, 169, 185, 119, 71, 205, 52, 160, 16, 36, 239, 125, 144, 65, 243, 59, 130, 134, 131, 33, 16, 45, 81, 168, 35, 191, 222, 186, 74, 1, 31, 149, 115, 101, 135, 64, 138, 212, 129, 151, 161, 222, 54, 138, 171, 227, 69, 60, 115, 151, 56, 184, 237, 219, 135, 98, 87, 16, 84, 135, 238, 122, 86, 15, 4, 90, 9, 42, 185, 178, 177, 173, 4, 235, 127, 50, 247, 199, 253, 64, 122, 161, 70, 178, 201, 102, 168, 152, 222, 36, 233, 121, 128, 249, 169, 39, 136, 39, 134, 80, 217, 26, 131, 193, 229, 138, 179, 1, 92, 84, 107, 144, 18, 19, 12, 76, 51, 163, 69, 157, 178, 113, 76, 148, 200, 55, 45, 11, 66, 88, 170, 207, 64, 172, 102, 96, 30, 133, 204, 63, 178, 166, 59, 137, 185, 89, 102, 108, 236, 92, 243, 228, 225, 232, 158, 104, 205, 238, 248, 174, 92, 168, 191, 3, 170, 155, 79, 102, 172, 172, 46, 174, 214, 6, 235, 11, 53, 194, 219, 111, 208, 192, 30, 229, 101, 197, 238, 88, 13, 254, 146, 47, 140, 30, 226, 9, 230, 56, 223, 29, 9, 0, 192, 64, 46, 68, 14, 219, 253, 147, 50, 11, 19, 137, 221, 155, 138, 218, 158, 229, 173, 246, 88, 174, 25, 254, 33, 183, 36, 225, 37, 253, 227, 189, 101, 208, 0, 221, 182, 33, 182, 19, 91, 122, 203, 135, 28, 3, 64, 70, 127, 11, 153, 249, 112, 18, 168, 18, 39, 48, 34, 86, 183, 28, 109, 53, 39, 85, 35, 13, 155, 172, 36, 125, 46, 154, 155, 221, 226, 145, 225, 29, 119, 221, 97, 25, 99, 233, 77, 82, 39, 238, 182, 134, 254, 96, 92, 63, 13, 150, 95, 199, 224, 51, 171, 210, 231, 28, 203, 214, 119, 202, 47, 149, 79, 4, 223, 217, 186, 84, 209, 62, 8, 208, 229, 172, 246, 158, 126, 205, 62, 92, 208, 75, 50, 26, 61, 67, 50, 143, 49, 70, 30, 119, 219, 93, 190, 33, 55, 249, 129, 130, 132, 185, 196, 33, 190, 15, 77, 254, 219, 73, 157, 253, 151, 26, 250, 228, 98, 52, 199, 155, 166, 43, 34, 139, 32, 145, 245, 136, 237, 213, 102, 133, 76, 187, 215, 23, 135, 16, 91, 46, 246, 52, 179, 231, 168, 32, 223, 192, 98, 218, 190, 2, 50, 230, 219, 89, 150, 57, 1, 45, 25, 197, 16, 6, 226, 24, 177, 220, 66, 227, 92, 81, 217, 152, 164, 114, 119, 58, 226, 0, 178, 53, 37, 19, 23, 100, 82, 101, 223, 126, 128, 77, 15, 46, 20, 48, 35, 173, 5, 144, 110, 2, 125, 127, 125, 108, 41, 153, 65, 105, 226, 92, 87, 1, 122, 228, 160, 253, 239, 126, 198, 76, 252, 196, 99, 15, 66, 170, 132, 116, 79, 201, 53, 81, 145, 175, 183, 165, 149, 170, 59, 184, 36, 118, 156, 35, 246, 14, 179, 48, 144, 38, 190, 134, 201, 33, 5, 185, 28, 110, 42, 126, 21, 205, 26, 24, 39, 5, 111, 203, 44, 250, 103, 68, 66, 14, 40, 134, 40, 64, 25, 51, 247, 84, 227, 40, 11, 174, 136, 111, 170, 254, 137, 39, 128, 189, 162, 86, 91, 131, 251, 240, 159, 232, 3, 150, 190, 121, 68, 187, 249, 127, 144, 219, 85, 246, 135, 193, 234, 241, 12, 121, 125, 255, 33, 46, 112, 64, 195, 133, 107, 209, 42, 164, 68, 40, 148, 15, 80, 76, 106, 145, 105, 204, 118, 43, 109, 173, 210, 138, 53, 224, 108, 106, 119, 130, 115, 159, 199, 213, 38, 126, 182, 190, 80, 40, 84, 235, 151, 44, 98, 119, 112, 157, 135, 122, 15, 176, 137, 245, 192, 194, 110, 57, 79, 138, 101, 192, 45, 193, 181, 244, 71, 123, 38, 236, 219, 171, 124, 78, 214, 129, 22, 165, 39, 189, 111, 206, 226, 252, 114, 194, 22, 209, 20, 99, 15, 124, 111, 197, 194, 148, 190, 213, 118, 109, 48, 245, 118, 155, 159, 100, 52, 59, 31, 62, 171, 200, 17, 145, 26, 150, 221, 48, 78, 243, 221, 118, 102, 194, 220, 94, 60, 182, 139, 66, 195, 64, 46, 185, 141, 122, 88, 71, 93, 14, 141, 219, 178, 214, 183, 70, 107, 221, 171, 43, 182, 141, 134, 131, 143, 185, 142, 180, 191, 65, 40, 126, 175, 220, 123, 107, 153, 87, 3, 159, 62, 149, 211, 64, 101, 2, 196, 144, 10, 149, 243, 94, 10, 95, 139, 53, 185, 171, 42, 212, 236, 164, 136, 28, 230, 15, 43, 213, 91, 76, 172, 19, 217, 11, 237, 32, 186, 70, 30, 141, 244, 253, 169, 41, 77, 201, 115, 80, 80, 69, 177, 238, 45, 47, 179, 154, 13, 183, 89, 85, 215, 239, 53, 190, 232, 223, 133, 255, 114, 106, 122, 115, 140, 156, 223, 238, 250, 95, 206, 28, 156, 219, 132, 21, 154, 190, 230, 170, 88, 82, 19, 3, 236, 200, 181, 5, 200, 235, 64, 110, 68, 116, 221, 229, 203, 62, 97, 144, 79, 197, 159, 174, 233, 60, 185, 252, 106, 31, 35 } },
                    { 6, "Outdoors", new DateTime(2022, 6, 10, 21, 56, 48, 902, DateTimeKind.Local).AddTicks(8270), null, "velit", 46635, new byte[] { 31, 160, 196, 226, 177, 64, 225, 157, 24, 217, 255, 122, 171, 46, 106, 179, 236, 96, 92, 19, 96, 70, 55, 212, 255, 64, 234, 186, 157, 1, 215, 129, 56, 13, 187, 66, 130, 18, 57, 191, 15, 88, 255, 243, 194, 78, 93, 153, 23, 219, 251, 69, 98, 238, 85, 217, 105, 240, 227, 113, 86, 39, 0, 22, 2, 126, 65, 158, 114, 40, 49, 217, 39, 157, 4, 8, 70, 67, 18, 177, 227, 80, 162, 194, 6, 145, 30, 73, 183, 226, 216, 145, 46, 199, 104, 231, 88, 232, 241, 67, 12, 190, 38, 239, 169, 33, 30, 197, 234, 77, 146, 38, 222, 50, 142, 6, 132, 62, 16, 112, 96, 247, 230, 144, 79, 160, 170, 95, 52, 28, 176, 94, 81, 206, 164, 36, 41, 179, 24, 229, 115, 88, 95, 106, 79, 177, 178, 252, 57, 98, 99, 26, 216, 129, 226, 21, 215, 150, 159, 8, 118, 190, 144, 205, 157, 52, 213, 16, 141, 106, 220, 209, 37, 42, 252, 8, 151, 124, 65, 157, 238, 174, 38, 210, 185, 150, 133, 207, 235, 143, 76, 147, 19, 16, 111, 181, 199, 146, 205, 26, 220, 162, 110, 207, 134, 145, 244, 174, 133, 218, 125, 91, 84, 2, 26, 199, 152, 190, 20, 7, 175, 5, 36, 254, 29, 72, 190, 20, 186, 70, 64, 5, 174, 38, 193, 75, 63, 87, 76, 39, 161, 214, 73, 17, 17, 240, 62, 17, 245, 167, 28, 9, 125, 198, 107, 214, 126, 112, 177, 61, 211, 224, 243, 62, 154, 120, 172, 46, 64, 206, 136, 65, 114, 237, 101, 216, 188, 19, 236, 45, 9, 173, 30, 19, 41, 54, 135, 232, 187, 234, 205, 207, 166, 14, 83, 192, 227, 11, 118, 153, 67, 16, 208, 39, 31, 219, 151, 144, 96, 146, 26, 107, 131, 131, 52, 38, 193, 224, 20, 99, 240, 196, 114, 86, 0, 184, 155, 99, 153, 165, 245, 176, 156, 82, 233, 248, 220, 247, 243, 78, 159, 246, 135, 40, 207, 98, 75, 34, 218, 44, 255, 3, 246, 18, 168, 127, 157, 121, 38, 102, 64, 51, 246, 187, 157, 105, 206, 48, 154, 59, 73, 201, 236, 198, 196, 249, 60, 74, 134, 157, 109, 121, 137, 109, 165, 241, 186, 137, 169, 105, 90, 99, 208, 141, 13, 107, 255, 204, 139, 102, 147, 26, 135, 159, 226, 53, 23, 47, 78, 175, 66, 83, 243, 136, 248, 199, 170, 137, 21, 172, 175, 69, 134, 49, 224, 230, 249, 94, 184, 88, 249, 112, 191, 32, 9, 83, 242, 234, 138, 111, 218, 138, 58, 250, 38, 7, 111, 71, 148, 70, 193, 118, 182, 222, 182, 78, 147, 86, 190, 251, 60, 184, 119, 245, 181, 210, 148, 210, 127, 165, 213, 192, 255, 165, 209, 36, 10, 140, 10, 217, 119, 177, 202, 114, 151, 131, 185, 224, 105, 187, 191, 156, 43, 142, 51, 33, 19, 68, 69, 83, 114, 157, 200, 238, 113, 0, 118, 17, 13, 145, 67, 7, 75, 229, 132, 138, 238, 5, 94, 49, 25, 180, 105, 195, 230, 57, 149, 112, 114, 176, 17, 197, 70, 182, 102, 218, 233, 219, 0, 150, 13, 168, 211, 215, 119, 184, 80, 69, 9, 168, 51, 14, 230, 19, 58, 190, 52, 4, 8, 56, 107, 5, 158, 93, 128, 126, 192, 149, 127, 170, 161, 18, 4, 199, 36, 113, 225, 145, 76, 45, 232, 79, 102, 201, 124, 3, 222, 50, 124, 167, 166, 228, 210, 200, 42, 7, 9, 118, 87, 249, 247, 187, 198, 95, 7, 32, 9, 31, 239, 200, 221, 162, 184, 218, 79, 28, 158, 213, 224, 124, 159, 142, 24, 215, 4, 188, 63, 59, 156, 28, 104, 107, 57, 82, 54, 45, 137, 7, 193, 91, 249, 191, 67, 179, 202, 3, 44, 248, 121, 14, 104, 51, 149, 218, 90, 105, 162, 238, 90, 74, 224, 206, 130, 210, 96, 113, 105, 101, 164, 34, 147, 151, 19, 132, 131, 223, 74, 101, 13, 1, 144, 71, 194, 141, 180, 52, 213, 95, 248, 205, 138, 154, 172, 119, 122, 43, 60, 112, 82, 88, 153, 198, 83, 87, 123, 209, 31, 16, 87, 122, 30, 61, 225, 89, 185, 153, 12, 244, 30, 44, 156, 10, 109, 215, 151, 248, 234, 156, 9, 88, 162, 218, 18, 180, 103, 202, 243, 107, 18, 226, 20, 196, 7, 125, 174, 77, 185, 83, 189, 225, 31, 72, 82, 38, 188, 143, 88, 124, 191, 131, 231, 130, 6, 255, 216, 68, 42, 44, 241, 239, 165, 160, 226, 59, 23, 215, 2, 240, 40, 74, 62, 150, 223, 40, 56, 90, 135, 236, 248, 215, 113, 119, 171, 143, 251, 146, 189, 8, 164, 106, 34, 141, 98, 205, 60, 126, 101, 23, 14, 228, 141, 104, 83, 117, 68, 80, 162, 222, 198, 126, 188, 62, 52, 25, 126, 45, 245, 82, 63, 133, 25, 250, 75, 190, 39, 177, 52, 18, 235, 186, 244, 112, 221, 19, 74, 8, 35, 54, 75, 170, 239, 223, 65, 38, 173, 228, 88, 72, 79, 14, 136, 19, 215, 137, 203, 147, 29, 149, 77, 146, 28, 144, 242, 12, 137, 75, 97, 32, 207, 117, 10, 191, 7, 148, 150, 58, 184, 36, 16, 67, 88, 235, 194, 221, 49, 224, 153, 83, 72, 183, 235, 142, 233, 184, 141, 94, 236, 53, 156, 98, 131, 56, 121, 217, 4, 201, 12, 66, 243, 144, 218, 248, 132, 9, 57, 48, 206, 21, 218, 168, 178, 13, 216, 23, 138, 124, 214, 78, 6, 55, 77, 130, 135, 174, 192, 32, 114, 232, 216, 103, 212, 86, 95, 183, 220, 242, 9, 223, 127, 92, 144, 215, 90, 243, 175, 117, 96, 97, 79, 136, 243, 189, 59, 187, 67, 87, 113, 214, 72, 24, 190, 229, 60, 114, 212, 91, 173, 32, 58, 152, 114, 246, 207, 169, 167, 118, 40, 147, 254, 75, 192, 17, 153, 80, 116, 23, 26, 163, 116, 133, 129, 51, 151, 102, 158, 170, 154, 232, 31, 84, 199, 63, 38, 183 } },
                    { 7, "Movies", new DateTime(2022, 8, 14, 5, 26, 48, 317, DateTimeKind.Local).AddTicks(7382), null, "est", 33686, new byte[] { 75, 99, 4, 246, 149, 98, 225, 104, 255, 65, 153, 234, 31, 178, 1, 176, 97, 177, 56, 13, 60, 168, 255, 119, 130, 102, 42, 4, 41, 233, 50, 20, 139, 175, 84, 228, 31, 130, 91, 49, 104, 156, 95, 101, 178, 132, 197, 166, 82, 230, 37, 180, 103, 34, 124, 162, 100, 141, 115, 47, 55, 221, 63, 22, 15, 133, 95, 112, 94, 29, 144, 223, 85, 6, 164, 160, 73, 154, 196, 253, 160, 132, 177, 67, 196, 125, 172, 104, 50, 177, 127, 146, 14, 44, 250, 139, 93, 72, 85, 45, 37, 85, 72, 53, 85, 69, 95, 96, 126, 220, 89, 202, 200, 118, 143, 179, 43, 252, 81, 145, 216, 247, 61, 172, 158, 253, 209, 41, 12, 24, 66, 0, 68, 151, 216, 74, 59, 124, 237, 126, 30, 75, 233, 86, 87, 180, 202, 152, 157, 70, 96, 97, 247, 196, 84, 45, 23, 155, 150, 87, 116, 53, 84, 102, 153, 88, 134, 48, 157, 68, 119, 175, 14, 210, 114, 140, 14, 231, 84, 233, 51, 56, 140, 197, 184, 225, 9, 127, 66, 170, 51, 160, 229, 150, 10, 233, 247, 130, 188, 254, 46, 153, 250, 89, 207, 176, 82, 36, 82, 200, 31, 48, 70, 172, 36, 59, 169, 142, 174, 183, 79, 7, 238, 243, 17, 215, 202, 120, 200, 137, 148, 139, 43, 85, 187, 154, 62, 51, 246, 7, 143, 228, 44, 122, 139, 3, 89, 56, 114, 207, 64, 105, 212, 4, 175, 39, 171, 7, 72, 247, 230, 218, 92, 201, 51, 148, 4, 241, 241, 137, 252, 117, 151, 166, 40, 107, 218, 115, 103, 13, 126, 145, 6, 249, 72, 43, 182, 38, 166, 148, 238, 55, 235, 254, 33, 180, 135, 99, 71, 247, 254, 104, 71, 232, 210, 202, 209, 46, 220, 67, 76, 55, 159, 58, 121, 85, 212, 99, 128, 7, 221, 222, 74, 93, 155, 197, 138, 153, 132, 115, 227, 118, 44, 112, 15, 22, 74, 30, 38, 126, 89, 136, 74, 99, 71, 183, 152, 177, 132, 204, 224, 36, 226, 63, 25, 31, 29, 233, 77, 12, 64, 56, 169, 104, 96, 214, 10, 47, 42, 99, 10, 182, 60, 2, 174, 85, 147, 231, 22, 227, 45, 217, 20, 184, 147, 190, 147, 237, 86, 239, 248, 96, 209, 26, 61, 32, 222, 226, 3, 112, 173, 105, 134, 33, 193, 42, 232, 224, 145, 196, 139, 54, 211, 105, 223, 103, 36, 241, 213, 161, 66, 29, 216, 58, 107, 170, 229, 34, 196, 141, 118, 177, 228, 165, 54, 196, 82, 242, 246, 104, 214, 179, 91, 146, 99, 193, 141, 103, 58, 214, 252, 237, 12, 97, 46, 143, 144, 76, 182, 23, 69, 197, 28, 3, 77, 218, 82, 46, 51, 27, 21, 49, 250, 108, 202, 143, 193, 70, 214, 169, 29, 125, 231, 237, 145, 136, 164, 130, 118, 166, 51, 5, 60, 223, 35, 16, 151, 88, 68, 137, 110, 94, 51, 30, 193, 202, 243, 160, 151, 159, 206, 74, 117, 12, 249, 199, 221, 46, 114, 197, 53, 208, 183, 141, 232, 15, 245, 26, 73, 185, 248, 105, 2, 76, 59, 190, 74, 201, 44, 198, 149, 4, 234, 215, 216, 233, 143, 47, 229, 91, 50, 104, 229, 126, 84, 157, 167, 166, 54, 177, 213, 216, 87, 222, 167, 101, 71, 40, 209, 59, 125, 20, 2, 172, 47, 48, 230, 223, 181, 254, 127, 197, 53, 237, 134, 143, 131, 131, 248, 157, 22, 163, 146, 122, 241, 188, 172, 12, 48, 115, 161, 103, 93, 170, 222, 30, 102, 57, 79, 35, 183, 200, 241, 55, 50, 15, 163, 105, 87, 23, 225, 196, 48, 52, 36, 217, 130, 136, 186, 115, 131, 217, 174, 65, 93, 24, 103, 139, 15, 104, 41, 74, 52, 212, 229, 78, 178, 90, 71, 225, 24, 67, 180, 25, 145, 220, 54, 41, 133, 4, 155, 222, 126, 219, 159, 222, 25, 175, 218, 26, 167, 24, 90, 239, 238, 151, 144, 91, 79, 214, 39, 39, 64, 217, 90, 64, 36, 149, 176, 128, 225, 62, 5, 10, 204, 74, 203, 88, 53, 7, 53, 2, 128, 45, 57, 0, 232, 197, 42, 250, 76, 219, 218, 175, 221, 115, 158, 165, 128, 94, 185, 131, 254, 89, 56, 105, 18, 79, 34, 163, 203, 55, 37, 72, 160, 36, 167, 18, 159, 90, 87, 94, 106, 182, 52, 6, 100, 86, 45, 89, 172, 38, 216, 214, 77, 177, 3, 39, 245, 208, 237, 153, 163, 135, 46, 21, 181, 145, 14, 184, 204, 139, 5, 38, 6, 90, 24, 72, 37, 50, 5, 187, 34, 201, 246, 165, 95, 79, 250, 239, 32, 128, 29, 207, 108, 190, 187, 227, 135, 30, 80, 210, 72, 116, 140, 33, 32, 178, 207, 242, 152, 187, 2, 194, 202, 49, 119, 218, 144, 137, 182, 102, 151, 30, 152, 75, 109, 54, 185, 71, 159, 53, 192, 6, 226, 51, 115, 173, 60, 213, 132, 173, 127, 8, 86, 101, 126, 91, 4, 58, 71, 225, 82, 254, 104, 234, 59, 41, 220, 65, 179, 234, 248, 135, 83, 98, 250, 251, 224, 151, 190, 201, 157, 187, 5, 9, 230, 143, 200, 51, 205, 18, 49, 126, 0, 189, 226, 194, 157, 247, 248, 73, 209, 251, 34, 153, 180, 247, 180, 243, 106, 130, 122, 109, 124, 126, 67, 151, 249, 95, 3, 171, 97, 169, 115, 160, 185, 122, 135, 150, 128, 56, 93, 232, 158, 117, 248, 162, 153, 107, 85, 239, 218, 212, 200, 75, 152, 195, 2, 130, 122, 75, 201, 62, 244, 76, 231, 40, 136, 129, 224, 57, 111, 30, 115, 50, 36, 145, 206, 6, 133, 160, 254, 141, 10, 19, 209, 141, 224, 39, 8, 245, 120, 5, 28, 52, 111, 31, 244, 82, 141, 208, 26, 23, 139, 27, 128, 188, 96, 149, 38, 6, 244, 251, 252, 217, 76, 59, 52, 224, 123, 90, 71, 96, 121, 234, 193, 106, 2, 63, 195, 5, 157, 124, 120, 181, 134, 231, 2, 238, 147, 20, 44, 74 } },
                    { 8, "Computers", new DateTime(2022, 10, 17, 12, 56, 47, 732, DateTimeKind.Local).AddTicks(6495), null, "consequatur", 20736, new byte[] { 118, 39, 68, 9, 120, 132, 224, 52, 230, 170, 51, 91, 147, 53, 153, 173, 215, 1, 20, 6, 24, 10, 199, 26, 5, 139, 107, 77, 181, 209, 142, 167, 221, 81, 236, 134, 189, 241, 125, 164, 194, 224, 190, 214, 163, 187, 46, 179, 141, 241, 79, 36, 108, 87, 163, 108, 95, 41, 3, 237, 24, 146, 126, 21, 28, 139, 126, 65, 73, 19, 239, 229, 132, 112, 67, 55, 76, 241, 119, 73, 93, 184, 191, 196, 130, 105, 59, 134, 173, 128, 38, 148, 238, 144, 139, 47, 98, 169, 186, 23, 61, 236, 106, 122, 1, 105, 160, 252, 19, 107, 31, 110, 177, 186, 143, 96, 211, 186, 147, 178, 80, 247, 148, 200, 237, 91, 247, 243, 228, 19, 213, 162, 55, 96, 12, 113, 77, 69, 194, 24, 201, 63, 115, 65, 96, 183, 226, 51, 1, 43, 92, 168, 21, 7, 199, 69, 87, 161, 141, 166, 114, 172, 23, 255, 150, 125, 55, 81, 174, 30, 18, 141, 247, 123, 232, 17, 132, 83, 104, 53, 120, 195, 242, 185, 183, 45, 140, 47, 153, 198, 25, 172, 183, 27, 165, 29, 39, 115, 171, 227, 128, 144, 133, 226, 24, 206, 176, 154, 31, 181, 193, 4, 57, 87, 45, 175, 185, 94, 72, 104, 240, 8, 184, 231, 4, 102, 213, 219, 213, 203, 233, 17, 167, 133, 181, 232, 61, 15, 160, 232, 125, 241, 15, 227, 5, 21, 115, 96, 238, 246, 99, 201, 43, 66, 242, 119, 216, 157, 222, 178, 248, 212, 197, 84, 203, 175, 92, 179, 162, 69, 113, 170, 189, 95, 235, 254, 248, 212, 226, 238, 243, 117, 237, 222, 103, 32, 229, 100, 146, 61, 16, 159, 48, 238, 239, 168, 44, 187, 23, 85, 184, 191, 190, 168, 132, 185, 12, 203, 87, 244, 127, 3, 186, 240, 191, 131, 231, 230, 236, 171, 202, 248, 33, 100, 53, 209, 121, 206, 112, 66, 210, 60, 189, 141, 54, 51, 183, 68, 90, 174, 19, 25, 12, 157, 190, 12, 228, 64, 47, 108, 193, 69, 207, 107, 138, 192, 157, 89, 115, 179, 64, 61, 91, 21, 34, 66, 70, 45, 185, 139, 203, 162, 140, 62, 152, 176, 235, 131, 165, 40, 236, 56, 159, 3, 128, 140, 109, 81, 3, 118, 149, 93, 209, 166, 110, 213, 189, 247, 123, 123, 198, 183, 134, 163, 160, 31, 185, 145, 211, 217, 213, 26, 179, 74, 198, 7, 158, 88, 148, 150, 213, 245, 42, 67, 245, 109, 208, 229, 208, 194, 243, 243, 8, 42, 98, 53, 178, 251, 99, 97, 211, 219, 125, 41, 160, 123, 170, 134, 224, 102, 55, 101, 99, 228, 166, 208, 141, 66, 173, 50, 78, 211, 193, 17, 230, 225, 17, 137, 232, 145, 85, 163, 244, 51, 194, 249, 120, 0, 162, 122, 195, 73, 5, 105, 138, 141, 144, 36, 132, 145, 167, 111, 77, 48, 18, 0, 26, 107, 66, 191, 106, 32, 158, 78, 17, 148, 112, 48, 33, 172, 88, 141, 159, 51, 111, 4, 205, 87, 135, 88, 80, 237, 5, 86, 234, 229, 85, 196, 32, 194, 222, 12, 189, 227, 15, 162, 171, 182, 87, 246, 29, 96, 2, 215, 56, 26, 207, 25, 193, 14, 50, 195, 228, 233, 110, 125, 27, 72, 100, 43, 62, 171, 15, 95, 205, 76, 207, 188, 35, 204, 89, 23, 0, 144, 59, 240, 234, 45, 29, 207, 22, 59, 3, 17, 144, 27, 40, 212, 116, 146, 135, 98, 81, 43, 183, 113, 80, 163, 9, 236, 75, 18, 245, 244, 180, 27, 194, 83, 174, 126, 146, 237, 42, 148, 21, 2, 168, 253, 206, 178, 35, 251, 71, 145, 68, 246, 197, 212, 217, 202, 159, 71, 35, 49, 132, 3, 70, 14, 93, 117, 88, 212, 37, 246, 0, 154, 56, 189, 22, 180, 200, 82, 212, 87, 200, 80, 202, 100, 175, 190, 86, 238, 122, 228, 222, 74, 201, 249, 15, 18, 188, 153, 160, 89, 89, 79, 213, 81, 145, 170, 189, 8, 190, 36, 1, 77, 115, 204, 104, 52, 56, 225, 94, 158, 30, 106, 90, 65, 24, 181, 208, 63, 173, 4, 248, 47, 177, 122, 254, 121, 122, 121, 211, 4, 0, 78, 48, 85, 227, 145, 214, 253, 144, 219, 217, 218, 59, 2, 58, 239, 244, 148, 57, 219, 218, 126, 90, 186, 44, 210, 155, 249, 205, 239, 185, 190, 14, 89, 157, 208, 58, 4, 93, 135, 222, 211, 174, 209, 42, 29, 244, 175, 63, 15, 132, 230, 64, 247, 42, 130, 243, 117, 41, 17, 246, 221, 47, 161, 33, 26, 204, 225, 100, 106, 180, 239, 54, 178, 253, 6, 207, 137, 143, 15, 222, 235, 185, 190, 106, 211, 126, 23, 47, 27, 221, 196, 219, 76, 144, 0, 163, 13, 176, 15, 80, 18, 75, 213, 90, 148, 176, 142, 250, 35, 178, 106, 230, 25, 50, 10, 36, 113, 54, 78, 156, 180, 177, 72, 140, 240, 20, 233, 33, 252, 98, 193, 216, 127, 190, 203, 160, 227, 99, 214, 35, 240, 29, 11, 105, 115, 221, 193, 26, 134, 220, 50, 215, 98, 115, 155, 97, 2, 73, 106, 128, 198, 108, 253, 193, 240, 145, 102, 91, 103, 106, 64, 13, 96, 42, 171, 151, 166, 223, 25, 18, 82, 207, 155, 32, 48, 234, 118, 12, 34, 106, 157, 154, 249, 85, 92, 131, 31, 74, 120, 225, 119, 102, 178, 27, 155, 37, 119, 55, 200, 4, 186, 34, 47, 87, 45, 247, 209, 221, 144, 6, 26, 90, 56, 253, 204, 166, 19, 10, 206, 40, 120, 92, 103, 55, 155, 235, 28, 127, 133, 10, 114, 63, 67, 30, 175, 123, 106, 162, 39, 100, 177, 66, 185, 113, 199, 28, 45, 181, 79, 244, 17, 109, 104, 160, 140, 93, 186, 248, 188, 66, 219, 82, 88, 134, 147, 219, 22, 26, 77, 81, 60, 113, 226, 106, 118, 53, 163, 245, 112, 126, 190, 103, 48, 144, 249, 5, 215, 163, 146, 82, 192, 113, 230, 229, 137, 95, 233, 51, 222 } },
                    { 9, "Grocery", new DateTime(2022, 12, 20, 20, 26, 47, 147, DateTimeKind.Local).AddTicks(5608), null, "consequatur", 7787, new byte[] { 162, 234, 132, 28, 92, 166, 223, 255, 206, 18, 204, 204, 6, 185, 49, 169, 76, 82, 240, 255, 245, 109, 143, 190, 136, 177, 172, 151, 66, 185, 233, 58, 47, 243, 132, 40, 91, 97, 159, 23, 28, 37, 30, 71, 147, 242, 150, 192, 201, 252, 121, 147, 113, 139, 202, 53, 90, 197, 147, 170, 249, 72, 189, 20, 41, 146, 156, 19, 52, 9, 78, 235, 178, 217, 227, 207, 78, 72, 42, 149, 26, 236, 206, 69, 63, 85, 201, 164, 40, 79, 205, 149, 205, 244, 29, 211, 103, 9, 30, 1, 86, 130, 140, 191, 174, 142, 225, 151, 167, 251, 230, 18, 155, 254, 144, 13, 122, 120, 212, 211, 200, 247, 235, 228, 59, 184, 29, 189, 188, 15, 104, 69, 42, 40, 63, 152, 95, 14, 151, 177, 116, 50, 252, 45, 104, 186, 250, 207, 100, 15, 89, 238, 52, 74, 57, 94, 151, 167, 131, 245, 112, 35, 218, 152, 146, 161, 232, 114, 190, 247, 173, 108, 224, 35, 94, 150, 251, 190, 124, 129, 190, 77, 88, 172, 182, 121, 16, 223, 239, 225, 0, 184, 138, 161, 64, 81, 87, 100, 154, 199, 209, 135, 17, 108, 97, 237, 14, 17, 236, 163, 98, 217, 43, 2, 55, 34, 202, 45, 225, 25, 144, 9, 130, 220, 247, 245, 225, 63, 226, 13, 62, 150, 36, 180, 175, 54, 60, 235, 75, 201, 107, 255, 242, 76, 126, 39, 141, 135, 106, 29, 134, 41, 130, 129, 54, 200, 5, 52, 117, 108, 11, 206, 46, 222, 100, 203, 180, 118, 82, 0, 230, 222, 226, 24, 173, 145, 22, 53, 94, 207, 103, 89, 212, 196, 134, 20, 20, 162, 125, 231, 49, 8, 118, 222, 189, 156, 208, 20, 232, 178, 114, 22, 52, 105, 55, 168, 70, 105, 211, 165, 177, 207, 214, 166, 4, 177, 249, 105, 88, 79, 183, 18, 248, 107, 207, 222, 104, 4, 91, 17, 192, 2, 77, 171, 92, 81, 36, 107, 141, 222, 205, 170, 207, 216, 53, 97, 49, 207, 217, 12, 162, 102, 187, 152, 251, 96, 30, 201, 153, 89, 63, 66, 14, 194, 229, 175, 130, 43, 73, 179, 140, 142, 220, 122, 129, 12, 66, 32, 53, 110, 172, 152, 42, 79, 110, 89, 70, 180, 175, 252, 51, 91, 209, 51, 158, 139, 156, 13, 243, 134, 223, 6, 134, 38, 127, 20, 137, 65, 22, 239, 30, 253, 147, 43, 173, 167, 24, 191, 83, 139, 104, 205, 123, 77, 128, 49, 188, 169, 219, 246, 111, 53, 45, 175, 142, 165, 18, 4, 207, 90, 207, 4, 158, 192, 222, 53, 199, 166, 134, 247, 114, 221, 185, 103, 29, 18, 138, 57, 165, 78, 87, 224, 101, 31, 127, 232, 207, 228, 156, 7, 149, 20, 239, 249, 187, 100, 46, 187, 111, 74, 105, 22, 35, 228, 132, 146, 124, 198, 145, 124, 27, 217, 94, 129, 2, 239, 158, 126, 65, 245, 102, 226, 9, 126, 97, 94, 237, 191, 172, 185, 227, 207, 202, 90, 228, 65, 189, 129, 155, 236, 108, 9, 83, 31, 236, 188, 181, 110, 247, 204, 197, 176, 121, 121, 228, 135, 12, 164, 130, 38, 165, 188, 25, 215, 153, 75, 14, 3, 156, 192, 49, 29, 227, 84, 136, 92, 142, 234, 146, 165, 168, 126, 200, 224, 244, 51, 86, 80, 118, 93, 53, 25, 254, 117, 71, 176, 239, 124, 134, 160, 173, 178, 209, 54, 154, 167, 204, 36, 240, 135, 248, 34, 17, 221, 125, 38, 244, 57, 227, 102, 245, 190, 141, 63, 139, 24, 31, 109, 13, 216, 109, 18, 99, 241, 248, 245, 173, 145, 69, 76, 102, 49, 95, 238, 101, 19, 7, 32, 247, 32, 187, 182, 153, 32, 171, 238, 36, 146, 170, 129, 136, 95, 22, 24, 26, 229, 190, 31, 228, 135, 121, 98, 243, 150, 255, 195, 95, 159, 218, 120, 16, 254, 117, 237, 29, 182, 121, 66, 69, 10, 209, 27, 231, 196, 196, 7, 26, 71, 211, 127, 84, 232, 60, 111, 167, 89, 194, 2, 32, 232, 143, 133, 183, 50, 112, 137, 233, 41, 250, 100, 108, 123, 217, 218, 182, 93, 123, 47, 209, 248, 168, 23, 204, 90, 36, 40, 194, 6, 69, 195, 244, 118, 33, 93, 122, 76, 99, 180, 83, 58, 29, 241, 76, 111, 19, 216, 14, 97, 185, 73, 222, 147, 48, 40, 63, 119, 185, 92, 14, 72, 199, 227, 227, 55, 111, 245, 89, 124, 96, 106, 250, 198, 220, 151, 218, 183, 203, 92, 71, 75, 26, 96, 76, 251, 229, 97, 69, 249, 29, 2, 147, 6, 166, 10, 114, 58, 13, 21, 255, 30, 126, 145, 1, 79, 79, 24, 182, 153, 77, 136, 172, 92, 21, 194, 45, 103, 150, 231, 81, 14, 175, 96, 94, 93, 215, 243, 31, 209, 36, 159, 170, 181, 93, 40, 204, 136, 94, 253, 172, 205, 170, 172, 171, 149, 86, 54, 240, 228, 220, 11, 164, 37, 195, 240, 111, 30, 51, 164, 120, 91, 248, 229, 116, 173, 221, 246, 255, 236, 245, 165, 8, 153, 59, 132, 100, 2, 180, 200, 6, 160, 3, 59, 244, 25, 251, 132, 242, 108, 185, 174, 84, 186, 133, 81, 212, 196, 55, 253, 184, 95, 55, 4, 238, 55, 3, 11, 234, 62, 140, 108, 105, 107, 157, 215, 88, 189, 241, 91, 178, 89, 3, 147, 50, 71, 80, 77, 19, 234, 175, 160, 202, 182, 16, 167, 105, 255, 76, 189, 21, 240, 154, 179, 224, 77, 68, 233, 28, 173, 248, 23, 211, 220, 75, 94, 91, 163, 209, 167, 230, 181, 247, 255, 143, 235, 161, 179, 90, 246, 110, 89, 113, 52, 69, 193, 190, 80, 179, 229, 2, 102, 48, 101, 241, 152, 205, 238, 107, 177, 75, 197, 45, 165, 214, 96, 249, 154, 36, 244, 171, 145, 143, 38, 63, 159, 165, 159, 150, 137, 160, 11, 240, 236, 164, 127, 132, 145, 14, 246, 30, 179, 72, 169, 170, 168, 43, 203, 93, 228, 200, 36, 43, 191, 57, 113 } },
                    { 10, "Kids", new DateTime(2023, 2, 23, 3, 56, 46, 562, DateTimeKind.Local).AddTicks(4724), null, "sed", 43838, new byte[] { 205, 173, 195, 47, 63, 200, 223, 203, 181, 122, 102, 61, 122, 60, 200, 166, 194, 163, 204, 249, 209, 207, 87, 97, 11, 214, 237, 224, 206, 161, 68, 206, 130, 149, 29, 202, 249, 209, 194, 137, 118, 105, 125, 184, 132, 41, 254, 205, 4, 7, 163, 3, 117, 191, 242, 254, 86, 98, 36, 104, 218, 254, 253, 20, 54, 152, 186, 229, 31, 254, 172, 240, 225, 67, 131, 103, 81, 159, 221, 226, 216, 31, 220, 198, 253, 65, 88, 194, 163, 30, 116, 151, 173, 89, 174, 119, 108, 105, 130, 235, 110, 25, 174, 5, 90, 178, 34, 50, 60, 138, 173, 182, 132, 65, 144, 186, 33, 54, 22, 244, 64, 248, 66, 1, 138, 21, 67, 135, 148, 11, 251, 231, 28, 241, 115, 190, 113, 215, 108, 74, 31, 37, 134, 24, 113, 189, 18, 107, 200, 244, 85, 53, 83, 141, 171, 118, 215, 173, 122, 68, 111, 154, 158, 49, 143, 197, 153, 147, 206, 209, 73, 74, 202, 203, 212, 26, 113, 41, 143, 205, 3, 216, 191, 160, 181, 197, 148, 143, 70, 252, 231, 196, 92, 39, 219, 133, 135, 85, 137, 171, 35, 127, 156, 246, 171, 11, 107, 135, 185, 144, 4, 173, 29, 173, 65, 150, 219, 253, 123, 201, 49, 10, 76, 209, 234, 132, 237, 162, 239, 79, 147, 28, 160, 227, 169, 132, 59, 200, 245, 169, 89, 12, 214, 182, 248, 57, 167, 175, 230, 69, 170, 137, 217, 191, 122, 24, 50, 203, 12, 38, 30, 201, 151, 105, 253, 231, 13, 57, 3, 188, 90, 18, 8, 210, 112, 36, 52, 150, 217, 176, 220, 62, 188, 170, 165, 9, 67, 225, 105, 145, 82, 112, 187, 206, 139, 144, 117, 108, 184, 16, 44, 110, 171, 42, 234, 151, 129, 7, 79, 86, 227, 155, 242, 92, 74, 223, 12, 237, 196, 243, 164, 43, 208, 114, 106, 234, 87, 57, 70, 223, 175, 200, 221, 200, 131, 110, 146, 146, 192, 14, 135, 60, 146, 18, 173, 182, 126, 95, 132, 171, 131, 135, 168, 197, 108, 1, 158, 57, 191, 255, 63, 71, 192, 111, 167, 27, 189, 41, 216, 219, 77, 122, 45, 181, 107, 103, 153, 189, 197, 179, 107, 248, 181, 154, 92, 39, 31, 24, 92, 130, 208, 88, 210, 192, 206, 64, 123, 34, 106, 145, 248, 85, 134, 168, 94, 9, 90, 242, 89, 4, 103, 224, 116, 12, 148, 71, 146, 38, 19, 128, 251, 165, 205, 86, 11, 244, 168, 108, 231, 43, 236, 119, 82, 51, 187, 22, 114, 12, 60, 82, 204, 45, 191, 87, 27, 239, 228, 198, 44, 135, 173, 84, 15, 234, 149, 83, 135, 47, 157, 105, 96, 237, 10, 45, 23, 239, 141, 64, 80, 125, 213, 133, 234, 192, 179, 206, 229, 117, 59, 27, 15, 226, 64, 96, 125, 151, 103, 103, 158, 103, 142, 66, 111, 210, 242, 222, 34, 145, 64, 43, 98, 164, 117, 174, 178, 40, 106, 79, 54, 199, 109, 18, 244, 129, 89, 126, 173, 170, 175, 128, 136, 37, 161, 233, 238, 146, 22, 24, 206, 213, 171, 83, 53, 16, 185, 107, 109, 145, 174, 85, 45, 24, 49, 215, 249, 124, 78, 237, 120, 115, 49, 120, 226, 191, 163, 60, 2, 139, 192, 31, 17, 82, 128, 97, 27, 26, 221, 228, 200, 238, 17, 27, 252, 90, 82, 111, 244, 202, 239, 113, 67, 40, 159, 90, 164, 51, 113, 117, 109, 125, 105, 225, 209, 142, 68, 219, 151, 208, 188, 223, 158, 106, 37, 138, 98, 21, 123, 135, 109, 51, 71, 55, 156, 78, 219, 233, 178, 37, 189, 231, 168, 104, 119, 75, 133, 47, 74, 109, 22, 119, 215, 36, 14, 15, 211, 217, 3, 21, 248, 142, 183, 233, 7, 57, 53, 49, 68, 130, 179, 90, 41, 113, 18, 212, 54, 54, 243, 218, 4, 50, 203, 14, 113, 246, 91, 35, 41, 140, 123, 1, 230, 156, 45, 46, 47, 191, 96, 61, 21, 84, 234, 200, 186, 187, 77, 101, 17, 57, 217, 156, 230, 40, 16, 197, 195, 169, 119, 17, 221, 18, 7, 184, 6, 177, 116, 140, 68, 228, 165, 119, 214, 181, 196, 176, 71, 3, 84, 182, 168, 246, 17, 240, 179, 223, 27, 189, 139, 103, 107, 134, 71, 78, 95, 2, 76, 50, 193, 9, 70, 193, 33, 45, 147, 97, 197, 48, 99, 96, 126, 191, 85, 193, 105, 231, 0, 23, 4, 38, 149, 183, 0, 220, 120, 31, 48, 136, 85, 193, 99, 20, 65, 75, 112, 230, 212, 228, 92, 82, 26, 234, 89, 43, 233, 171, 48, 133, 228, 120, 2, 53, 45, 154, 115, 143, 192, 68, 180, 116, 48, 60, 218, 161, 252, 105, 126, 10, 81, 130, 18, 28, 186, 178, 12, 170, 93, 212, 243, 204, 238, 171, 164, 221, 191, 46, 231, 166, 215, 224, 38, 144, 47, 232, 33, 221, 16, 184, 47, 127, 45, 38, 52, 97, 101, 229, 123, 123, 142, 201, 49, 235, 81, 231, 133, 133, 152, 252, 225, 206, 130, 215, 50, 112, 92, 130, 237, 210, 145, 46, 154, 165, 165, 115, 159, 200, 118, 66, 120, 218, 178, 107, 24, 14, 175, 58, 62, 71, 98, 155, 69, 19, 214, 97, 253, 85, 243, 195, 5, 226, 248, 168, 233, 95, 46, 140, 70, 221, 72, 189, 14, 86, 132, 6, 27, 22, 191, 36, 193, 34, 67, 165, 112, 245, 233, 134, 206, 67, 118, 74, 212, 178, 61, 149, 226, 9, 130, 185, 223, 34, 243, 97, 255, 164, 140, 238, 143, 207, 70, 230, 149, 207, 2, 226, 158, 82, 56, 243, 117, 168, 189, 2, 102, 253, 233, 91, 25, 238, 36, 17, 148, 6, 69, 158, 46, 226, 165, 203, 105, 250, 247, 255, 253, 144, 180, 5, 176, 90, 247, 144, 209, 142, 67, 55, 101, 241, 250, 1, 187, 48, 213, 160, 171, 52, 82, 143, 137, 100, 180, 188, 172, 109, 138, 122, 176, 190, 5, 214, 73, 227, 171, 190, 247, 148, 64, 5 } },
                    { 11, "Sports", new DateTime(2022, 4, 28, 11, 26, 45, 977, DateTimeKind.Local).AddTicks(3843), null, "in", 30889, new byte[] { 249, 113, 3, 66, 35, 234, 222, 150, 156, 227, 0, 174, 238, 192, 96, 162, 55, 243, 168, 242, 173, 49, 31, 4, 142, 252, 46, 42, 90, 136, 160, 97, 212, 55, 181, 108, 151, 64, 228, 252, 207, 173, 221, 41, 116, 96, 103, 218, 63, 18, 205, 114, 122, 243, 25, 199, 81, 254, 180, 38, 187, 180, 60, 19, 67, 159, 217, 182, 10, 244, 11, 246, 15, 172, 34, 255, 84, 246, 144, 46, 149, 83, 235, 71, 187, 45, 230, 224, 29, 237, 27, 152, 140, 189, 64, 27, 113, 202, 230, 213, 135, 176, 207, 74, 6, 215, 99, 205, 209, 25, 115, 90, 110, 133, 145, 104, 201, 244, 88, 21, 184, 248, 153, 29, 217, 115, 105, 81, 108, 7, 142, 138, 15, 186, 167, 229, 131, 160, 64, 228, 202, 24, 15, 3, 121, 192, 42, 6, 44, 216, 82, 124, 113, 208, 29, 142, 23, 178, 113, 147, 109, 17, 97, 202, 139, 233, 74, 179, 222, 171, 228, 40, 179, 115, 75, 159, 232, 149, 163, 25, 73, 98, 37, 147, 180, 17, 24, 62, 157, 24, 206, 209, 47, 173, 118, 185, 183, 69, 120, 144, 117, 118, 40, 128, 244, 42, 201, 253, 133, 125, 166, 129, 15, 88, 74, 10, 235, 205, 21, 122, 209, 11, 22, 198, 221, 19, 249, 6, 253, 145, 232, 162, 28, 19, 163, 210, 58, 164, 159, 138, 71, 26, 185, 31, 113, 76, 193, 214, 98, 108, 205, 233, 48, 253, 190, 105, 95, 97, 163, 225, 48, 195, 0, 244, 149, 3, 101, 252, 180, 119, 207, 71, 45, 139, 50, 183, 82, 247, 84, 145, 81, 34, 163, 144, 196, 254, 114, 31, 84, 58, 115, 216, 0, 190, 89, 132, 25, 196, 137, 110, 231, 197, 34, 234, 157, 134, 188, 164, 202, 7, 22, 103, 13, 18, 143, 14, 31, 112, 48, 151, 145, 69, 167, 121, 4, 246, 70, 111, 49, 174, 157, 142, 110, 230, 169, 139, 255, 184, 243, 62, 66, 205, 84, 77, 36, 11, 203, 238, 46, 75, 100, 168, 148, 241, 221, 161, 30, 169, 230, 166, 63, 76, 115, 28, 106, 136, 249, 39, 104, 3, 14, 102, 125, 241, 85, 195, 241, 90, 84, 249, 43, 88, 64, 229, 73, 244, 249, 124, 8, 8, 109, 86, 210, 76, 254, 245, 90, 56, 226, 156, 17, 163, 133, 43, 61, 254, 43, 162, 155, 25, 176, 195, 84, 236, 122, 231, 12, 141, 210, 117, 143, 124, 30, 95, 150, 184, 148, 48, 243, 96, 105, 184, 119, 184, 231, 135, 210, 21, 168, 75, 200, 86, 224, 239, 88, 170, 1, 229, 210, 23, 232, 204, 101, 109, 13, 148, 133, 37, 148, 133, 105, 251, 175, 59, 176, 247, 76, 155, 5, 243, 21, 247, 229, 135, 172, 56, 156, 47, 7, 236, 182, 174, 94, 219, 119, 156, 83, 9, 171, 82, 2, 172, 128, 35, 225, 205, 166, 165, 62, 97, 93, 102, 224, 223, 2, 241, 231, 222, 193, 212, 248, 85, 30, 168, 207, 187, 156, 211, 196, 19, 163, 66, 240, 178, 240, 104, 118, 194, 165, 222, 146, 247, 240, 166, 142, 79, 206, 127, 217, 133, 181, 116, 72, 215, 90, 173, 141, 215, 84, 38, 48, 210, 224, 42, 189, 27, 118, 45, 238, 153, 123, 37, 57, 226, 65, 1, 100, 119, 26, 127, 237, 29, 250, 62, 94, 47, 249, 24, 88, 66, 218, 158, 110, 127, 174, 191, 22, 197, 233, 114, 217, 160, 144, 64, 10, 144, 59, 102, 149, 89, 72, 22, 189, 212, 57, 19, 216, 161, 204, 142, 34, 93, 213, 171, 190, 220, 183, 186, 52, 129, 235, 158, 142, 167, 165, 76, 141, 185, 52, 205, 243, 146, 131, 255, 250, 196, 225, 153, 70, 155, 231, 116, 249, 91, 80, 124, 203, 228, 129, 45, 217, 129, 50, 19, 109, 170, 135, 21, 47, 236, 133, 30, 109, 255, 154, 143, 217, 214, 177, 249, 250, 29, 116, 153, 154, 118, 165, 51, 87, 40, 129, 168, 56, 6, 244, 113, 96, 111, 145, 79, 61, 204, 105, 89, 21, 200, 6, 250, 192, 192, 162, 244, 51, 135, 51, 187, 13, 153, 121, 246, 4, 83, 189, 6, 106, 221, 230, 102, 10, 40, 46, 105, 68, 97, 188, 46, 180, 26, 132, 209, 112, 171, 115, 150, 134, 140, 117, 176, 211, 56, 100, 199, 246, 154, 74, 233, 14, 99, 238, 55, 226, 159, 239, 151, 146, 56, 175, 209, 202, 4, 7, 243, 21, 167, 134, 89, 224, 39, 128, 222, 104, 53, 147, 209, 196, 103, 114, 170, 22, 211, 32, 81, 43, 76, 238, 208, 187, 219, 4, 77, 220, 163, 229, 207, 49, 113, 178, 79, 19, 241, 8, 230, 226, 16, 206, 173, 12, 29, 211, 42, 197, 5, 186, 247, 227, 181, 199, 200, 184, 182, 158, 5, 34, 51, 1, 196, 79, 196, 159, 82, 181, 35, 150, 37, 202, 57, 110, 27, 125, 65, 196, 158, 7, 217, 135, 215, 232, 237, 235, 124, 169, 233, 150, 93, 83, 3, 195, 175, 15, 10, 93, 71, 125, 128, 117, 162, 110, 149, 45, 169, 71, 172, 74, 119, 242, 0, 254, 73, 171, 41, 219, 98, 217, 35, 169, 203, 140, 57, 210, 199, 117, 190, 11, 115, 228, 124, 32, 134, 99, 229, 105, 83, 192, 65, 52, 253, 158, 31, 107, 83, 4, 122, 3, 229, 46, 251, 110, 90, 215, 170, 21, 53, 195, 102, 51, 136, 160, 215, 146, 117, 223, 120, 229, 198, 192, 136, 161, 152, 239, 171, 44, 109, 205, 127, 194, 251, 187, 37, 69, 232, 14, 198, 174, 185, 207, 52, 144, 90, 13, 172, 92, 199, 140, 245, 115, 140, 149, 61, 37, 165, 89, 214, 106, 43, 126, 168, 103, 67, 163, 56, 205, 122, 146, 169, 103, 25, 201, 43, 246, 140, 247, 71, 138, 66, 79, 100, 224, 216, 11, 54, 102, 125, 0, 159, 143, 56, 91, 130, 59, 39, 204, 76, 183, 212, 222, 225, 53, 226, 142, 89, 194, 105, 70, 152 } },
                    { 12, "Books", new DateTime(2022, 7, 1, 18, 56, 45, 392, DateTimeKind.Local).AddTicks(2956), null, "mollitia", 17939, new byte[] { 36, 52, 67, 86, 6, 12, 222, 98, 131, 75, 154, 30, 97, 67, 248, 159, 172, 68, 133, 235, 137, 147, 232, 168, 17, 34, 111, 116, 230, 112, 251, 244, 39, 217, 77, 14, 52, 176, 6, 110, 41, 242, 60, 154, 101, 151, 207, 231, 122, 29, 247, 226, 127, 39, 64, 145, 76, 154, 68, 228, 156, 106, 123, 18, 80, 165, 247, 136, 245, 234, 106, 252, 62, 22, 194, 151, 86, 77, 66, 122, 82, 135, 249, 201, 120, 25, 117, 255, 152, 188, 193, 154, 108, 34, 209, 191, 118, 42, 74, 191, 159, 70, 241, 144, 179, 251, 164, 105, 101, 169, 58, 254, 87, 201, 145, 21, 112, 178, 153, 54, 48, 248, 239, 57, 40, 208, 144, 28, 68, 2, 32, 44, 2, 131, 218, 11, 149, 105, 21, 125, 117, 12, 153, 239, 130, 195, 66, 162, 144, 188, 79, 195, 144, 19, 143, 167, 86, 184, 104, 226, 107, 136, 36, 99, 136, 13, 252, 212, 238, 133, 127, 6, 156, 28, 193, 36, 95, 0, 183, 101, 142, 237, 139, 135, 179, 93, 156, 238, 243, 51, 181, 221, 1, 51, 18, 237, 231, 54, 103, 116, 198, 109, 179, 10, 61, 72, 39, 116, 82, 107, 72, 86, 1, 2, 84, 125, 252, 157, 175, 43, 113, 13, 224, 187, 208, 162, 5, 105, 10, 211, 60, 40, 153, 66, 158, 32, 57, 128, 74, 107, 53, 39, 156, 136, 235, 94, 219, 254, 222, 148, 240, 73, 134, 59, 2, 185, 140, 248, 58, 155, 67, 189, 105, 126, 46, 31, 189, 190, 100, 51, 68, 123, 83, 68, 245, 73, 113, 88, 207, 113, 198, 6, 138, 118, 227, 242, 161, 93, 64, 228, 148, 65, 70, 174, 39, 120, 189, 29, 89, 204, 161, 28, 153, 171, 79, 116, 246, 66, 70, 184, 72, 52, 41, 200, 213, 60, 50, 243, 155, 59, 126, 95, 126, 128, 158, 3, 53, 164, 28, 125, 140, 83, 254, 3, 208, 169, 109, 223, 38, 110, 252, 95, 23, 135, 155, 96, 24, 125, 217, 235, 69, 202, 129, 30, 78, 65, 158, 25, 12, 76, 63, 81, 37, 201, 44, 244, 53, 37, 248, 43, 207, 82, 205, 45, 63, 31, 72, 247, 228, 62, 235, 183, 203, 49, 55, 194, 210, 224, 181, 142, 11, 83, 211, 217, 46, 170, 57, 77, 90, 167, 42, 242, 133, 173, 28, 242, 252, 83, 222, 47, 249, 166, 52, 205, 97, 135, 134, 244, 146, 106, 34, 84, 112, 105, 32, 123, 127, 243, 254, 148, 229, 250, 156, 61, 19, 248, 50, 29, 20, 68, 197, 126, 2, 134, 149, 100, 31, 5, 119, 167, 36, 68, 187, 240, 132, 213, 130, 28, 140, 160, 114, 8, 84, 73, 73, 254, 10, 247, 185, 104, 85, 104, 224, 77, 164, 163, 82, 233, 211, 188, 92, 122, 123, 87, 112, 161, 62, 171, 184, 61, 118, 21, 145, 116, 209, 188, 42, 184, 61, 151, 89, 40, 75, 15, 82, 187, 100, 110, 75, 225, 131, 152, 72, 207, 68, 248, 140, 253, 216, 167, 191, 94, 62, 123, 242, 63, 214, 107, 124, 232, 121, 154, 172, 60, 99, 52, 47, 108, 5, 181, 61, 208, 96, 215, 186, 222, 205, 193, 47, 216, 48, 45, 223, 149, 215, 251, 233, 207, 28, 19, 228, 248, 241, 99, 104, 232, 235, 11, 108, 16, 201, 31, 248, 35, 105, 238, 254, 103, 192, 19, 113, 21, 60, 163, 183, 75, 186, 22, 101, 103, 74, 95, 80, 241, 208, 69, 223, 253, 110, 210, 242, 193, 85, 31, 15, 16, 52, 188, 44, 232, 252, 130, 14, 8, 161, 207, 187, 78, 171, 28, 45, 213, 166, 4, 197, 105, 207, 6, 82, 36, 15, 1, 248, 238, 33, 175, 191, 28, 147, 167, 23, 254, 234, 124, 107, 200, 81, 71, 80, 1, 137, 145, 81, 82, 164, 29, 27, 80, 90, 166, 64, 46, 105, 7, 217, 251, 137, 32, 231, 241, 15, 159, 186, 3, 5, 46, 234, 41, 153, 253, 24, 136, 182, 81, 154, 126, 175, 166, 73, 3, 148, 111, 194, 237, 103, 232, 149, 226, 163, 111, 62, 49, 95, 94, 241, 234, 214, 78, 76, 118, 50, 241, 182, 92, 142, 184, 120, 23, 109, 91, 76, 227, 214, 227, 93, 160, 220, 205, 156, 29, 153, 8, 134, 42, 191, 230, 40, 88, 96, 176, 167, 97, 89, 211, 208, 162, 184, 102, 95, 175, 112, 126, 117, 72, 35, 90, 90, 124, 0, 81, 13, 9, 177, 47, 220, 42, 107, 140, 156, 167, 143, 32, 183, 188, 179, 234, 137, 3, 19, 187, 231, 118, 109, 237, 172, 27, 146, 62, 6, 100, 140, 172, 87, 14, 163, 157, 176, 42, 246, 165, 54, 43, 201, 183, 31, 80, 199, 184, 148, 56, 209, 87, 104, 69, 106, 150, 155, 196, 130, 193, 151, 45, 133, 56, 27, 227, 200, 168, 25, 21, 58, 95, 12, 109, 132, 187, 173, 182, 205, 92, 84, 218, 169, 206, 147, 52, 67, 18, 164, 12, 2, 235, 167, 53, 13, 9, 166, 145, 156, 60, 135, 30, 159, 127, 254, 114, 75, 251, 192, 174, 233, 229, 246, 38, 109, 189, 132, 183, 164, 231, 159, 181, 3, 13, 19, 78, 183, 215, 95, 123, 21, 28, 26, 145, 212, 53, 59, 42, 207, 33, 232, 71, 81, 246, 34, 29, 245, 129, 199, 80, 132, 238, 236, 180, 156, 210, 27, 145, 107, 175, 186, 116, 156, 69, 153, 205, 202, 100, 81, 55, 130, 90, 232, 131, 254, 87, 99, 13, 234, 246, 88, 53, 15, 15, 246, 39, 47, 101, 244, 2, 25, 169, 190, 32, 102, 116, 171, 12, 93, 85, 82, 145, 48, 143, 205, 42, 6, 105, 182, 69, 110, 14, 167, 117, 86, 133, 101, 141, 78, 114, 157, 101, 112, 78, 30, 217, 155, 199, 28, 138, 172, 87, 176, 148, 164, 199, 5, 127, 65, 203, 32, 198, 174, 175, 148, 11, 1, 72, 201, 225, 15, 30, 189, 234, 184, 236, 33, 225, 113, 244, 142, 62, 76, 44 } },
                    { 13, "Electronics", new DateTime(2022, 9, 4, 2, 26, 44, 807, DateTimeKind.Local).AddTicks(2067), null, "autem", 4989, new byte[] { 80, 247, 130, 105, 234, 45, 221, 45, 106, 180, 51, 143, 213, 199, 144, 156, 34, 149, 97, 229, 101, 246, 176, 75, 148, 71, 176, 189, 115, 88, 86, 135, 121, 123, 230, 176, 210, 32, 40, 225, 131, 54, 156, 11, 85, 206, 55, 244, 181, 40, 33, 81, 132, 92, 103, 90, 71, 55, 212, 162, 125, 31, 186, 18, 93, 171, 22, 90, 225, 223, 201, 2, 108, 127, 97, 47, 89, 164, 245, 198, 16, 187, 8, 74, 54, 5, 3, 29, 19, 139, 104, 155, 75, 134, 99, 99, 123, 138, 174, 169, 184, 221, 19, 213, 95, 31, 229, 4, 250, 56, 0, 162, 65, 13, 146, 194, 23, 112, 219, 87, 168, 248, 70, 85, 118, 45, 182, 230, 28, 254, 179, 206, 245, 76, 14, 50, 167, 50, 234, 22, 32, 255, 35, 218, 138, 197, 90, 62, 244, 161, 75, 10, 175, 86, 1, 191, 150, 190, 94, 49, 105, 254, 232, 251, 132, 50, 173, 245, 255, 95, 26, 228, 134, 196, 55, 168, 213, 107, 202, 176, 211, 119, 241, 122, 178, 168, 31, 158, 74, 79, 155, 233, 211, 184, 173, 33, 23, 39, 86, 88, 24, 100, 63, 148, 134, 102, 132, 234, 31, 88, 233, 42, 243, 173, 93, 241, 13, 109, 73, 220, 18, 14, 170, 175, 195, 48, 17, 205, 23, 22, 145, 174, 21, 113, 152, 111, 56, 92, 244, 75, 35, 53, 127, 241, 101, 112, 245, 38, 90, 187, 20, 169, 221, 122, 70, 10, 185, 143, 209, 85, 85, 183, 211, 9, 199, 59, 21, 129, 21, 238, 184, 176, 120, 253, 184, 220, 143, 185, 74, 82, 58, 235, 114, 91, 1, 231, 208, 155, 43, 142, 181, 169, 139, 158, 245, 108, 98, 117, 42, 41, 91, 116, 16, 108, 2, 99, 49, 224, 194, 105, 122, 0, 68, 126, 26, 106, 69, 119, 7, 223, 106, 121, 86, 135, 57, 15, 36, 218, 7, 75, 122, 25, 143, 32, 247, 198, 218, 6, 89, 158, 182, 240, 217, 193, 19, 181, 100, 12, 131, 139, 38, 235, 109, 74, 190, 226, 30, 137, 50, 243, 63, 86, 216, 118, 238, 97, 113, 35, 135, 84, 144, 63, 29, 105, 41, 122, 159, 148, 116, 132, 170, 23, 86, 124, 36, 143, 171, 68, 97, 20, 168, 81, 211, 102, 94, 95, 23, 99, 210, 177, 67, 65, 133, 47, 251, 231, 205, 4, 33, 68, 66, 138, 20, 174, 72, 39, 0, 92, 81, 95, 181, 44, 193, 114, 171, 62, 107, 183, 10, 201, 98, 60, 193, 194, 64, 105, 146, 38, 129, 61, 194, 167, 35, 29, 210, 30, 60, 36, 29, 55, 95, 187, 17, 115, 252, 23, 127, 18, 132, 188, 124, 22, 249, 87, 225, 5, 200, 82, 110, 222, 149, 217, 218, 20, 157, 13, 9, 164, 160, 141, 2, 70, 153, 211, 106, 166, 42, 77, 197, 41, 234, 127, 162, 197, 192, 172, 174, 203, 59, 204, 85, 233, 182, 63, 162, 133, 225, 253, 213, 238, 13, 219, 114, 246, 185, 53, 124, 38, 237, 58, 219, 122, 140, 69, 244, 21, 55, 21, 83, 241, 95, 61, 104, 211, 55, 24, 144, 90, 48, 229, 197, 45, 119, 215, 27, 15, 12, 171, 11, 139, 47, 135, 222, 0, 241, 218, 93, 113, 74, 141, 78, 203, 170, 228, 143, 207, 114, 159, 190, 161, 165, 34, 246, 8, 117, 174, 3, 181, 41, 228, 8, 139, 10, 199, 193, 216, 95, 103, 225, 93, 187, 30, 15, 163, 150, 250, 130, 147, 71, 75, 156, 109, 236, 106, 230, 13, 145, 214, 139, 67, 215, 167, 71, 101, 132, 194, 192, 226, 34, 183, 112, 11, 189, 97, 229, 134, 18, 82, 113, 122, 43, 111, 109, 221, 72, 154, 158, 160, 225, 180, 70, 137, 219, 158, 133, 19, 215, 169, 30, 212, 57, 160, 112, 144, 219, 144, 175, 139, 132, 96, 251, 62, 100, 16, 24, 103, 58, 105, 29, 233, 36, 32, 0, 110, 112, 230, 47, 31, 219, 210, 174, 104, 52, 157, 65, 138, 254, 221, 1, 183, 235, 18, 27, 129, 185, 8, 36, 202, 134, 29, 217, 109, 140, 52, 175, 24, 159, 2, 32, 245, 97, 143, 175, 178, 177, 146, 10, 199, 207, 141, 105, 92, 103, 101, 254, 17, 5, 127, 180, 104, 194, 101, 153, 189, 248, 64, 219, 255, 237, 40, 234, 251, 189, 12, 86, 91, 99, 105, 207, 38, 253, 92, 251, 248, 180, 124, 5, 38, 53, 158, 19, 32, 77, 183, 50, 251, 246, 242, 185, 112, 182, 10, 218, 167, 162, 109, 159, 91, 15, 163, 174, 155, 176, 142, 106, 102, 106, 160, 9, 124, 59, 181, 201, 78, 20, 202, 173, 5, 217, 90, 100, 113, 175, 94, 111, 243, 129, 83, 85, 70, 220, 170, 23, 146, 240, 119, 111, 191, 76, 204, 145, 85, 232, 61, 53, 1, 64, 139, 147, 216, 192, 154, 129, 181, 62, 61, 236, 81, 30, 119, 228, 22, 75, 194, 159, 144, 158, 55, 94, 156, 90, 237, 184, 12, 200, 15, 136, 114, 40, 110, 178, 246, 192, 125, 134, 66, 40, 98, 83, 179, 139, 29, 161, 213, 232, 123, 10, 38, 157, 164, 99, 9, 45, 246, 125, 210, 225, 116, 236, 47, 180, 121, 40, 175, 197, 238, 86, 205, 59, 93, 104, 60, 227, 171, 16, 60, 76, 227, 36, 77, 5, 97, 213, 132, 11, 168, 200, 201, 255, 180, 96, 179, 117, 36, 254, 17, 245, 241, 15, 250, 37, 60, 234, 63, 60, 38, 38, 130, 229, 64, 133, 254, 80, 159, 42, 82, 164, 164, 163, 28, 37, 140, 206, 134, 253, 180, 198, 190, 172, 255, 71, 90, 211, 41, 39, 200, 119, 149, 71, 228, 130, 70, 228, 191, 47, 98, 99, 214, 250, 171, 109, 80, 77, 243, 213, 152, 110, 99, 66, 135, 96, 103, 213, 230, 249, 42, 42, 38, 119, 97, 219, 15, 93, 191, 154, 222, 168, 14, 87, 155, 81, 240, 195, 1, 146, 247, 12, 224, 84, 142, 90, 19, 83, 192 } },
                    { 14, "Tools", new DateTime(2022, 11, 7, 9, 56, 44, 222, DateTimeKind.Local).AddTicks(1178), null, "doloribus", 41041, new byte[] { 124, 186, 194, 124, 205, 79, 221, 249, 81, 28, 205, 0, 73, 74, 39, 152, 151, 229, 61, 222, 65, 88, 120, 238, 24, 109, 240, 7, 255, 64, 178, 27, 203, 29, 126, 82, 112, 143, 74, 83, 221, 122, 252, 124, 70, 5, 160, 1, 240, 52, 76, 193, 136, 144, 142, 35, 66, 211, 100, 95, 94, 213, 250, 17, 106, 178, 52, 43, 204, 213, 40, 7, 154, 233, 1, 199, 92, 251, 168, 18, 205, 239, 22, 203, 244, 241, 146, 59, 142, 90, 15, 156, 43, 234, 245, 7, 128, 234, 18, 147, 208, 116, 53, 27, 11, 68, 38, 159, 142, 199, 199, 71, 42, 81, 146, 111, 190, 46, 29, 120, 32, 248, 157, 113, 197, 139, 220, 176, 244, 250, 70, 113, 232, 20, 66, 89, 185, 251, 191, 176, 203, 242, 172, 198, 147, 200, 114, 217, 88, 133, 72, 81, 205, 154, 115, 215, 214, 196, 85, 128, 103, 117, 171, 148, 129, 86, 94, 22, 15, 57, 181, 195, 111, 108, 173, 45, 76, 215, 222, 252, 25, 2, 88, 110, 177, 244, 163, 78, 161, 106, 130, 245, 166, 62, 72, 85, 71, 23, 69, 60, 106, 91, 202, 30, 207, 133, 226, 96, 236, 70, 139, 255, 229, 88, 103, 101, 29, 61, 227, 140, 178, 15, 117, 164, 182, 191, 28, 48, 36, 88, 230, 52, 146, 161, 146, 189, 55, 57, 158, 44, 18, 66, 98, 90, 222, 131, 16, 77, 215, 226, 55, 10, 52, 184, 138, 90, 230, 37, 104, 16, 104, 177, 60, 148, 95, 87, 109, 68, 198, 170, 45, 228, 158, 182, 122, 111, 173, 26, 197, 51, 175, 207, 89, 65, 32, 220, 255, 217, 22, 55, 214, 17, 208, 142, 196, 96, 6, 205, 250, 135, 21, 203, 135, 44, 181, 82, 107, 125, 61, 26, 173, 204, 96, 52, 96, 152, 88, 250, 115, 131, 87, 147, 45, 142, 211, 27, 19, 15, 242, 26, 105, 223, 31, 62, 29, 228, 71, 44, 140, 206, 112, 129, 156, 252, 138, 10, 177, 156, 46, 43, 7, 12, 90, 119, 47, 130, 158, 249, 89, 153, 62, 91, 138, 35, 177, 205, 173, 33, 23, 124, 81, 43, 109, 165, 19, 214, 247, 49, 3, 201, 106, 119, 225, 199, 18, 92, 133, 168, 14, 155, 69, 78, 211, 243, 143, 20, 246, 120, 74, 188, 93, 143, 133, 178, 218, 220, 158, 180, 99, 89, 139, 109, 245, 143, 47, 199, 122, 195, 16, 84, 72, 4, 19, 124, 54, 2, 87, 122, 22, 254, 223, 126, 230, 71, 108, 218, 242, 47, 237, 53, 190, 208, 68, 180, 15, 216, 89, 68, 195, 199, 154, 51, 104, 246, 116, 88, 124, 9, 123, 215, 133, 35, 158, 101, 122, 13, 135, 173, 34, 84, 213, 75, 213, 219, 150, 120, 192, 94, 108, 93, 168, 18, 183, 78, 99, 171, 22, 239, 211, 20, 94, 233, 179, 21, 176, 155, 49, 222, 58, 2, 81, 171, 33, 111, 242, 79, 93, 141, 96, 252, 152, 29, 156, 29, 46, 114, 108, 79, 1, 206, 246, 151, 218, 14, 246, 235, 151, 191, 42, 250, 70, 225, 35, 105, 12, 252, 241, 71, 91, 20, 77, 137, 143, 214, 124, 64, 76, 149, 231, 62, 46, 226, 221, 107, 11, 185, 208, 19, 120, 7, 183, 158, 98, 101, 181, 182, 249, 51, 17, 49, 129, 36, 244, 236, 128, 109, 7, 3, 146, 181, 159, 1, 216, 236, 203, 100, 4, 183, 93, 82, 44, 222, 207, 84, 93, 175, 38, 42, 32, 197, 70, 25, 132, 181, 189, 10, 237, 240, 235, 158, 178, 205, 128, 194, 103, 181, 197, 118, 153, 81, 178, 66, 213, 190, 5, 162, 85, 159, 143, 209, 71, 221, 226, 205, 111, 133, 124, 35, 47, 193, 118, 19, 204, 191, 160, 94, 93, 12, 236, 167, 233, 176, 144, 207, 19, 4, 67, 198, 175, 26, 181, 78, 96, 25, 86, 212, 234, 179, 83, 225, 57, 162, 71, 216, 219, 158, 117, 21, 29, 166, 69, 72, 178, 232, 231, 150, 77, 19, 185, 107, 66, 182, 116, 20, 11, 39, 179, 179, 104, 204, 116, 170, 185, 11, 110, 71, 105, 183, 243, 116, 143, 46, 168, 8, 213, 109, 156, 120, 50, 191, 134, 214, 249, 231, 159, 130, 45, 50, 205, 180, 235, 194, 172, 81, 50, 154, 143, 167, 122, 159, 45, 149, 32, 69, 220, 20, 13, 108, 63, 158, 139, 58, 128, 168, 69, 158, 176, 209, 107, 235, 26, 54, 234, 63, 136, 205, 129, 87, 214, 58, 221, 245, 254, 146, 146, 240, 182, 179, 11, 139, 116, 193, 242, 47, 40, 176, 65, 3, 11, 147, 234, 190, 59, 142, 133, 247, 171, 224, 188, 15, 146, 182, 150, 5, 192, 150, 60, 238, 22, 84, 231, 252, 197, 223, 118, 88, 67, 187, 22, 215, 139, 125, 75, 66, 79, 31, 185, 111, 12, 155, 69, 213, 247, 252, 248, 190, 43, 237, 110, 146, 116, 82, 237, 182, 171, 237, 248, 91, 24, 44, 179, 240, 201, 228, 131, 21, 106, 83, 181, 160, 220, 205, 225, 123, 15, 17, 5, 200, 231, 183, 45, 86, 76, 132, 99, 57, 144, 148, 150, 98, 38, 93, 87, 224, 231, 85, 12, 18, 121, 227, 84, 215, 55, 205, 181, 166, 113, 113, 167, 154, 232, 48, 116, 96, 255, 92, 163, 69, 128, 74, 133, 213, 189, 83, 122, 127, 117, 1, 147, 185, 5, 242, 78, 4, 99, 86, 31, 127, 206, 188, 200, 30, 237, 252, 122, 246, 232, 247, 224, 139, 178, 198, 145, 47, 93, 126, 25, 228, 83, 54, 48, 111, 221, 237, 148, 245, 225, 112, 252, 168, 61, 36, 119, 195, 130, 102, 232, 193, 216, 132, 150, 126, 32, 8, 7, 63, 97, 31, 166, 229, 60, 59, 43, 151, 140, 88, 64, 255, 103, 133, 20, 119, 250, 56, 77, 141, 78, 205, 173, 246, 150, 88, 11, 207, 159, 178, 78, 213, 229, 85, 147, 194, 202, 23, 107, 2, 248, 223, 55, 41, 38, 232, 89, 83 } },
                    { 15, "Toys", new DateTime(2023, 1, 10, 17, 26, 43, 637, DateTimeKind.Local).AddTicks(290), null, "consectetur", 28091, new byte[] { 167, 126, 2, 143, 176, 113, 220, 196, 56, 132, 103, 113, 188, 206, 191, 149, 13, 54, 25, 216, 29, 186, 64, 146, 155, 147, 49, 80, 139, 40, 13, 174, 30, 191, 22, 244, 14, 255, 108, 198, 55, 190, 91, 237, 54, 60, 8, 14, 43, 63, 118, 48, 141, 196, 182, 237, 61, 111, 244, 29, 63, 139, 57, 16, 119, 184, 82, 253, 183, 203, 134, 13, 201, 82, 161, 94, 94, 82, 91, 95, 138, 35, 37, 76, 178, 221, 32, 89, 9, 41, 182, 158, 11, 79, 134, 171, 133, 75, 118, 125, 233, 10, 87, 96, 184, 104, 103, 58, 35, 87, 142, 235, 20, 149, 147, 28, 102, 236, 94, 153, 152, 249, 244, 141, 20, 232, 2, 122, 203, 245, 217, 19, 219, 221, 118, 127, 203, 196, 148, 73, 118, 229, 54, 177, 155, 203, 137, 117, 188, 105, 69, 152, 236, 221, 229, 240, 22, 201, 76, 207, 102, 236, 110, 45, 125, 122, 15, 54, 31, 19, 80, 161, 88, 21, 35, 178, 194, 66, 241, 72, 94, 140, 190, 98, 176, 64, 39, 254, 247, 133, 105, 2, 120, 196, 227, 137, 119, 8, 51, 33, 188, 83, 86, 168, 25, 163, 64, 215, 185, 51, 45, 211, 215, 3, 113, 217, 46, 12, 125, 61, 82, 16, 63, 153, 169, 78, 40, 148, 49, 154, 59, 186, 14, 208, 140, 11, 54, 21, 72, 12, 0, 80, 69, 196, 88, 149, 42, 117, 83, 10, 90, 106, 139, 246, 206, 171, 19, 188, 255, 202, 122, 172, 165, 31, 248, 115, 197, 7, 118, 101, 162, 25, 195, 112, 61, 2, 203, 123, 64, 20, 36, 179, 64, 39, 63, 208, 46, 24, 2, 225, 247, 122, 22, 126, 146, 84, 171, 38, 203, 229, 208, 35, 254, 237, 104, 65, 166, 27, 185, 203, 223, 152, 123, 234, 165, 199, 107, 125, 223, 39, 68, 173, 4, 149, 110, 40, 2, 69, 221, 233, 87, 165, 175, 91, 68, 1, 181, 83, 191, 254, 42, 19, 94, 54, 1, 95, 254, 43, 216, 202, 233, 45, 70, 163, 160, 34, 30, 105, 127, 63, 62, 96, 61, 208, 115, 58, 232, 32, 166, 164, 17, 23, 190, 225, 252, 49, 78, 205, 147, 15, 41, 215, 108, 19, 0, 42, 94, 12, 187, 33, 227, 76, 212, 127, 191, 201, 213, 142, 194, 199, 118, 222, 132, 52, 184, 209, 111, 101, 166, 110, 212, 80, 213, 112, 22, 103, 244, 42, 208, 73, 219, 220, 100, 133, 193, 197, 67, 62, 34, 51, 91, 192, 10, 204, 152, 75, 82, 55, 90, 46, 187, 249, 101, 76, 76, 146, 118, 100, 105, 87, 213, 171, 190, 121, 235, 153, 121, 255, 115, 243, 142, 48, 67, 115, 18, 20, 69, 9, 215, 202, 20, 188, 208, 161, 142, 226, 118, 24, 56, 46, 78, 223, 212, 202, 93, 176, 1, 145, 224, 255, 210, 82, 196, 102, 160, 138, 181, 242, 57, 56, 77, 109, 140, 159, 66, 25, 218, 28, 234, 9, 34, 96, 198, 68, 164, 175, 91, 121, 22, 98, 18, 179, 41, 216, 248, 194, 247, 105, 1, 4, 44, 132, 223, 255, 225, 225, 82, 53, 135, 68, 213, 229, 167, 214, 220, 113, 139, 127, 194, 240, 46, 60, 220, 214, 37, 153, 68, 180, 166, 128, 33, 113, 26, 230, 220, 157, 129, 199, 99, 194, 93, 38, 242, 209, 140, 45, 12, 82, 251, 134, 54, 120, 166, 16, 213, 240, 168, 8, 217, 72, 156, 157, 142, 6, 35, 100, 202, 192, 250, 62, 240, 196, 28, 255, 147, 7, 74, 10, 74, 248, 140, 242, 185, 31, 74, 169, 202, 10, 16, 236, 244, 120, 237, 27, 38, 191, 151, 235, 174, 39, 99, 76, 88, 188, 150, 113, 91, 167, 124, 205, 165, 158, 190, 225, 187, 170, 227, 110, 187, 122, 153, 191, 175, 13, 74, 119, 215, 1, 217, 212, 112, 94, 92, 34, 149, 64, 154, 253, 137, 217, 77, 35, 141, 67, 70, 86, 186, 11, 95, 123, 219, 40, 48, 51, 141, 163, 156, 74, 114, 31, 153, 89, 205, 168, 93, 71, 65, 155, 75, 122, 16, 230, 229, 225, 44, 118, 50, 108, 199, 243, 189, 204, 161, 94, 248, 71, 46, 40, 148, 242, 163, 80, 139, 106, 64, 243, 86, 229, 229, 255, 20, 31, 192, 228, 107, 245, 66, 78, 7, 23, 112, 47, 131, 126, 97, 204, 184, 111, 176, 21, 24, 25, 6, 89, 214, 192, 91, 123, 160, 56, 32, 77, 134, 199, 222, 158, 12, 188, 242, 3, 4, 223, 33, 125, 129, 116, 204, 12, 8, 115, 59, 230, 53, 207, 230, 251, 24, 102, 14, 171, 153, 199, 173, 206, 246, 35, 169, 187, 159, 195, 192, 251, 124, 172, 16, 57, 247, 137, 215, 98, 243, 79, 115, 45, 252, 57, 23, 182, 224, 227, 133, 165, 174, 71, 106, 61, 49, 82, 134, 93, 203, 17, 108, 68, 178, 64, 106, 136, 190, 173, 4, 142, 143, 171, 184, 74, 83, 128, 209, 189, 11, 242, 218, 188, 61, 27, 76, 53, 66, 211, 7, 164, 2, 121, 151, 225, 226, 46, 122, 188, 207, 143, 247, 51, 223, 246, 21, 3, 143, 32, 234, 177, 129, 201, 82, 216, 54, 176, 6, 151, 243, 52, 70, 235, 166, 95, 140, 21, 19, 214, 103, 36, 6, 21, 237, 124, 250, 167, 221, 71, 5, 73, 166, 34, 233, 86, 35, 57, 39, 190, 170, 50, 40, 227, 201, 155, 73, 12, 140, 127, 106, 0, 239, 184, 184, 197, 170, 108, 220, 213, 222, 143, 210, 191, 145, 170, 142, 35, 2, 80, 60, 82, 237, 84, 43, 53, 252, 34, 75, 82, 50, 238, 27, 93, 220, 5, 89, 237, 106, 35, 171, 182, 93, 82, 224, 27, 95, 104, 82, 30, 12, 37, 9, 60, 67, 24, 19, 155, 141, 130, 201, 136, 32, 138, 162, 240, 115, 116, 227, 140, 81, 160, 185, 223, 164, 133, 245, 155, 116, 15, 214, 147, 208, 45, 69, 13, 228, 222, 26, 196, 242, 189, 96, 231 } },
                    { 16, "Shoes", new DateTime(2023, 3, 16, 0, 56, 43, 51, DateTimeKind.Local).AddTicks(9411), null, "iure", 15142, new byte[] { 211, 65, 65, 162, 148, 147, 220, 144, 31, 237, 1, 225, 48, 81, 87, 146, 130, 134, 245, 209, 249, 28, 8, 53, 30, 184, 114, 154, 23, 15, 105, 65, 112, 97, 175, 150, 172, 111, 143, 57, 144, 3, 187, 95, 39, 114, 112, 27, 102, 74, 160, 159, 146, 248, 221, 182, 56, 12, 132, 219, 32, 65, 120, 15, 132, 191, 113, 207, 162, 192, 229, 19, 247, 188, 64, 246, 97, 169, 14, 171, 72, 86, 51, 205, 111, 201, 175, 119, 131, 248, 93, 159, 234, 179, 24, 79, 138, 171, 219, 103, 1, 161, 121, 165, 100, 140, 168, 214, 184, 230, 84, 143, 254, 217, 147, 201, 13, 170, 160, 186, 15, 249, 75, 169, 99, 69, 40, 68, 163, 241, 108, 182, 206, 166, 169, 166, 221, 141, 105, 226, 33, 217, 191, 157, 164, 206, 161, 17, 31, 78, 65, 223, 10, 32, 87, 8, 86, 207, 66, 30, 100, 99, 50, 198, 122, 158, 192, 87, 47, 237, 236, 127, 65, 189, 153, 54, 57, 173, 5, 148, 163, 23, 36, 85, 175, 140, 171, 174, 78, 161, 80, 14, 75, 74, 126, 189, 166, 249, 34, 5, 13, 74, 225, 50, 98, 194, 157, 77, 134, 33, 207, 168, 201, 174, 122, 76, 63, 220, 22, 238, 243, 18, 9, 142, 156, 221, 52, 247, 63, 220, 143, 63, 138, 0, 134, 89, 53, 241, 243, 237, 238, 93, 40, 45, 210, 167, 68, 156, 207, 49, 126, 202, 226, 52, 18, 251, 64, 83, 149, 132, 141, 166, 14, 169, 145, 143, 29, 201, 39, 33, 22, 77, 233, 41, 255, 149, 233, 220, 188, 245, 153, 151, 40, 13, 94, 197, 93, 86, 237, 139, 24, 226, 91, 110, 96, 72, 79, 126, 155, 67, 138, 122, 117, 174, 26, 48, 224, 185, 52, 124, 17, 100, 151, 160, 235, 245, 125, 1, 75, 203, 49, 199, 220, 156, 8, 52, 241, 122, 201, 183, 70, 107, 64, 121, 106, 30, 34, 122, 242, 46, 228, 164, 33, 113, 121, 179, 75, 186, 131, 106, 202, 78, 51, 208, 17, 195, 158, 216, 165, 230, 62, 101, 239, 125, 54, 166, 36, 30, 54, 204, 210, 3, 14, 29, 230, 141, 165, 106, 35, 84, 233, 55, 247, 94, 237, 247, 55, 112, 103, 167, 128, 73, 212, 12, 239, 127, 180, 164, 58, 210, 143, 44, 132, 182, 151, 198, 64, 22, 233, 132, 29, 51, 181, 81, 252, 7, 110, 145, 143, 62, 110, 180, 182, 142, 75, 137, 46, 1, 45, 103, 216, 1, 47, 80, 197, 188, 178, 64, 198, 39, 183, 33, 134, 227, 138, 76, 148, 131, 15, 232, 16, 34, 20, 252, 99, 218, 118, 245, 106, 14, 151, 62, 232, 129, 171, 27, 3, 100, 139, 64, 84, 45, 203, 104, 135, 76, 45, 211, 4, 255, 245, 171, 242, 69, 87, 181, 237, 51, 237, 234, 69, 188, 213, 183, 143, 121, 57, 5, 55, 110, 72, 47, 247, 207, 147, 226, 87, 172, 117, 22, 173, 163, 241, 107, 25, 236, 75, 162, 42, 245, 46, 208, 119, 161, 250, 152, 88, 19, 216, 13, 19, 40, 155, 150, 182, 197, 179, 35, 178, 116, 93, 65, 190, 214, 61, 162, 203, 105, 158, 163, 45, 150, 218, 65, 64, 120, 184, 86, 212, 250, 138, 68, 211, 103, 3, 132, 8, 90, 181, 83, 57, 40, 240, 182, 151, 236, 17, 160, 100, 87, 204, 238, 117, 52, 223, 124, 77, 89, 86, 61, 13, 92, 78, 183, 233, 25, 109, 87, 211, 184, 154, 112, 180, 74, 106, 5, 166, 36, 169, 83, 103, 23, 242, 124, 45, 156, 207, 158, 135, 135, 55, 175, 4, 119, 70, 220, 218, 56, 204, 126, 126, 186, 205, 171, 189, 92, 57, 42, 202, 218, 213, 40, 175, 2, 214, 245, 106, 209, 137, 77, 74, 207, 207, 76, 129, 235, 108, 60, 4, 142, 42, 110, 88, 43, 212, 172, 74, 70, 190, 209, 98, 164, 212, 173, 177, 14, 255, 1, 161, 80, 114, 8, 174, 127, 52, 175, 235, 128, 42, 210, 240, 253, 38, 60, 175, 102, 208, 131, 46, 41, 171, 35, 18, 184, 234, 165, 251, 33, 154, 114, 235, 106, 154, 179, 27, 34, 192, 217, 247, 36, 193, 201, 28, 236, 225, 101, 126, 151, 254, 75, 61, 124, 211, 120, 164, 79, 246, 246, 148, 142, 180, 202, 230, 183, 231, 133, 98, 114, 32, 141, 166, 247, 140, 9, 104, 225, 6, 38, 214, 133, 38, 99, 35, 79, 52, 111, 150, 34, 15, 204, 43, 202, 69, 104, 112, 247, 227, 100, 4, 91, 2, 12, 119, 112, 164, 70, 239, 201, 16, 194, 72, 207, 31, 14, 104, 80, 166, 150, 130, 120, 238, 64, 99, 83, 97, 220, 178, 36, 152, 112, 254, 161, 33, 122, 131, 26, 236, 178, 170, 238, 127, 205, 17, 76, 132, 91, 170, 54, 0, 32, 80, 76, 226, 140, 108, 193, 168, 35, 15, 200, 148, 203, 49, 159, 196, 166, 174, 165, 139, 77, 100, 244, 235, 148, 248, 33, 46, 22, 207, 5, 49, 123, 36, 120, 32, 177, 191, 149, 13, 193, 113, 200, 163, 225, 90, 180, 155, 113, 136, 221, 173, 4, 171, 178, 188, 92, 97, 78, 147, 74, 147, 146, 84, 9, 150, 24, 167, 185, 127, 18, 231, 24, 151, 201, 219, 156, 81, 9, 57, 68, 134, 188, 142, 241, 87, 44, 208, 113, 187, 196, 80, 113, 1, 194, 46, 223, 115, 153, 75, 66, 13, 226, 242, 117, 246, 148, 109, 225, 215, 32, 11, 87, 20, 79, 196, 214, 3, 99, 177, 106, 71, 53, 253, 187, 194, 117, 23, 212, 155, 251, 40, 183, 190, 247, 54, 163, 202, 25, 251, 195, 191, 239, 153, 155, 184, 248, 93, 177, 253, 88, 220, 16, 231, 224, 250, 215, 229, 55, 178, 128, 125, 152, 69, 219, 247, 83, 152, 28, 25, 33, 11, 233, 103, 238, 170, 88, 155, 97, 2, 201, 24, 101, 215, 67, 30, 24, 208, 221, 253, 94, 189, 146, 102, 122 } },
                    { 17, "Automotive", new DateTime(2022, 5, 19, 8, 26, 42, 466, DateTimeKind.Local).AddTicks(8524), null, "qui", 2192, new byte[] { 254, 4, 129, 182, 119, 181, 219, 91, 7, 85, 154, 82, 164, 213, 238, 142, 248, 215, 209, 202, 214, 127, 208, 216, 161, 222, 179, 228, 164, 247, 196, 212, 195, 3, 71, 56, 74, 222, 177, 171, 234, 71, 26, 208, 23, 169, 217, 40, 161, 85, 202, 15, 150, 44, 4, 127, 51, 168, 20, 153, 1, 247, 183, 15, 145, 197, 143, 160, 141, 182, 68, 25, 38, 37, 224, 142, 100, 0, 193, 247, 5, 138, 66, 78, 45, 181, 61, 150, 254, 199, 4, 161, 202, 23, 169, 243, 143, 11, 63, 81, 26, 56, 154, 235, 16, 177, 233, 113, 76, 117, 27, 51, 231, 29, 148, 119, 180, 104, 225, 219, 135, 249, 162, 197, 177, 163, 78, 14, 123, 237, 254, 88, 193, 111, 221, 205, 239, 86, 61, 124, 203, 204, 73, 136, 172, 209, 185, 172, 131, 50, 62, 38, 41, 99, 202, 32, 150, 213, 57, 109, 98, 218, 245, 95, 119, 194, 113, 120, 63, 198, 135, 93, 43, 101, 16, 187, 175, 25, 25, 224, 233, 161, 138, 73, 174, 216, 47, 94, 165, 188, 54, 26, 29, 208, 25, 241, 214, 234, 17, 233, 95, 65, 109, 188, 171, 224, 251, 195, 83, 14, 112, 124, 188, 89, 132, 192, 79, 172, 176, 158, 147, 19, 211, 131, 143, 108, 64, 91, 76, 30, 228, 197, 7, 47, 128, 167, 52, 205, 157, 206, 220, 107, 11, 150, 75, 186, 94, 196, 75, 89, 161, 42, 57, 114, 86, 76, 109, 234, 44, 62, 159, 160, 119, 52, 42, 171, 117, 140, 216, 220, 139, 130, 15, 226, 194, 40, 7, 60, 55, 213, 14, 124, 15, 243, 125, 186, 140, 148, 217, 52, 57, 74, 161, 94, 46, 59, 243, 214, 108, 160, 68, 209, 236, 110, 205, 31, 27, 86, 176, 45, 68, 49, 178, 86, 48, 35, 144, 132, 183, 111, 30, 225, 179, 163, 162, 64, 224, 176, 180, 134, 52, 49, 208, 150, 145, 60, 143, 160, 37, 93, 159, 53, 227, 171, 240, 8, 151, 74, 45, 10, 171, 111, 31, 252, 130, 99, 30, 72, 203, 140, 62, 106, 162, 42, 248, 19, 96, 28, 197, 244, 147, 239, 94, 89, 208, 232, 253, 7, 178, 154, 168, 150, 130, 169, 219, 197, 17, 211, 20, 45, 29, 71, 213, 153, 31, 52, 147, 185, 178, 221, 168, 123, 132, 57, 118, 187, 16, 198, 43, 153, 102, 22, 149, 49, 227, 167, 232, 248, 79, 51, 1, 140, 8, 152, 214, 76, 26, 197, 57, 156, 85, 67, 84, 213, 241, 45, 18, 73, 50, 31, 180, 74, 168, 122, 199, 6, 177, 163, 181, 120, 75, 154, 106, 127, 219, 28, 115, 236, 98, 42, 160, 75, 141, 143, 68, 34, 194, 192, 64, 182, 148, 159, 197, 47, 127, 183, 228, 141, 208, 207, 155, 119, 15, 193, 80, 186, 216, 213, 250, 213, 185, 38, 230, 8, 127, 104, 189, 24, 54, 164, 68, 241, 99, 255, 227, 172, 212, 59, 255, 35, 55, 230, 27, 146, 142, 41, 59, 203, 62, 137, 73, 236, 197, 106, 252, 110, 184, 189, 175, 22, 249, 203, 86, 44, 139, 170, 20, 16, 221, 164, 230, 157, 214, 214, 157, 211, 10, 83, 121, 86, 45, 241, 217, 172, 90, 88, 43, 248, 2, 116, 244, 23, 139, 232, 42, 107, 143, 238, 7, 228, 20, 42, 237, 154, 163, 172, 22, 238, 204, 40, 99, 100, 67, 89, 233, 8, 242, 169, 210, 50, 126, 27, 13, 105, 175, 206, 17, 237, 172, 49, 68, 28, 76, 149, 65, 2, 3, 62, 9, 173, 65, 60, 43, 217, 16, 143, 212, 50, 255, 33, 121, 229, 28, 212, 102, 249, 28, 132, 234, 212, 154, 40, 66, 154, 228, 71, 24, 174, 24, 231, 4, 179, 160, 36, 240, 65, 240, 52, 88, 32, 250, 223, 238, 138, 184, 94, 0, 119, 46, 72, 229, 126, 83, 52, 19, 25, 250, 144, 244, 201, 119, 38, 26, 24, 28, 198, 69, 247, 227, 36, 8, 232, 44, 202, 218, 187, 58, 183, 226, 134, 71, 160, 127, 207, 1, 134, 95, 108, 17, 215, 70, 95, 63, 142, 169, 212, 196, 214, 110, 241, 25, 8, 147, 9, 63, 252, 82, 137, 89, 87, 222, 67, 174, 110, 130, 214, 166, 74, 22, 150, 103, 217, 230, 12, 222, 169, 169, 157, 33, 6, 247, 100, 73, 240, 109, 62, 13, 117, 144, 4, 51, 213, 18, 185, 249, 3, 177, 208, 11, 210, 45, 122, 191, 215, 138, 64, 33, 135, 43, 150, 82, 180, 104, 83, 96, 122, 249, 189, 1, 67, 201, 49, 185, 17, 98, 145, 198, 44, 18, 218, 247, 216, 145, 78, 217, 125, 164, 113, 101, 44, 29, 133, 73, 250, 177, 127, 109, 191, 89, 126, 9, 244, 207, 199, 9, 251, 192, 174, 116, 249, 121, 244, 116, 81, 158, 122, 34, 26, 121, 227, 213, 136, 87, 212, 38, 67, 231, 191, 95, 227, 36, 7, 211, 148, 208, 3, 8, 202, 68, 221, 188, 246, 252, 107, 179, 40, 17, 248, 92, 55, 92, 83, 69, 118, 168, 129, 156, 251, 160, 197, 20, 0, 78, 144, 213, 114, 33, 224, 128, 155, 113, 88, 213, 156, 38, 223, 139, 235, 32, 254, 50, 239, 99, 39, 135, 209, 194, 92, 235, 79, 102, 13, 41, 126, 201, 187, 167, 107, 150, 65, 6, 48, 119, 192, 198, 3, 125, 169, 79, 201, 245, 176, 218, 162, 147, 36, 157, 38, 9, 4, 176, 196, 245, 49, 52, 100, 47, 86, 210, 106, 55, 31, 85, 223, 248, 1, 120, 162, 97, 131, 83, 24, 12, 34, 89, 182, 50, 135, 235, 164, 30, 129, 98, 145, 144, 65, 59, 69, 140, 98, 212, 39, 214, 229, 145, 213, 91, 250, 169, 145, 172, 251, 197, 133, 177, 151, 183, 211, 216, 126, 49, 168, 107, 45, 76, 182, 189, 195, 78, 183, 198, 50, 22, 254, 175, 44, 66, 39, 144, 131, 90, 55, 221, 89, 248, 35, 188, 220, 224, 249, 137, 103, 109, 14 } },
                    { 18, "Games", new DateTime(2022, 7, 22, 15, 56, 41, 881, DateTimeKind.Local).AddTicks(7636), null, "dolor", 38244, new byte[] { 42, 200, 193, 201, 91, 215, 218, 39, 238, 189, 52, 195, 24, 88, 134, 139, 109, 40, 173, 196, 178, 225, 153, 124, 36, 4, 244, 45, 48, 223, 31, 104, 21, 165, 223, 218, 231, 78, 211, 30, 68, 139, 122, 65, 8, 224, 65, 53, 220, 96, 244, 126, 155, 97, 43, 72, 47, 69, 164, 87, 226, 173, 246, 14, 158, 204, 173, 114, 120, 172, 163, 30, 84, 142, 127, 38, 102, 87, 115, 67, 194, 190, 80, 207, 235, 161, 204, 180, 121, 151, 171, 162, 169, 124, 59, 151, 148, 107, 163, 60, 50, 206, 188, 48, 189, 213, 42, 12, 225, 5, 226, 215, 209, 97, 148, 36, 92, 39, 35, 253, 255, 249, 248, 225, 0, 0, 117, 216, 83, 232, 145, 251, 180, 55, 17, 243, 1, 32, 18, 21, 118, 191, 211, 116, 181, 212, 209, 72, 231, 23, 58, 109, 72, 166, 60, 57, 213, 218, 48, 188, 96, 81, 185, 248, 115, 230, 34, 153, 79, 160, 34, 60, 20, 14, 134, 64, 38, 132, 44, 44, 46, 44, 240, 60, 173, 36, 178, 14, 251, 216, 29, 38, 239, 85, 180, 37, 6, 218, 0, 206, 177, 56, 248, 70, 244, 254, 89, 58, 31, 252, 18, 81, 174, 3, 142, 52, 96, 124, 74, 79, 52, 20, 157, 119, 131, 251, 76, 190, 89, 96, 57, 75, 131, 94, 123, 246, 51, 170, 71, 174, 202, 120, 238, 255, 197, 204, 120, 235, 199, 128, 196, 138, 144, 177, 153, 156, 155, 128, 195, 249, 178, 154, 224, 191, 194, 198, 205, 79, 136, 152, 0, 182, 52, 155, 132, 187, 38, 157, 178, 182, 130, 96, 247, 216, 156, 175, 187, 210, 196, 222, 90, 179, 230, 78, 252, 47, 152, 47, 60, 254, 254, 41, 99, 47, 128, 14, 85, 244, 44, 222, 118, 253, 206, 13, 118, 82, 163, 7, 34, 19, 11, 250, 138, 170, 61, 77, 208, 229, 159, 85, 35, 246, 97, 179, 183, 89, 253, 199, 88, 141, 89, 199, 166, 230, 103, 93, 228, 217, 216, 170, 140, 144, 12, 41, 243, 3, 158, 184, 242, 50, 62, 111, 84, 215, 187, 127, 156, 26, 85, 28, 84, 220, 174, 148, 186, 68, 84, 164, 66, 223, 104, 246, 13, 244, 200, 146, 234, 55, 192, 179, 187, 68, 213, 37, 79, 233, 114, 207, 42, 232, 193, 202, 132, 187, 85, 176, 225, 119, 110, 174, 175, 250, 118, 18, 202, 71, 98, 95, 14, 40, 149, 100, 89, 161, 97, 16, 6, 136, 69, 209, 209, 133, 121, 90, 29, 158, 114, 81, 159, 24, 176, 115, 201, 18, 4, 193, 206, 194, 91, 8, 134, 18, 192, 1, 82, 93, 112, 226, 90, 69, 169, 88, 50, 157, 220, 42, 128, 27, 244, 44, 212, 16, 192, 245, 120, 33, 155, 71, 157, 160, 65, 67, 45, 60, 74, 191, 196, 119, 7, 192, 45, 143, 247, 89, 111, 87, 65, 43, 53, 218, 64, 179, 206, 47, 51, 118, 81, 203, 137, 49, 194, 41, 69, 185, 4, 102, 43, 245, 83, 29, 101, 8, 19, 52, 254, 68, 24, 103, 134, 32, 224, 111, 18, 195, 95, 142, 117, 254, 9, 211, 110, 249, 237, 214, 254, 4, 74, 61, 85, 8, 44, 75, 216, 23, 116, 55, 159, 154, 48, 238, 93, 234, 68, 105, 80, 82, 22, 130, 89, 117, 240, 44, 235, 127, 175, 107, 27, 61, 53, 249, 250, 218, 17, 125, 243, 148, 150, 250, 78, 40, 239, 219, 205, 26, 118, 131, 181, 131, 133, 171, 237, 200, 228, 223, 23, 255, 95, 88, 104, 8, 28, 98, 100, 54, 244, 130, 217, 198, 118, 188, 188, 28, 51, 49, 134, 21, 95, 209, 9, 43, 182, 151, 183, 138, 12, 50, 246, 49, 101, 243, 52, 61, 145, 69, 11, 140, 118, 150, 38, 243, 170, 238, 13, 201, 239, 209, 148, 178, 89, 2, 160, 142, 79, 61, 81, 133, 170, 218, 42, 193, 139, 167, 96, 130, 135, 126, 138, 237, 37, 249, 159, 201, 170, 21, 129, 200, 137, 237, 154, 58, 158, 68, 216, 99, 83, 165, 238, 84, 244, 134, 226, 156, 107, 101, 103, 2, 141, 139, 65, 113, 71, 166, 140, 95, 98, 215, 228, 58, 188, 137, 251, 188, 63, 240, 35, 71, 207, 253, 46, 226, 144, 53, 249, 159, 23, 3, 93, 69, 174, 126, 58, 254, 172, 41, 242, 247, 183, 120, 0, 124, 193, 180, 152, 106, 138, 37, 92, 123, 65, 31, 51, 144, 92, 95, 225, 17, 172, 236, 72, 95, 121, 159, 139, 62, 79, 253, 16, 21, 253, 44, 144, 86, 252, 178, 32, 220, 157, 143, 21, 241, 166, 225, 3, 142, 74, 169, 162, 76, 72, 225, 75, 202, 48, 161, 2, 34, 40, 90, 26, 140, 21, 70, 126, 21, 143, 220, 148, 169, 62, 4, 115, 28, 215, 86, 184, 152, 155, 253, 243, 165, 91, 195, 205, 27, 225, 197, 38, 90, 176, 254, 180, 67, 117, 136, 220, 95, 99, 238, 254, 109, 21, 248, 13, 67, 109, 46, 243, 217, 232, 106, 134, 42, 102, 116, 49, 81, 121, 98, 52, 202, 182, 57, 249, 63, 80, 47, 167, 79, 121, 88, 52, 172, 255, 133, 144, 99, 182, 137, 174, 178, 209, 76, 113, 69, 120, 137, 221, 0, 87, 139, 230, 1, 186, 51, 183, 219, 254, 205, 242, 62, 134, 164, 95, 143, 53, 218, 42, 225, 227, 206, 155, 239, 180, 129, 248, 105, 199, 179, 199, 199, 82, 166, 247, 238, 114, 51, 241, 203, 205, 180, 100, 232, 150, 111, 44, 45, 237, 225, 16, 157, 94, 251, 28, 136, 240, 246, 77, 57, 58, 78, 19, 75, 5, 43, 235, 223, 172, 113, 29, 2, 232, 95, 19, 46, 105, 178, 89, 68, 85, 203, 124, 229, 163, 42, 104, 86, 138, 111, 253, 123, 229, 184, 144, 127, 161, 25, 226, 106, 132, 76, 129, 123, 196, 14, 181, 255, 232, 237, 30, 61, 157, 9, 227, 111, 210, 46, 167, 219, 195, 148, 85, 61, 115, 161 } },
                    { 19, "Garden", new DateTime(2022, 9, 24, 23, 26, 41, 296, DateTimeKind.Local).AddTicks(6749), null, "reiciendis", 25294, new byte[] { 85, 139, 1, 220, 62, 249, 218, 242, 213, 38, 206, 52, 139, 220, 30, 135, 226, 120, 137, 189, 142, 67, 97, 31, 167, 41, 53, 119, 188, 199, 123, 251, 103, 71, 120, 124, 133, 190, 245, 144, 158, 207, 217, 178, 248, 23, 169, 66, 24, 107, 30, 238, 160, 149, 82, 18, 42, 225, 53, 21, 195, 98, 54, 13, 171, 210, 204, 68, 100, 161, 2, 36, 131, 248, 31, 190, 105, 174, 38, 144, 127, 242, 95, 81, 168, 140, 91, 210, 244, 102, 82, 164, 137, 224, 204, 59, 153, 204, 7, 38, 75, 101, 222, 118, 105, 250, 107, 167, 117, 148, 168, 123, 186, 165, 149, 209, 3, 229, 101, 30, 119, 249, 79, 253, 79, 93, 155, 162, 43, 228, 36, 157, 167, 0, 68, 26, 19, 233, 231, 174, 33, 179, 92, 95, 189, 214, 233, 228, 75, 251, 55, 180, 102, 233, 174, 81, 21, 224, 39, 11, 94, 200, 124, 145, 112, 11, 211, 185, 96, 122, 189, 26, 253, 182, 252, 196, 156, 239, 64, 120, 115, 182, 87, 48, 172, 111, 54, 190, 82, 243, 4, 51, 194, 219, 79, 89, 54, 203, 239, 178, 3, 47, 132, 208, 61, 29, 183, 176, 236, 233, 180, 37, 160, 174, 151, 167, 113, 76, 228, 0, 212, 21, 103, 108, 118, 138, 88, 34, 102, 163, 142, 209, 0, 142, 117, 68, 50, 134, 242, 143, 184, 134, 209, 104, 63, 222, 146, 19, 67, 167, 231, 234, 230, 239, 221, 237, 200, 23, 90, 179, 197, 148, 73, 73, 91, 226, 37, 18, 57, 83, 117, 234, 90, 84, 71, 78, 68, 254, 45, 151, 247, 68, 222, 190, 187, 163, 234, 16, 176, 136, 124, 27, 43, 62, 202, 35, 60, 135, 13, 92, 185, 128, 218, 240, 50, 253, 144, 145, 167, 143, 168, 201, 233, 195, 187, 128, 182, 138, 142, 183, 248, 20, 97, 177, 215, 89, 191, 27, 138, 35, 17, 188, 241, 209, 222, 119, 106, 238, 139, 189, 19, 88, 104, 32, 223, 178, 49, 104, 130, 74, 109, 177, 248, 85, 99, 164, 30, 40, 24, 217, 61, 116, 7, 132, 125, 236, 215, 24, 228, 68, 21, 200, 255, 208, 164, 159, 171, 65, 210, 36, 40, 86, 152, 64, 182, 95, 195, 155, 109, 57, 88, 66, 213, 178, 127, 158, 81, 228, 162, 242, 218, 24, 131, 62, 52, 164, 178, 39, 177, 196, 248, 221, 86, 243, 177, 231, 220, 199, 205, 29, 40, 60, 171, 170, 236, 211, 242, 76, 80, 5, 78, 199, 158, 223, 74, 15, 210, 90, 11, 17, 173, 156, 234, 169, 65, 123, 235, 226, 1, 152, 194, 137, 22, 132, 202, 158, 109, 217, 81, 97, 178, 102, 215, 171, 117, 49, 62, 118, 169, 161, 20, 129, 187, 188, 112, 140, 81, 1, 105, 113, 231, 15, 75, 184, 67, 196, 176, 25, 20, 171, 161, 249, 8, 170, 94, 71, 197, 62, 51, 15, 60, 116, 57, 95, 131, 64, 206, 90, 20, 62, 76, 107, 111, 224, 121, 163, 26, 30, 103, 176, 129, 37, 97, 253, 0, 27, 121, 16, 93, 41, 199, 18, 206, 89, 52, 114, 214, 235, 52, 3, 246, 85, 5, 214, 94, 53, 138, 40, 49, 187, 44, 166, 215, 130, 142, 23, 18, 60, 94, 104, 199, 189, 252, 234, 119, 57, 157, 22, 172, 6, 204, 47, 233, 100, 186, 43, 31, 139, 158, 203, 145, 81, 223, 162, 253, 32, 59, 75, 202, 29, 95, 154, 140, 204, 60, 56, 88, 26, 94, 36, 151, 115, 123, 42, 238, 252, 188, 115, 200, 99, 247, 135, 157, 147, 215, 117, 221, 90, 237, 86, 254, 82, 75, 142, 166, 50, 162, 29, 39, 130, 210, 5, 44, 121, 51, 29, 213, 181, 179, 0, 100, 200, 130, 103, 38, 216, 252, 249, 245, 198, 90, 254, 45, 8, 38, 69, 40, 237, 131, 188, 90, 158, 75, 70, 144, 241, 90, 36, 96, 185, 160, 40, 167, 237, 242, 54, 207, 227, 104, 206, 53, 169, 40, 96, 39, 212, 216, 36, 83, 238, 244, 231, 49, 247, 165, 197, 124, 60, 214, 52, 125, 216, 152, 59, 37, 49, 86, 64, 21, 240, 117, 68, 133, 181, 134, 177, 118, 234, 30, 188, 25, 54, 209, 114, 196, 185, 247, 175, 71, 45, 185, 146, 13, 51, 80, 93, 16, 236, 59, 245, 125, 152, 15, 98, 120, 176, 98, 123, 113, 244, 78, 146, 29, 26, 27, 71, 7, 38, 118, 108, 57, 167, 248, 231, 55, 226, 55, 82, 100, 40, 161, 137, 175, 40, 62, 128, 38, 110, 249, 20, 86, 124, 62, 83, 222, 38, 116, 242, 23, 9, 85, 234, 118, 206, 187, 214, 159, 39, 43, 150, 121, 16, 22, 72, 82, 196, 226, 245, 219, 154, 32, 153, 44, 98, 22, 189, 104, 165, 8, 16, 109, 68, 58, 91, 210, 182, 19, 225, 109, 104, 224, 255, 66, 99, 155, 70, 101, 246, 0, 25, 68, 127, 23, 124, 232, 188, 190, 19, 184, 254, 109, 250, 30, 27, 40, 52, 213, 187, 117, 156, 177, 1, 135, 114, 185, 33, 86, 200, 199, 207, 88, 114, 164, 238, 204, 237, 45, 189, 114, 22, 248, 0, 41, 110, 250, 230, 224, 39, 59, 102, 113, 170, 128, 100, 104, 66, 248, 164, 194, 199, 102, 245, 76, 232, 165, 251, 85, 47, 79, 59, 6, 23, 72, 95, 164, 177, 216, 24, 119, 211, 64, 47, 141, 96, 94, 173, 241, 64, 134, 137, 245, 137, 250, 170, 176, 2, 180, 64, 201, 255, 144, 176, 215, 0, 95, 89, 97, 33, 191, 183, 106, 223, 44, 239, 135, 54, 104, 235, 138, 247, 9, 20, 169, 197, 69, 125, 29, 157, 174, 161, 252, 151, 79, 120, 66, 143, 87, 141, 1, 4, 76, 208, 128, 206, 31, 22, 92, 11, 35, 121, 154, 200, 182, 209, 245, 124, 7, 17, 186, 225, 60, 196, 114, 30, 186, 210, 143, 179, 173, 247, 223, 219, 234, 133, 171, 57, 147, 218, 166, 46, 33, 18, 122, 53 } },
                    { 20, "Beauty", new DateTime(2022, 11, 28, 6, 56, 40, 711, DateTimeKind.Local).AddTicks(5862), null, "quia", 12344, new byte[] { 129, 78, 64, 239, 34, 27, 217, 190, 188, 142, 104, 165, 255, 95, 181, 132, 88, 201, 101, 183, 106, 165, 41, 195, 42, 79, 118, 193, 73, 175, 214, 142, 186, 233, 16, 30, 35, 46, 23, 3, 247, 20, 57, 35, 233, 78, 18, 79, 83, 118, 72, 93, 165, 201, 122, 219, 37, 125, 197, 210, 164, 24, 117, 13, 184, 217, 234, 21, 79, 151, 96, 42, 177, 97, 191, 86, 108, 5, 217, 220, 61, 38, 109, 210, 102, 120, 233, 240, 111, 53, 249, 165, 104, 68, 94, 223, 158, 44, 107, 16, 99, 252, 0, 187, 21, 30, 172, 67, 10, 35, 111, 31, 164, 232, 149, 126, 170, 163, 166, 63, 239, 249, 166, 26, 158, 187, 193, 108, 3, 224, 183, 63, 154, 201, 120, 64, 37, 178, 188, 71, 204, 166, 230, 75, 197, 217, 1, 127, 175, 223, 52, 251, 133, 44, 32, 105, 85, 230, 29, 90, 93, 63, 63, 42, 108, 47, 133, 218, 112, 84, 88, 248, 230, 94, 114, 73, 19, 91, 84, 196, 185, 65, 189, 35, 171, 187, 186, 110, 169, 14, 235, 63, 148, 97, 234, 141, 102, 188, 222, 150, 84, 38, 15, 90, 135, 59, 20, 38, 185, 214, 86, 250, 146, 89, 161, 27, 130, 28, 126, 176, 116, 22, 49, 97, 105, 25, 100, 133, 115, 229, 226, 87, 124, 189, 111, 146, 49, 98, 156, 112, 166, 147, 180, 210, 184, 241, 172, 59, 191, 207, 11, 74, 61, 45, 33, 61, 245, 174, 241, 109, 215, 143, 178, 212, 244, 254, 125, 213, 234, 15, 233, 31, 127, 14, 10, 225, 98, 95, 168, 120, 108, 41, 197, 164, 217, 152, 25, 79, 155, 49, 157, 131, 113, 46, 152, 23, 224, 223, 221, 185, 115, 215, 80, 176, 229, 235, 202, 47, 35, 64, 219, 149, 5, 121, 1, 174, 201, 14, 250, 91, 229, 46, 57, 184, 114, 101, 174, 80, 117, 242, 0, 130, 129, 238, 4, 148, 216, 21, 190, 237, 205, 233, 43, 91, 86, 7, 126, 247, 45, 233, 78, 210, 229, 130, 212, 68, 158, 152, 62, 127, 61, 121, 185, 49, 64, 88, 19, 22, 116, 108, 214, 180, 79, 12, 142, 251, 3, 222, 98, 106, 231, 182, 35, 139, 164, 45, 157, 255, 26, 192, 245, 63, 214, 63, 176, 83, 47, 250, 26, 253, 243, 103, 131, 192, 19, 153, 131, 216, 243, 217, 65, 192, 54, 212, 151, 135, 86, 46, 141, 18, 187, 20, 252, 180, 119, 150, 222, 16, 92, 58, 203, 8, 195, 100, 118, 128, 50, 99, 120, 10, 169, 196, 11, 64, 126, 53, 8, 2, 167, 40, 253, 1, 109, 7, 66, 223, 106, 207, 73, 124, 187, 115, 123, 185, 14, 56, 253, 210, 93, 23, 84, 243, 182, 131, 105, 246, 8, 188, 53, 65, 141, 219, 104, 51, 61, 201, 155, 187, 34, 150, 21, 99, 25, 251, 78, 54, 72, 82, 50, 69, 56, 54, 164, 143, 211, 10, 75, 233, 158, 75, 215, 174, 153, 7, 238, 224, 10, 72, 124, 68, 156, 65, 176, 198, 2, 241, 217, 186, 52, 50, 173, 182, 137, 239, 9, 87, 55, 217, 96, 51, 126, 177, 28, 214, 191, 102, 201, 18, 12, 110, 43, 0, 214, 237, 168, 246, 134, 221, 140, 226, 48, 144, 181, 107, 158, 33, 36, 169, 254, 151, 168, 49, 231, 72, 198, 235, 36, 217, 7, 156, 40, 199, 173, 198, 7, 172, 224, 155, 70, 18, 208, 89, 76, 125, 2, 237, 252, 176, 56, 158, 65, 31, 19, 117, 197, 250, 25, 141, 39, 189, 209, 172, 214, 240, 186, 105, 226, 238, 100, 241, 64, 137, 99, 235, 198, 79, 228, 106, 70, 216, 238, 115, 161, 104, 90, 8, 179, 56, 1, 13, 147, 82, 116, 137, 65, 35, 130, 91, 195, 153, 10, 13, 76, 70, 93, 184, 188, 40, 174, 118, 21, 174, 71, 79, 207, 93, 10, 109, 150, 177, 181, 170, 237, 87, 93, 238, 20, 217, 170, 162, 204, 137, 166, 172, 205, 224, 39, 91, 11, 161, 75, 139, 138, 139, 247, 228, 11, 37, 185, 227, 24, 21, 197, 18, 228, 96, 32, 244, 232, 111, 163, 226, 126, 11, 169, 140, 8, 154, 129, 238, 54, 175, 98, 244, 101, 42, 32, 98, 95, 121, 226, 239, 32, 198, 138, 183, 195, 148, 199, 109, 192, 50, 114, 155, 254, 105, 12, 126, 225, 107, 220, 112, 163, 202, 172, 105, 178, 208, 172, 185, 64, 189, 149, 111, 141, 179, 194, 183, 129, 242, 200, 116, 210, 19, 46, 3, 61, 198, 246, 252, 29, 161, 128, 244, 156, 113, 76, 85, 26, 32, 4, 243, 232, 13, 45, 2, 157, 2, 14, 74, 167, 85, 253, 239, 163, 103, 157, 143, 156, 168, 43, 235, 218, 175, 156, 158, 60, 160, 210, 27, 103, 108, 157, 96, 237, 212, 140, 196, 230, 43, 102, 58, 184, 171, 85, 200, 164, 145, 80, 52, 212, 188, 185, 113, 245, 25, 24, 56, 113, 142, 198, 252, 47, 243, 227, 58, 183, 156, 2, 206, 219, 216, 169, 113, 66, 240, 51, 46, 90, 211, 250, 171, 80, 157, 71, 171, 179, 44, 107, 212, 187, 83, 83, 88, 101, 105, 11, 196, 200, 26, 16, 7, 143, 130, 89, 251, 18, 72, 46, 4, 229, 234, 221, 157, 147, 27, 172, 145, 171, 56, 135, 139, 49, 46, 18, 135, 133, 80, 11, 216, 229, 110, 102, 64, 195, 242, 28, 206, 68, 76, 152, 107, 253, 103, 238, 209, 118, 181, 196, 73, 189, 121, 25, 144, 147, 133, 214, 96, 111, 209, 117, 194, 60, 86, 30, 119, 131, 157, 218, 161, 255, 222, 77, 95, 159, 27, 142, 201, 63, 64, 17, 207, 140, 194, 27, 108, 85, 214, 172, 62, 27, 187, 94, 115, 214, 214, 47, 166, 73, 119, 78, 217, 219, 35, 74, 223, 44, 185, 240, 119, 246, 13, 32, 46, 192, 166, 53, 122, 59, 177, 33, 172, 240, 155, 133, 67, 127, 217, 137, 201, 236, 231, 128, 200 } }
                });

            migrationBuilder.InsertData(
                table: "Trucks",
                columns: new[] { "TruckID", "Capacity", "ChassisNumber", "CreatedAt", "DeletedAt", "EngineNumber", "FuelConsumption", "FuelType", "InsuranceExpirationDate", "InsurancePolicyNumber", "Model", "RegistrationNumber", "TruckNumber", "VIN", "Year" },
                values: new object[,]
                {
                    { 1, 690, "6b27105d-4c13-46b6-9640-cdf57d7ab11d", new DateTime(2022, 7, 28, 0, 45, 53, 279, DateTimeKind.Local).AddTicks(3128), null, "9722c8c1-a95c-488b-8b2b-0b70d18ca4d0", 3.461385633079980m, "Electric", new DateTime(2023, 9, 6, 12, 30, 23, 271, DateTimeKind.Local).AddTicks(139), "78211876-daf3-4bf2-a072-a183dec5a9ab", "CX-9", "PPY35DS6SBVV60067", "83GRNFCX3NA838810", "PP0ZTU2II9ZO44795", 2022 },
                    { 2, 351, "02d26a4f-9580-460c-88fd-9d15cc16df29", new DateTime(2022, 9, 9, 14, 21, 32, 249, DateTimeKind.Local).AddTicks(6333), null, "e6ce48a6-c64a-47fd-86c7-65ede46b66c1", 1.941382941296968m, "Gasoline", new DateTime(2024, 3, 17, 11, 44, 50, 249, DateTimeKind.Local).AddTicks(59), "e6a2cb33-3c32-42fd-8dfb-73827de481a9", "Wrangler", "Q32CBQWTNXCO93294", "RE5Z3BSG80T110680", "Z31CUOQO31H954980", 2022 }
                });

            migrationBuilder.InsertData(
                table: "Trucks",
                columns: new[] { "TruckID", "Capacity", "ChassisNumber", "CreatedAt", "DeletedAt", "EngineNumber", "FuelConsumption", "FuelType", "InsuranceExpirationDate", "InsurancePolicyNumber", "Model", "RegistrationNumber", "TruckNumber", "VIN", "Year" },
                values: new object[,]
                {
                    { 3, 914, "b1581ad1-9683-4a28-87d5-d00669f7277d", new DateTime(2022, 10, 23, 3, 57, 11, 219, DateTimeKind.Local).AddTicks(9427), null, "65b484d9-4887-4704-828e-774293b2c8ab", 4.421380249513956m, "Diesel", new DateTime(2023, 9, 26, 10, 59, 17, 226, DateTimeKind.Local).AddTicks(9820), "51c1c95a-63e8-41e2-8f47-007cc79774ca", "Focus", "RH7LH2ZGIJJH36519", "APV7K69YCDNT72551", "8I2OWIFUNTOU65165", 2023 },
                    { 4, 576, "ea3377f1-9b70-4c51-b935-a06454c452a8", new DateTime(2022, 12, 5, 17, 32, 50, 190, DateTimeKind.Local).AddTicks(2522), null, "534d82a4-4db0-4e1f-a039-edc2bf62df0a", 2.901377557730944m, "Gasoline", new DateTime(2023, 4, 6, 10, 13, 44, 204, DateTimeKind.Local).AddTicks(9581), "958f8224-e3ec-4e5e-8c4d-5dda61af8923", "Roadster", "SVCTOF33D5QA69745", "TZKE01PGHQGL44422", "IW31XC318KVE75350", 2022 },
                    { 5, 237, "07b56f3c-3bec-47df-a3ad-bc0ddc7538a2", new DateTime(2023, 1, 18, 7, 8, 29, 160, DateTimeKind.Local).AddTicks(5618), null, "ebd98190-0a57-452b-b936-235d718d868d", 1.3813748659479316m, "Hybrid", new DateTime(2023, 10, 16, 9, 28, 11, 182, DateTimeKind.Local).AddTicks(9342), "deb5cdbe-381a-44b3-9a75-8d8171aa7947", "Explorer", "T9H2US6Q8SY312971", "CA9MGX5YL4ZD16292", "RB4DZ6S7SCCZ85535", 2022 },
                    { 6, 800, "b6b7d028-6e27-4251-b37a-f36a90defe37", new DateTime(2023, 3, 2, 20, 44, 8, 130, DateTimeKind.Local).AddTicks(8707), null, "ca7c128a-bcf2-43eb-bfec-384cc46a89c3", 3.86137217416492m, "Electric", new DateTime(2023, 4, 26, 8, 42, 38, 160, DateTimeKind.Local).AddTicks(9096), "ed76825d-0566-4a12-9ff3-673c1276ace2", "Camry", "UMMB04AD3EFW46197", "UKYUWSLGPHS578163", "1P5Q00GDD4JJ95720", 2023 },
                    { 7, 462, "705f2b30-99e7-42da-bfc9-25a305c59f7d", new DateTime(2022, 4, 15, 10, 19, 47, 101, DateTimeKind.Local).AddTicks(1795), null, "b3bd58f3-e7d6-441d-8711-975fe6e16805", 2.341369482381908m, "Hybrid", new DateTime(2023, 11, 5, 7, 57, 5, 138, DateTimeKind.Local).AddTicks(8850), "34132c3b-5923-4f10-96be-82a7e830d7a6", "F-150", "V0QK6HD1Y0MP79423", "DVN1DO1YUULX50033", "A4532T5JXVR415904", 2022 },
                    { 8, 123, "66454ce4-bc87-42a7-b2d9-cac72bc6553d", new DateTime(2022, 5, 28, 23, 55, 26, 71, DateTimeKind.Local).AddTicks(4891), null, "b32f192e-5df5-40be-bc59-ab7657406c5d", 4.821366790598896m, "Diesel", new DateTime(2023, 5, 16, 7, 11, 32, 116, DateTimeKind.Local).AddTicks(8612), "c4b8daa3-1e00-406d-8606-87134b723763", "Land Cruiser", "WEVTCTHOTNTI22649", "W5C9TJHGY8EP21904", "KI6F3NTPHNYP26088", 2022 },
                    { 9, 686, "f236d47f-f9aa-4080-b8b4-19811bb8f531", new DateTime(2022, 7, 11, 13, 31, 5, 41, DateTimeKind.Local).AddTicks(7979), null, "d00894be-28ad-4b47-a570-c7f9fc7f7d6e", 3.301364098815884m, "Gasoline", new DateTime(2023, 11, 25, 6, 25, 59, 94, DateTimeKind.Local).AddTicks(8365), "2dcac900-7822-4deb-8cd9-0383e7cad7f9", "Ranchero", "XS02I6KBO9AB55875", "FG2H9FXY3LXH83775", "TW7S5HIV2EF936273", 2022 },
                    { 10, 348, "68e38b8a-6e30-4d85-99bf-7ed5ca2ee706", new DateTime(2022, 8, 24, 3, 6, 44, 12, DateTimeKind.Local).AddTicks(1067), null, "eccd639a-9c3f-4d4c-a91f-0adbd651f749", 1.781361407032872m, "Diesel", new DateTime(2023, 6, 5, 5, 40, 26, 72, DateTimeKind.Local).AddTicks(8119), "507c42d9-acd5-46d2-8e6d-92bbb0715d01", "Civic", "Y65AOIOYJVI489102", "YRROPADG7YR955645", "3B847B72M6MU46458", 2022 },
                    { 11, 910, "58d832d6-54b9-4a47-a6ef-526df6075db8", new DateTime(2022, 10, 6, 16, 42, 22, 982, DateTimeKind.Local).AddTicks(4161), null, "01642fb7-e4fd-407f-a023-fd910ef8b127", 4.261358715249856m, "Electric", new DateTime(2023, 12, 15, 4, 54, 53, 50, DateTimeKind.Local).AddTicks(7878), "82c9cac6-f8e3-46de-842a-8a9bfb383583", "Malibu", "ZKAJUVSLEIPX32327", "H1GW66UYCBK127516", "CP9H85V87YUE56643", 2022 },
                    { 12, 572, "1708fa3c-23c7-4847-9b93-e685d04bae42", new DateTime(2022, 11, 19, 6, 18, 1, 952, DateTimeKind.Local).AddTicks(7252), null, "f3df0377-0ae4-4f00-b8ac-1b3ec8a48677", 2.741356023466848m, "Hybrid", new DateTime(2023, 6, 25, 4, 9, 20, 28, DateTimeKind.Local).AddTicks(7633), "17530c37-e878-4ea4-9699-e36b11f98afd", "Altima", "0YES08V894WQ65553", "ZC54M1AGGPDU89387", "M4ATAYKERPBZ66828", 2022 },
                    { 13, 234, "352c9f2c-eddd-4c24-a1a6-e00527e16e9d", new DateTime(2023, 1, 1, 19, 53, 40, 923, DateTimeKind.Local).AddTicks(338), null, "3a6c0d10-78c9-4894-b468-19d52fc82c7b", 1.2213533316838336m, "Electric", new DateTime(2024, 1, 4, 3, 23, 47, 6, DateTimeKind.Local).AddTicks(7385), "82e2fee6-10c1-44ca-b57c-92a4b062883d", "Camaro", "1CJ16KZV3QDJ98780", "IMUB2XQYL2WM61257", "VIB6BS8KCHIK77013", 2023 },
                    { 14, 797, "7b8a52f6-9971-4a21-8ad7-b715ef8f2c46", new DateTime(2023, 2, 14, 9, 29, 19, 893, DateTimeKind.Local).AddTicks(3434), null, "1d33697d-494b-4aab-a34f-e7d1069befad", 3.701350639900820m, "Gasoline", new DateTime(2023, 7, 15, 2, 38, 13, 984, DateTimeKind.Local).AddTicks(7148), "6cbba97e-33c1-43e4-b958-f5f5520b8b0b", "A4", "2QOACX2JYDKC42005", "1XJJIS6GPFPE33127", "5XCJDMXQW9P487198", 2022 },
                    { 15, 458, "55895508-9776-41b5-8788-f7699cb46943", new DateTime(2023, 3, 29, 23, 4, 58, 863, DateTimeKind.Local).AddTicks(6526), null, "a4681d6b-a346-4b4e-8f54-9f92b68b39b6", 2.181347948117808m, "Diesel", new DateTime(2024, 1, 24, 1, 52, 40, 962, DateTimeKind.Local).AddTicks(6904), "8e078d12-348f-40f3-8e9a-026707896b11", "Colorado", "24TJI966TZR575231", "K79RZOMYTSI694999", "EBDVEGLWH0WP97383", 2022 },
                    { 16, 120, "c2a7d781-9633-46f5-8442-79f2b1a700b4", new DateTime(2022, 5, 12, 12, 40, 37, 833, DateTimeKind.Local).AddTicks(9613), null, "bee1003e-14cd-436b-921d-ef50a3d405b2", 4.661345256334796m, "Gasoline", new DateTime(2023, 8, 4, 1, 7, 7, 940, DateTimeKind.Local).AddTicks(6657), "5ec7575c-1acd-498b-8d48-ab373a025d78", "Golf", "3IXRPM9TOLZY18457", "3IYZFJ2GY6CY66869", "OQE8GAA21SE917566", 2023 },
                    { 17, 683, "e984c53f-a079-4b0b-84aa-5c44c5b33dae", new DateTime(2022, 6, 25, 2, 16, 16, 804, DateTimeKind.Local).AddTicks(2707), null, "81fdd679-7f6a-4623-a3c0-9af778850a6f", 3.141342564551784m, "Diesel", new DateTime(2024, 2, 13, 0, 21, 34, 918, DateTimeKind.Local).AddTicks(6417), "c549ab92-9db3-4618-ab39-b9e815022477", "CTS", "4W20VYDGJ7GR51683", "LSN6VEIY2JVQ38739", "X4EKH4Y9LKLU27751", 2022 },
                    { 18, 344, "4feb2e17-1fc0-4a9d-86d7-63567b7137a7", new DateTime(2022, 8, 7, 15, 51, 55, 774, DateTimeKind.Local).AddTicks(5796), null, "bc2e7e6f-5579-42a8-a9d1-6bf0952f9e21", 1.621339872768772m, "Electric", new DateTime(2023, 8, 23, 23, 36, 1, 896, DateTimeKind.Local).AddTicks(6170), "f1aee2eb-a27c-4ec7-8041-d35f5370984b", "Spyder", "5A791BG3EUNK84909", "43CEBAYH7WOI10610", "7JFXJXNF6BSF37936", 2022 },
                    { 19, 907, "dcfd39ad-ba85-4cf7-b459-37a29a9c2112", new DateTime(2022, 9, 20, 5, 27, 34, 744, DateTimeKind.Local).AddTicks(8883), null, "a0263d90-4585-4245-9c85-02b007128e5d", 4.10133718098576m, "Hybrid", new DateTime(2024, 3, 3, 22, 50, 28, 874, DateTimeKind.Local).AddTicks(5924), "3f2a742c-084b-491c-8efc-97df0563fe32", "ATS", "6OCI7OKQ9GUD28135", "NE1MS5FZBAHA72481", "GXG9LRBLQ3ZZ48121", 2022 },
                    { 20, 569, "f140bc4d-7be3-4561-a5ff-621138f79e1f", new DateTime(2022, 11, 2, 19, 3, 13, 715, DateTimeKind.Local).AddTicks(1980), null, "2a053486-48df-42de-9643-73fb3730be5f", 2.581334489202748m, "Electric", new DateTime(2023, 9, 12, 22, 4, 55, 852, DateTimeKind.Local).AddTicks(5686), "903b8b25-5855-40cc-81fd-ce43287ddf23", "Mercielago", "72HRD0NE42B661361", "6OQT81VHGNA244351", "PCHMML0RBUHK58306", 2022 }
                });

            migrationBuilder.InsertData(
                table: "Drivers",
                columns: new[] { "DriverID", "Address", "Birthdate", "CompanyID", "CreatedAt", "DeletedAt", "DriverLicenseCategory", "DriverLicenseExpirationDate", "DriverLicenseIssuingAuthority", "DriverLicenseIssuingDate", "DriverLicenseNumber", "Email", "EmploymentEndDate", "EmploymentStartDate", "EmploymentStatus", "FirstName", "Gender", "IdentificationExpirationDate", "IdentificationNumber", "IdentificationType", "LastName", "MaritalStatus", "MiddleName", "Nationality", "Phone", "PhotoID", "PlaceOfBirth" },
                values: new object[,]
                {
                    { 1, "3885 Dach Square, Maximilliantown, Zambia", new DateTime(2003, 7, 10, 2, 53, 19, 623, DateTimeKind.Local).AddTicks(819), 19, new DateTime(2022, 9, 15, 0, 59, 49, 276, DateTimeKind.Local).AddTicks(1609), null, "A", new DateTime(2024, 2, 6, 1, 30, 17, 584, DateTimeKind.Local).AddTicks(3432), "Hamillshire", new DateTime(2021, 11, 14, 18, 16, 1, 637, DateTimeKind.Local).AddTicks(2631), "dhdkb269fr", "Sonya34@yahoo.com", new DateTime(2026, 9, 29, 3, 16, 5, 608, DateTimeKind.Local).AddTicks(3501), new DateTime(2022, 5, 23, 15, 11, 46, 617, DateTimeKind.Local).AddTicks(937), "Contractor", "Delores", "Female", new DateTime(2023, 5, 4, 17, 38, 29, 973, DateTimeKind.Local).AddTicks(8846), "8bzonamppy", "Passport", "Brown", "Divorced", "Konopelski", "Bhutan", "805-852-9634", 1, "West Tyree" },
                    { 2, "906 Schulist Ports, Wuckertton, Argentina", new DateTime(2019, 12, 23, 4, 35, 12, 370, DateTimeKind.Local).AddTicks(5585), null, new DateTime(2023, 2, 1, 0, 8, 7, 638, DateTimeKind.Local).AddTicks(7677), null, "D", new DateTime(2024, 1, 11, 4, 7, 29, 688, DateTimeKind.Local).AddTicks(6073), "Reichertport", new DateTime(2018, 5, 29, 20, 59, 31, 566, DateTimeKind.Local).AddTicks(5183), "fusc8nqiha", "Dianne_Auer@yahoo.com", new DateTime(2024, 12, 11, 13, 27, 28, 522, DateTimeKind.Local).AddTicks(3591), new DateTime(2022, 6, 28, 5, 25, 4, 283, DateTimeKind.Local).AddTicks(2020), "Part-Time", "Ole", "Female", new DateTime(2023, 8, 2, 12, 40, 45, 158, DateTimeKind.Local).AddTicks(6891), "10idap8q32", "Driver's License", "Jakubowski", "Single", "Cummerata", "Cyprus", "467-860-0224", 2, "Lake Isaac" },
                    { 3, "342 Jonatan Neck, South Anikachester, Togo", new DateTime(2006, 6, 7, 6, 17, 5, 117, DateTimeKind.Local).AddTicks(9443), 8, new DateTime(2022, 10, 1, 23, 4, 59, 392, DateTimeKind.Local).AddTicks(8139), null, "A", new DateTime(2023, 11, 5, 3, 15, 13, 814, DateTimeKind.Local).AddTicks(1314), "Bruenhaven", new DateTime(2016, 8, 30, 23, 7, 15, 997, DateTimeKind.Local).AddTicks(4974), "822pf4yb6n", "Clayton.Kiehn79@gmail.com", new DateTime(2025, 1, 22, 22, 40, 26, 665, DateTimeKind.Local).AddTicks(3744), new DateTime(2022, 5, 6, 12, 0, 29, 618, DateTimeKind.Local).AddTicks(3427), "Freelance", "Eldora", "Male", new DateTime(2023, 9, 30, 3, 48, 21, 552, DateTimeKind.Local).AddTicks(2269), "p12w4urh7l", "Driver's License", "Predovic", "Divorced", "Streich", "Heard Island and McDonald Islands", "686-585-8644", 3, "East Ulisesborough" },
                    { 4, "63659 Gardner Drive, North Tremayneborough, Bosnia and Herzegovina", new DateTime(2022, 11, 20, 7, 58, 57, 865, DateTimeKind.Local).AddTicks(3242), null, new DateTime(2022, 10, 3, 7, 15, 36, 724, DateTimeKind.Local).AddTicks(2109), null, "D", new DateTime(2023, 6, 12, 23, 45, 50, 569, DateTimeKind.Local).AddTicks(4186), "East Wellington", new DateTime(2022, 6, 6, 3, 21, 39, 180, DateTimeKind.Local).AddTicks(5016), "kdpjitwwqx", "Gayle_Swift32@gmail.com", new DateTime(2023, 4, 17, 22, 58, 48, 172, DateTimeKind.Local).AddTicks(8631), new DateTime(2022, 11, 30, 8, 57, 1, 143, DateTimeKind.Local).AddTicks(7943), "Contractor", "Ray", "Male", new DateTime(2023, 12, 1, 0, 20, 45, 591, DateTimeKind.Local).AddTicks(7860), "djsjjhsvct", "National ID", "Zboncak", "Single", "Maggio", "Saint Helena", "258-347-0365", 4, "New Isidroview" },
                    { 5, "791 Napoleon Ford, Lake Eloiseland, Honduras", new DateTime(2009, 5, 5, 9, 40, 50, 612, DateTimeKind.Local).AddTicks(7026), 13, new DateTime(2023, 1, 1, 22, 7, 6, 303, DateTimeKind.Local).AddTicks(8356), null, "A", new DateTime(2024, 3, 20, 15, 30, 19, 357, DateTimeKind.Local).AddTicks(4304), "Lake Haylie", new DateTime(2017, 9, 3, 12, 12, 15, 561, DateTimeKind.Local).AddTicks(4923), "8f0z7zd0o9", "Brian.Leuschke50@hotmail.com", new DateTime(2024, 9, 18, 7, 42, 49, 414, DateTimeKind.Local).AddTicks(7364), new DateTime(2022, 4, 28, 6, 38, 59, 230, DateTimeKind.Local).AddTicks(5202), "Freelance", "Eula", "Female", new DateTime(2023, 4, 27, 21, 47, 30, 712, DateTimeKind.Local).AddTicks(8710), "d22h5y3t9h", "Driver's License", "Graham", "Single", "Gislason", "Montserrat", "971-373-1985", 5, "Corkeryshire" },
                    { 6, "42940 Gerhard Common, Brockmouth, Angola", new DateTime(1995, 10, 19, 11, 22, 43, 360, DateTimeKind.Local).AddTicks(824), null, new DateTime(2022, 6, 4, 23, 48, 55, 530, DateTimeKind.Local).AddTicks(3703), null, "A", new DateTime(2023, 11, 15, 8, 26, 50, 995, DateTimeKind.Local).AddTicks(8610), "Port Madisen", new DateTime(2022, 3, 13, 23, 26, 22, 451, DateTimeKind.Local).AddTicks(4415), "65rirci6i2", "Julian_Reynolds39@yahoo.com", new DateTime(2028, 3, 23, 2, 23, 59, 703, DateTimeKind.Local).AddTicks(9261), new DateTime(2022, 8, 20, 23, 47, 59, 245, DateTimeKind.Local).AddTicks(8615), "Contractor", "Sabrina", "Female", new DateTime(2023, 7, 26, 16, 49, 45, 897, DateTimeKind.Local).AddTicks(5974), "5rl6rdpumm", "Driver's License", "Mayert", "Married", "Windler", "Puerto Rico", "233-513-5900", 6, "Mertzview" },
                    { 7, "0477 Alessandra Villages, North Casey, Belize", new DateTime(2012, 4, 2, 13, 4, 36, 107, DateTimeKind.Local).AddTicks(4588), null, new DateTime(2022, 4, 27, 2, 48, 42, 81, DateTimeKind.Local).AddTicks(8081), null, "B", new DateTime(2023, 5, 21, 17, 48, 51, 336, DateTimeKind.Local).AddTicks(3333), "Christophermouth", new DateTime(2015, 1, 5, 16, 4, 39, 329, DateTimeKind.Local).AddTicks(6053), "k2rridla81", "Beulah_Mante59@hotmail.com", new DateTime(2027, 1, 9, 7, 58, 47, 201, DateTimeKind.Local).AddTicks(3792), new DateTime(2022, 7, 14, 5, 8, 54, 502, DateTimeKind.Local).AddTicks(6462), "Contractor", "Geovany", "Male", new DateTime(2023, 10, 24, 11, 52, 1, 82, DateTimeKind.Local).AddTicks(3212), "xg4vescv0q", "National ID", "Swaniawski", "Widowed", "Olson", "Sudan", "215-898-6105", 7, "Allisonshire" },
                    { 8, "675 Margaret Station, South Jordanville, Jamaica", new DateTime(1998, 9, 16, 14, 46, 28, 854, DateTimeKind.Local).AddTicks(8347), null, new DateTime(2022, 11, 27, 2, 25, 26, 87, DateTimeKind.Local).AddTicks(5314), null, "A", new DateTime(2023, 7, 4, 6, 46, 35, 305, DateTimeKind.Local).AddTicks(6193), "South Priscilla", new DateTime(2021, 1, 12, 10, 13, 2, 166, DateTimeKind.Local).AddTicks(4198), "21cuznt4ji", "Melissa.McCullough@gmail.com", new DateTime(2024, 2, 29, 11, 39, 15, 977, DateTimeKind.Local).AddTicks(9145), new DateTime(2022, 5, 23, 18, 30, 42, 647, DateTimeKind.Local).AddTicks(7250), "Contractor", "Susanna", "Male", new DateTime(2024, 1, 22, 6, 54, 16, 267, DateTimeKind.Local).AddTicks(438), "p4mk08ywev", "Passport", "Cruickshank", "Single", "Hessel", "Vietnam", "287-746-9611", 8, "Jennieview" },
                    { 9, "20358 Haley Ramp, Emardmouth, Canada", new DateTime(2015, 3, 1, 16, 28, 21, 602, DateTimeKind.Local).AddTicks(2114), null, new DateTime(2022, 6, 26, 18, 59, 14, 906, DateTimeKind.Local).AddTicks(3545), null, "B", new DateTime(2023, 8, 5, 22, 33, 35, 911, DateTimeKind.Local).AddTicks(1474), "Port Gilbert", new DateTime(2014, 5, 14, 14, 19, 20, 600, DateTimeKind.Local).AddTicks(75), "bx7lqc11of", "Wade32@hotmail.com", new DateTime(2026, 1, 21, 14, 42, 34, 200, DateTimeKind.Local).AddTicks(995), new DateTime(2022, 4, 29, 9, 4, 30, 50, DateTimeKind.Local).AddTicks(4456), "Freelance", "Hilario", "Male", new DateTime(2023, 4, 21, 1, 56, 31, 451, DateTimeKind.Local).AddTicks(7663), "ht5annkxs0", "Driver's License", "Koch", "Divorced", "Beer", "Benin", "580-642-2267", 9, "Port Verner" },
                    { 10, "8318 Williamson Mountain, West Dawnland, Comoros", new DateTime(2001, 8, 14, 18, 10, 14, 349, DateTimeKind.Local).AddTicks(5858), 9, new DateTime(2022, 12, 2, 19, 11, 9, 780, DateTimeKind.Local).AddTicks(7305), null, "C", new DateTime(2023, 8, 14, 15, 26, 22, 739, DateTimeKind.Local).AddTicks(5686), "East Americafurt", new DateTime(2018, 12, 15, 7, 48, 24, 165, DateTimeKind.Local).AddTicks(1646), "ij6svxjuqd", "Sheryl_Casper19@gmail.com", new DateTime(2027, 6, 25, 15, 34, 30, 351, DateTimeKind.Local).AddTicks(9770), new DateTime(2022, 7, 23, 22, 59, 29, 549, DateTimeKind.Local).AddTicks(6775), "Freelance", "Valentine", "Female", new DateTime(2023, 7, 19, 20, 58, 46, 636, DateTimeKind.Local).AddTicks(4874), "9ioz927y65", "National ID", "Rolfson", "Widowed", "Rosenbaum", "Croatia", "406-314-8416", 10, "West Jadon" },
                    { 11, "592 Huel Mills, Lake Diego, Latvia", new DateTime(2018, 1, 27, 19, 52, 7, 96, DateTimeKind.Local).AddTicks(9590), 4, new DateTime(2022, 5, 21, 21, 16, 31, 280, DateTimeKind.Local).AddTicks(7521), null, "A", new DateTime(2023, 5, 24, 2, 50, 44, 752, DateTimeKind.Local).AddTicks(289), "Eloyborough", new DateTime(2018, 8, 4, 7, 16, 14, 122, DateTimeKind.Local).AddTicks(9664), "3u3wsvet10", "Dennis_Murphy72@hotmail.com", new DateTime(2025, 3, 24, 20, 54, 17, 908, DateTimeKind.Local).AddTicks(8635), new DateTime(2023, 2, 4, 9, 8, 34, 728, DateTimeKind.Local).AddTicks(5369), "Full-Time", "Jaquelin", "Female", new DateTime(2024, 2, 6, 0, 7, 33, 868, DateTimeKind.Local).AddTicks(6763), "76owhtzkaj", "Passport", "Bayer", "Married", "Koch", "Gibraltar", "382-329-7457", 11, "Lake Vickyborough" },
                    { 12, "876 Demetris Coves, Borisburgh, Spain", new DateTime(2004, 7, 12, 21, 33, 59, 844, DateTimeKind.Local).AddTicks(3316), 6, new DateTime(2022, 7, 24, 5, 0, 2, 0, DateTimeKind.Local).AddTicks(8086), null, "C", new DateTime(2023, 10, 9, 1, 38, 2, 685, DateTimeKind.Local).AddTicks(1), "Fritschland", new DateTime(2020, 10, 17, 4, 12, 21, 877, DateTimeKind.Local).AddTicks(6300), "8exxqj6cjr", "Milton34@hotmail.com", new DateTime(2023, 5, 4, 3, 44, 14, 699, DateTimeKind.Local).AddTicks(565), new DateTime(2023, 3, 19, 19, 33, 33, 11, DateTimeKind.Local).AddTicks(8233), "Contractor", "Zelda", "Male", new DateTime(2023, 4, 7, 20, 39, 57, 908, DateTimeKind.Local).AddTicks(2282), "vpdiwf0yes", "Driver's License", "Hayes", "Single", "Crist", "Peru", "453-977-0962", 12, "East Jakobview" },
                    { 13, "7159 Torphy Court, Lefflerburgh, Christmas Island", new DateTime(2020, 12, 25, 23, 15, 52, 591, DateTimeKind.Local).AddTicks(7046), 15, new DateTime(2022, 7, 5, 0, 4, 25, 226, DateTimeKind.Local).AddTicks(1516), null, "C", new DateTime(2023, 4, 22, 12, 52, 28, 649, DateTimeKind.Local).AddTicks(8755), "New Llewellyn", new DateTime(2016, 12, 19, 4, 52, 4, 913, DateTimeKind.Local).AddTicks(5857), "lnlu3d9kzz", "Lucas.Olson@hotmail.com", new DateTime(2024, 2, 26, 19, 3, 23, 992, DateTimeKind.Local).AddTicks(3829), new DateTime(2022, 7, 29, 2, 49, 17, 29, DateTimeKind.Local).AddTicks(5513), "Part-Time", "Joseph", "Male", new DateTime(2023, 4, 14, 6, 5, 32, 190, DateTimeKind.Local).AddTicks(6464), "mk825b11cj", "Driver's License", "Murray", "Single", "Steuber", "Monaco", "425-834-3577", 13, "Rennershire" },
                    { 14, "343 Justine Walk, North Tillman, Greenland", new DateTime(2007, 6, 11, 0, 57, 45, 339, DateTimeKind.Local).AddTicks(757), null, new DateTime(2022, 11, 13, 12, 26, 38, 697, DateTimeKind.Local).AddTicks(3515), null, "E", new DateTime(2023, 9, 11, 13, 36, 55, 45, DateTimeKind.Local).AddTicks(9529), "Camdenbury", new DateTime(2017, 6, 26, 20, 46, 25, 406, DateTimeKind.Local).AddTicks(8484), "2zikjyp1r4", "Ralph79@gmail.com", new DateTime(2023, 6, 24, 8, 3, 20, 77, DateTimeKind.Local).AddTicks(6643), new DateTime(2023, 3, 7, 15, 34, 21, 417, DateTimeKind.Local).AddTicks(4764), "Full-Time", "Aliyah", "Female", new DateTime(2023, 7, 13, 1, 7, 47, 375, DateTimeKind.Local).AddTicks(3642), "e9rsrqo2qo", "National ID", "Walsh", "Married", "Lueilwitz", "Poland", "669-479-2618", 14, "Daughertyview" },
                    { 15, "96174 Chaim Stream, West Shania, Iran", new DateTime(1993, 11, 24, 2, 39, 38, 86, DateTimeKind.Local).AddTicks(4469), 7, new DateTime(2022, 6, 13, 10, 29, 47, 367, DateTimeKind.Local).AddTicks(9662), null, "A", new DateTime(2023, 10, 17, 19, 6, 50, 131, DateTimeKind.Local).AddTicks(4298), "South Kathlyn", new DateTime(2019, 2, 10, 4, 6, 49, 790, DateTimeKind.Local).AddTicks(7098), "4if2p9snu1", "Abraham_Moore@yahoo.com", new DateTime(2026, 11, 18, 4, 10, 18, 754, DateTimeKind.Local).AddTicks(7396), new DateTime(2022, 4, 11, 2, 32, 32, 153, DateTimeKind.Local).AddTicks(3643), "Part-Time", "Kelsi", "Female", new DateTime(2023, 10, 10, 20, 10, 2, 560, DateTimeKind.Local).AddTicks(819), "6x9he6a24t", "National ID", "Erdman", "Widowed", "Funk", "Spain", "594-608-7980", 15, "Litzyshire" },
                    { 16, "6990 Reanna Rest, Mortimerbury, Denmark", new DateTime(2010, 5, 9, 4, 21, 30, 833, DateTimeKind.Local).AddTicks(8202), null, new DateTime(2022, 8, 21, 18, 52, 23, 722, DateTimeKind.Local).AddTicks(7769), null, "B", new DateTime(2023, 11, 23, 0, 36, 45, 216, DateTimeKind.Local).AddTicks(9071), "Lake Mitchelborough", new DateTime(2020, 9, 25, 11, 27, 14, 174, DateTimeKind.Local).AddTicks(5718), "71bkvkvawz", "Johnnie74@hotmail.com", new DateTime(2023, 11, 12, 1, 38, 7, 818, DateTimeKind.Local).AddTicks(216), new DateTime(2022, 11, 3, 0, 37, 46, 440, DateTimeKind.Local).AddTicks(9610), "Freelance", "Arvel", "Female", new DateTime(2024, 1, 8, 15, 12, 17, 744, DateTimeKind.Local).AddTicks(8029), "yms60lw3ix", "Passport", "Langworth", "Single", "Wilderman", "Uzbekistan", "520-407-1203", 16, "Aracelyview" },
                    { 17, "227 Jaiden Orchard, Port Brent, Iraq", new DateTime(1996, 10, 22, 6, 3, 23, 581, DateTimeKind.Local).AddTicks(1941), 11, new DateTime(2023, 2, 17, 1, 55, 57, 459, DateTimeKind.Local).AddTicks(9821), null, "A", new DateTime(2024, 1, 26, 15, 58, 55, 191, DateTimeKind.Local).AddTicks(2145), "Port Isadoremouth", new DateTime(2015, 10, 18, 12, 26, 0, 91, DateTimeKind.Local).AddTicks(2390), "k721vyxzxf", "Erma_Cartwright@yahoo.com", new DateTime(2026, 6, 6, 5, 26, 35, 963, DateTimeKind.Local).AddTicks(6335), new DateTime(2022, 4, 27, 12, 26, 12, 311, DateTimeKind.Local).AddTicks(6975), "Full-Time", "Lenny", "Male", new DateTime(2023, 4, 7, 10, 14, 32, 929, DateTimeKind.Local).AddTicks(5235), "qbbvn0j4w2", "Driver's License", "Schneider", "Divorced", "O'Conner", "Belarus", "619-526-5481", 17, "South Wallace" },
                    { 18, "85581 Beau Lake, Idellside, Mali", new DateTime(2013, 4, 6, 7, 45, 16, 328, DateTimeKind.Local).AddTicks(5716), 17, new DateTime(2022, 9, 8, 0, 3, 46, 36, DateTimeKind.Local).AddTicks(8633), null, "A", new DateTime(2023, 6, 15, 22, 13, 24, 747, DateTimeKind.Local).AddTicks(5214), "North Kathlynton", new DateTime(2017, 5, 18, 16, 36, 41, 719, DateTimeKind.Local).AddTicks(7369), "v9p3p6b0c3", "Felipe.Ullrich79@hotmail.com", new DateTime(2027, 11, 17, 17, 8, 14, 947, DateTimeKind.Local).AddTicks(6559), new DateTime(2022, 8, 22, 22, 35, 32, 184, DateTimeKind.Local).AddTicks(5427), "Freelance", "Breana", "Male", new DateTime(2023, 7, 6, 5, 16, 48, 114, DateTimeKind.Local).AddTicks(2472), "i0uk9f55a7", "National ID", "Boyle", "Widowed", "Heller", "Cook Islands", "941-737-4336", 18, "Port Jany" },
                    { 19, "7324 Glover Lodge, Kohlerburgh, Mongolia", new DateTime(1999, 9, 20, 9, 27, 9, 75, DateTimeKind.Local).AddTicks(9442), 5, new DateTime(2022, 8, 17, 15, 3, 42, 431, DateTimeKind.Local).AddTicks(4384), null, "C", new DateTime(2023, 6, 5, 8, 21, 49, 942, DateTimeKind.Local).AddTicks(4538), "Lake Ovamouth", new DateTime(2022, 1, 28, 7, 24, 46, 7, DateTimeKind.Local).AddTicks(904), "3zsnmem03d", "Lynne_Abernathy@yahoo.com", new DateTime(2026, 12, 6, 16, 29, 50, 882, DateTimeKind.Local).AddTicks(5445), new DateTime(2022, 12, 12, 17, 43, 41, 146, DateTimeKind.Local).AddTicks(4661), "Freelance", "Mack", "Female", new DateTime(2023, 6, 13, 20, 26, 46, 185, DateTimeKind.Local).AddTicks(978), "ocawur6oci", "Passport", "Huel", "Married", "Beatty", "Falkland Islands (Malvinas)", "857-409-9495", 19, "West Websterborough" },
                    { 20, "0157 Braxton Cliff, South Lisandro, Netherlands", new DateTime(2016, 3, 4, 11, 9, 1, 823, DateTimeKind.Local).AddTicks(3204), 18, new DateTime(2022, 11, 14, 2, 25, 13, 693, DateTimeKind.Local).AddTicks(3057), null, "E", new DateTime(2023, 4, 15, 22, 36, 25, 558, DateTimeKind.Local).AddTicks(8228), "North Harrychester", new DateTime(2017, 3, 26, 16, 48, 51, 710, DateTimeKind.Local).AddTicks(258), "h5wljt7t8q", "Myron.Bradtke@gmail.com", new DateTime(2024, 12, 1, 3, 47, 19, 964, DateTimeKind.Local).AddTicks(6753), new DateTime(2023, 2, 12, 20, 15, 30, 881, DateTimeKind.Local).AddTicks(1257), "Part-Time", "Chandler", "Female", new DateTime(2023, 8, 14, 16, 59, 10, 224, DateTimeKind.Local).AddTicks(6541), "dvzi9e72hr", "Passport", "Pfannerstill", "Single", "Rogahn", "Nigeria", "673-282-5544", 20, "Port Jarretview" }
                });

            migrationBuilder.InsertData(
                table: "Inspections",
                columns: new[] { "InspectionID", "CreatedAt", "DeletedAt", "Description", "InspectionDate", "Result", "TruckID" },
                values: new object[,]
                {
                    { 1, new DateTime(2022, 10, 24, 14, 8, 29, 963, DateTimeKind.Local).AddTicks(4609), null, "totam", new DateTime(2022, 12, 30, 18, 58, 49, 608, DateTimeKind.Local).AddTicks(899), false, 14 },
                    { 2, new DateTime(2023, 3, 27, 11, 8, 49, 69, DateTimeKind.Local).AddTicks(9146), null, "Maiores aut nemo et.", new DateTime(2022, 6, 23, 2, 32, 4, 899, DateTimeKind.Local).AddTicks(8607), true, 5 },
                    { 3, new DateTime(2022, 10, 21, 23, 44, 21, 164, DateTimeKind.Local).AddTicks(19), null, "Natus dolor magnam rerum.\nVel quas consequatur optio doloremque.\nEt quia at.\nVoluptatum numquam qui et vitae asperiores blanditiis excepturi unde.\nDolores exercitationem et quas veritatis est.\nSint nihil vero distinctio consequatur unde quo laborum corrupti iusto.", new DateTime(2022, 12, 14, 10, 5, 20, 191, DateTimeKind.Local).AddTicks(6008), true, 11 },
                    { 4, new DateTime(2022, 6, 2, 14, 27, 2, 757, DateTimeKind.Local).AddTicks(6427), null, "Aut illo optio ducimus rem placeat. Officia eum omnis dolor. Perspiciatis voluptatum repellendus eos ut eum libero. Sunt aspernatur quis dolorem et corporis. Molestias et sunt eaque itaque nisi odit doloremque.", new DateTime(2022, 6, 6, 17, 38, 35, 483, DateTimeKind.Local).AddTicks(3502), true, 12 },
                    { 5, new DateTime(2022, 4, 9, 11, 25, 15, 835, DateTimeKind.Local).AddTicks(8330), null, "Fuga laudantium non ratione hic.", new DateTime(2022, 11, 28, 1, 11, 50, 775, DateTimeKind.Local).AddTicks(954), false, 3 },
                    { 6, new DateTime(2022, 9, 3, 19, 25, 51, 433, DateTimeKind.Local).AddTicks(6717), null, "Repudiandae et deserunt qui quisquam corrupti quo voluptatem possimus.\nSit omnis eum porro voluptas quidem laborum.\nConsequatur magni quis eum explicabo.\nSed repudiandae ea aperiam impedit eos.\nVoluptatem alias rem quis commodi aut eum omnis.\nQuasi beatae vel omnis minus perferendis odit nihil voluptatibus impedit.", new DateTime(2022, 5, 21, 8, 45, 6, 66, DateTimeKind.Local).AddTicks(8320), true, 11 },
                    { 7, new DateTime(2022, 8, 2, 9, 14, 25, 129, DateTimeKind.Local).AddTicks(6981), null, "Consequatur cum ipsa. Nulla at ducimus recusandae dignissimos aut aut ea aut suscipit. Accusantium placeat error quia deleniti iure doloremque tenetur accusantium. Porro est exercitationem aut neque dicta. Eum voluptatem ut.", new DateTime(2022, 11, 11, 16, 18, 21, 358, DateTimeKind.Local).AddTicks(5803), false, 18 },
                    { 8, new DateTime(2022, 9, 11, 18, 43, 41, 342, DateTimeKind.Local).AddTicks(7633), null, "ea", new DateTime(2022, 5, 4, 23, 51, 36, 650, DateTimeKind.Local).AddTicks(3243), true, 17 },
                    { 9, new DateTime(2023, 2, 26, 8, 9, 24, 284, DateTimeKind.Local).AddTicks(8000), null, "Deleniti enim nihil.", new DateTime(2022, 10, 26, 7, 24, 51, 942, DateTimeKind.Local).AddTicks(597), false, 20 },
                    { 10, new DateTime(2023, 1, 18, 13, 45, 25, 403, DateTimeKind.Local).AddTicks(9201), null, "Quisquam ullam iure praesentium numquam sapiente distinctio ad. Tempore voluptatibus ad et adipisci hic amet. Corporis soluta cupiditate soluta. Provident rerum nemo dolores debitis dicta voluptatem labore dolores adipisci. Adipisci illo quidem sit dolores. Ea dolor animi quod laborum quia perspiciatis sunt tempora.", new DateTime(2022, 4, 18, 14, 58, 7, 233, DateTimeKind.Local).AddTicks(7955), false, 11 },
                    { 11, new DateTime(2023, 1, 27, 20, 41, 37, 648, DateTimeKind.Local).AddTicks(1667), null, "blanditiis", new DateTime(2022, 10, 9, 22, 31, 22, 525, DateTimeKind.Local).AddTicks(5477), false, 4 },
                    { 12, new DateTime(2022, 7, 19, 12, 33, 2, 917, DateTimeKind.Local).AddTicks(5624), null, "Sed fuga quae veniam.", new DateTime(2022, 4, 2, 6, 4, 37, 817, DateTimeKind.Local).AddTicks(2826), true, 10 },
                    { 13, new DateTime(2022, 9, 4, 17, 13, 38, 254, DateTimeKind.Local).AddTicks(3891), null, "Architecto sint qui delectus qui.\nAccusamus et similique.\nVitae voluptatem voluptas illo.\nUt perspiciatis eaque.\nSunt aut necessitatibus aut.\nEos omnis maiores debitis cupiditate ipsam sit voluptas.", new DateTime(2022, 9, 23, 13, 37, 53, 109, DateTimeKind.Local).AddTicks(185), false, 5 },
                    { 14, new DateTime(2022, 4, 29, 0, 42, 9, 827, DateTimeKind.Local).AddTicks(9358), null, "Non autem dolor laudantium impedit iusto id. Aliquam facere dolor est placeat cum. Id cum veniam. Et quasi provident ut commodi. Ex ex qui molestiae laboriosam provident.", new DateTime(2023, 3, 16, 21, 11, 8, 400, DateTimeKind.Local).AddTicks(7615), true, 13 },
                    { 15, new DateTime(2022, 7, 30, 23, 18, 52, 722, DateTimeKind.Local).AddTicks(300), null, "magnam", new DateTime(2022, 9, 7, 4, 44, 23, 692, DateTimeKind.Local).AddTicks(5039), false, 20 },
                    { 16, new DateTime(2022, 12, 23, 9, 22, 31, 26, DateTimeKind.Local).AddTicks(1137), null, "Et ut architecto totam a quia beatae a harum autem.\nVoluptatem officia repudiandae aut.\nEarum est optio dolorum ut illum est.\nDelectus delectus explicabo libero minus reprehenderit incidunt.\nVeniam veniam vitae ipsa temporibus neque.\nVitae nisi rerum dolor impedit.", new DateTime(2023, 2, 28, 12, 17, 38, 984, DateTimeKind.Local).AddTicks(2393), false, 7 },
                    { 17, new DateTime(2023, 2, 18, 13, 17, 4, 428, DateTimeKind.Local).AddTicks(4125), null, "Aut esse cupiditate ut. Perspiciatis illum quod. Ipsam aut est aut sed. Eveniet architecto sit et. Consequatur praesentium unde modi et est laudantium non dolores esse.", new DateTime(2022, 8, 21, 19, 50, 54, 275, DateTimeKind.Local).AddTicks(9842), false, 10 },
                    { 18, new DateTime(2022, 12, 16, 1, 16, 49, 27, DateTimeKind.Local).AddTicks(4334), null, "aliquid", new DateTime(2023, 2, 12, 3, 24, 9, 567, DateTimeKind.Local).AddTicks(7271), true, 7 },
                    { 19, new DateTime(2022, 12, 1, 18, 34, 25, 642, DateTimeKind.Local).AddTicks(3079), null, "Laborum repellendus neque.", new DateTime(2022, 8, 5, 10, 57, 24, 859, DateTimeKind.Local).AddTicks(4618), true, 20 },
                    { 20, new DateTime(2022, 9, 7, 11, 8, 45, 370, DateTimeKind.Local).AddTicks(3294), null, "Ut eaque et voluptatum qui est accusantium vitae eum.\nVoluptatibus occaecati enim qui eius inventore voluptatum facere quis.\nDistinctio reprehenderit magni.\nQuasi amet sunt.\nLaboriosam corrupti fuga et mollitia aut assumenda ipsam.", new DateTime(2023, 1, 26, 18, 30, 40, 151, DateTimeKind.Local).AddTicks(1974), false, 6 }
                });

            migrationBuilder.InsertData(
                table: "Repairs",
                columns: new[] { "RepairID", "Cost", "CreatedAt", "DeletedAt", "Description", "RepairDate", "TruckID" },
                values: new object[,]
                {
                    { 1, 432.78m, new DateTime(2022, 4, 21, 1, 5, 1, 339, DateTimeKind.Local).AddTicks(4560), null, "Totam est expedita.", new DateTime(2022, 12, 30, 18, 58, 49, 609, DateTimeKind.Local).AddTicks(3493), 8 },
                    { 2, 224.98m, new DateTime(2022, 6, 25, 4, 41, 57, 624, DateTimeKind.Local).AddTicks(5432), null, "Dolorem maiores aut nemo et dignissimos.", new DateTime(2022, 6, 23, 2, 32, 4, 901, DateTimeKind.Local).AddTicks(1231), 1 }
                });

            migrationBuilder.InsertData(
                table: "Repairs",
                columns: new[] { "RepairID", "Cost", "CreatedAt", "DeletedAt", "Description", "RepairDate", "TruckID" },
                values: new object[,]
                {
                    { 3, 502.10m, new DateTime(2022, 7, 20, 21, 0, 35, 783, DateTimeKind.Local).AddTicks(526), null, "Et velit natus dolor magnam rerum ut vel.", new DateTime(2022, 12, 14, 10, 5, 20, 192, DateTimeKind.Local).AddTicks(8607), 17 },
                    { 4, 382.46m, new DateTime(2022, 6, 19, 2, 39, 29, 130, DateTimeKind.Local).AddTicks(5946), null, "Error velit aut illo optio ducimus rem placeat labore officia.", new DateTime(2022, 6, 6, 17, 38, 35, 484, DateTimeKind.Local).AddTicks(5983), 12 },
                    { 5, 950.60m, new DateTime(2023, 2, 16, 16, 22, 5, 225, DateTimeKind.Local).AddTicks(4553), null, "Voluptatem fuga laudantium non ratione.", new DateTime(2022, 11, 28, 1, 11, 50, 776, DateTimeKind.Local).AddTicks(3356), 12 },
                    { 6, 486.21m, new DateTime(2023, 2, 4, 5, 17, 21, 230, DateTimeKind.Local).AddTicks(1069), null, "Sapiente quo repudiandae et deserunt qui quisquam.", new DateTime(2022, 5, 21, 8, 45, 6, 68, DateTimeKind.Local).AddTicks(720), 15 },
                    { 7, 932.32m, new DateTime(2023, 2, 18, 22, 20, 24, 281, DateTimeKind.Local).AddTicks(7060), null, "Distinctio illo consequatur cum ipsa tenetur nulla at ducimus.", new DateTime(2022, 11, 11, 16, 18, 21, 359, DateTimeKind.Local).AddTicks(8085), 9 },
                    { 8, 490.48m, new DateTime(2022, 4, 12, 11, 54, 54, 150, DateTimeKind.Local).AddTicks(2754), null, "Ea ut illum unde.", new DateTime(2022, 5, 4, 23, 51, 36, 651, DateTimeKind.Local).AddTicks(5452), 10 },
                    { 9, 91.00m, new DateTime(2022, 4, 28, 20, 23, 0, 120, DateTimeKind.Local).AddTicks(4432), null, "Inventore deleniti enim nihil itaque a.", new DateTime(2022, 10, 26, 7, 24, 51, 943, DateTimeKind.Local).AddTicks(2818), 12 },
                    { 10, 274.46m, new DateTime(2022, 7, 29, 6, 1, 53, 767, DateTimeKind.Local).AddTicks(6338), null, "Possimus eligendi quisquam ullam iure praesentium numquam sapiente distinctio.", new DateTime(2022, 4, 18, 14, 58, 7, 235, DateTimeKind.Local).AddTicks(179), 11 },
                    { 11, 171.76m, new DateTime(2022, 4, 14, 21, 31, 48, 67, DateTimeKind.Local).AddTicks(8086), null, "Blanditiis et ipsum.", new DateTime(2022, 10, 9, 22, 31, 22, 526, DateTimeKind.Local).AddTicks(7547), 17 },
                    { 12, 462.39m, new DateTime(2022, 7, 19, 12, 33, 2, 918, DateTimeKind.Local).AddTicks(7701), null, "Sequi sed fuga quae veniam.", new DateTime(2022, 4, 2, 6, 4, 37, 818, DateTimeKind.Local).AddTicks(4901), 10 },
                    { 13, 869.40m, new DateTime(2022, 9, 4, 16, 17, 49, 863, DateTimeKind.Local).AddTicks(1694), null, "At sit architecto sint qui delectus qui et.", new DateTime(2022, 9, 23, 13, 37, 53, 110, DateTimeKind.Local).AddTicks(2261), 13 },
                    { 14, 256.97m, new DateTime(2022, 6, 19, 5, 7, 21, 556, DateTimeKind.Local).AddTicks(2718), null, "Omnis unde non autem dolor laudantium impedit iusto id qui.", new DateTime(2023, 3, 16, 21, 11, 8, 401, DateTimeKind.Local).AddTicks(9633), 16 },
                    { 15, 626.88m, new DateTime(2022, 5, 31, 9, 36, 25, 100, DateTimeKind.Local).AddTicks(5046), null, "Magnam omnis reiciendis libero.", new DateTime(2022, 9, 7, 4, 44, 23, 693, DateTimeKind.Local).AddTicks(7005), 20 },
                    { 16, 173.72m, new DateTime(2022, 4, 15, 14, 42, 13, 798, DateTimeKind.Local).AddTicks(2984), null, "Tenetur aut et ut architecto totam a.", new DateTime(2023, 2, 28, 12, 17, 38, 985, DateTimeKind.Local).AddTicks(4364), 2 },
                    { 17, 739.46m, new DateTime(2022, 12, 6, 23, 58, 42, 568, DateTimeKind.Local).AddTicks(1321), null, "Et amet aut esse cupiditate ut vitae perspiciatis illum.", new DateTime(2022, 8, 21, 19, 50, 54, 277, DateTimeKind.Local).AddTicks(1730), 7 },
                    { 18, 289.05m, new DateTime(2022, 10, 10, 2, 14, 32, 777, DateTimeKind.Local).AddTicks(6442), null, "Aliquid in sit.", new DateTime(2023, 2, 12, 3, 24, 9, 568, DateTimeKind.Local).AddTicks(9098), 20 },
                    { 19, 328.17m, new DateTime(2022, 12, 15, 18, 47, 20, 828, DateTimeKind.Local).AddTicks(8682), null, "Ab laborum repellendus neque quam aut.", new DateTime(2022, 8, 5, 10, 57, 24, 860, DateTimeKind.Local).AddTicks(6453), 6 },
                    { 20, 26.52m, new DateTime(2022, 11, 12, 5, 47, 53, 719, DateTimeKind.Local).AddTicks(2518), null, "Placeat dolorem ut eaque et voluptatum qui est.", new DateTime(2023, 1, 26, 18, 30, 40, 152, DateTimeKind.Local).AddTicks(3824), 2 }
                });

            migrationBuilder.InsertData(
                table: "Expenses",
                columns: new[] { "ExpensesID", "Category", "CreatedAt", "Date", "DeletedAt", "DriverID", "DriverPayment", "FuelCost", "MaintenanceCost", "Note", "TruckID" },
                values: new object[,]
                {
                    { 1, "Grocery", new DateTime(2023, 2, 22, 14, 13, 23, 207, DateTimeKind.Local).AddTicks(1942), new DateTime(2022, 11, 22, 7, 32, 36, 517, DateTimeKind.Local).AddTicks(6099), null, 5, 467.01m, 771.60m, 657.52m, "talk about irritation.", 3 },
                    { 2, "Home", new DateTime(2023, 1, 8, 10, 27, 53, 342, DateTimeKind.Local).AddTicks(9625), new DateTime(2022, 6, 11, 18, 34, 0, 502, DateTimeKind.Local).AddTicks(4931), null, 16, 166.00m, 985.05m, 109.00m, "This product works quite well. It romantically improves my golf by a lot.", 9 },
                    { 3, "Games", new DateTime(2022, 11, 24, 6, 42, 23, 478, DateTimeKind.Local).AddTicks(7113), new DateTime(2022, 12, 30, 5, 35, 24, 487, DateTimeKind.Local).AddTicks(3514), null, 6, 864.99m, 198.49m, 560.49m, "talk about hatred.", 14 },
                    { 4, "Movies", new DateTime(2022, 10, 10, 2, 56, 53, 614, DateTimeKind.Local).AddTicks(4584), new DateTime(2022, 7, 19, 16, 36, 48, 472, DateTimeKind.Local).AddTicks(2075), null, 17, 563.97m, 411.93m, 11.98m, "This product works very well. It harmonically improves my tennis by a lot.", 20 },
                    { 5, "Automotive", new DateTime(2022, 8, 25, 23, 11, 23, 750, DateTimeKind.Local).AddTicks(2054), new DateTime(2023, 2, 6, 3, 38, 12, 457, DateTimeKind.Local).AddTicks(634), null, 7, 262.96m, 625.38m, 463.46m, "talk about lust!!", 6 },
                    { 6, "Jewelery", new DateTime(2022, 7, 11, 19, 25, 53, 885, DateTimeKind.Local).AddTicks(9524), new DateTime(2022, 8, 26, 14, 39, 36, 441, DateTimeKind.Local).AddTicks(9192), null, 18, 961.95m, 838.82m, 914.95m, "This product works certainly well. It excitedly improves my football by a lot.", 12 },
                    { 7, "Baby", new DateTime(2022, 5, 27, 15, 40, 24, 21, DateTimeKind.Local).AddTicks(6995), new DateTime(2023, 3, 16, 1, 41, 0, 426, DateTimeKind.Local).AddTicks(7753), null, 8, 660.94m, 52.26m, 366.43m, "talk about interest!!", 18 },
                    { 8, "Toys", new DateTime(2022, 4, 12, 11, 54, 54, 157, DateTimeKind.Local).AddTicks(4465), new DateTime(2022, 10, 3, 12, 42, 24, 411, DateTimeKind.Local).AddTicks(6309), null, 19, 359.93m, 265.70m, 817.92m, "This product works certainly well. It energetically improves my golf by a lot.", 4 },
                    { 9, "Grocery", new DateTime(2023, 2, 26, 8, 9, 24, 293, DateTimeKind.Local).AddTicks(1939), new DateTime(2022, 4, 22, 23, 43, 48, 396, DateTimeKind.Local).AddTicks(4875), null, 9, 58.91m, 479.15m, 269.40m, "talk about sadness.", 10 },
                    { 10, "Home", new DateTime(2023, 1, 12, 4, 23, 54, 428, DateTimeKind.Local).AddTicks(9422), new DateTime(2022, 11, 10, 10, 45, 12, 381, DateTimeKind.Local).AddTicks(3443), null, 20, 757.90m, 692.59m, 720.89m, "This product works really well. It sympathetically improves my baseball by a lot.", 16 },
                    { 11, "Games", new DateTime(2022, 11, 28, 0, 38, 24, 564, DateTimeKind.Local).AddTicks(6887), new DateTime(2022, 5, 30, 21, 46, 36, 366, DateTimeKind.Local).AddTicks(1999), null, 10, 456.89m, 906.03m, 172.38m, "talk about contentment!!!", 1 },
                    { 12, "Movies", new DateTime(2022, 10, 13, 20, 52, 54, 700, DateTimeKind.Local).AddTicks(4353), new DateTime(2022, 12, 18, 8, 48, 0, 351, DateTimeKind.Local).AddTicks(552), null, 20, 155.88m, 119.48m, 623.86m, "This product works considerably well. It recklessly improves my basketball by a lot.", 7 },
                    { 13, "Automotive", new DateTime(2022, 8, 29, 17, 7, 24, 836, DateTimeKind.Local).AddTicks(1823), new DateTime(2022, 7, 7, 19, 49, 24, 335, DateTimeKind.Local).AddTicks(9111), null, 11, 854.87m, 332.92m, 75.35m, "talk about anticipation!", 13 },
                    { 14, "Jewelery", new DateTime(2022, 7, 15, 13, 21, 54, 971, DateTimeKind.Local).AddTicks(9298), new DateTime(2023, 1, 25, 6, 50, 48, 320, DateTimeKind.Local).AddTicks(7675), null, 1, 553.85m, 546.36m, 526.83m, "This product works excessively well. It mortally improves my golf by a lot.", 19 },
                    { 15, "Baby", new DateTime(2022, 5, 31, 9, 36, 25, 107, DateTimeKind.Local).AddTicks(6763), new DateTime(2022, 8, 14, 17, 52, 12, 305, DateTimeKind.Local).AddTicks(6231), null, 12, 252.84m, 759.81m, 978.32m, "talk about optimism!!!", 5 },
                    { 16, "Beauty", new DateTime(2022, 4, 16, 5, 50, 55, 243, DateTimeKind.Local).AddTicks(4230), new DateTime(2023, 3, 4, 4, 53, 36, 290, DateTimeKind.Local).AddTicks(4785), null, 2, 951.83m, 973.25m, 429.80m, "I saw one of these in Sao Tome and Principe and I bought one.", 11 },
                    { 17, "Grocery", new DateTime(2023, 3, 2, 2, 5, 25, 379, DateTimeKind.Local).AddTicks(1697), new DateTime(2022, 9, 21, 15, 55, 0, 275, DateTimeKind.Local).AddTicks(3341), null, 13, 650.82m, 186.69m, 881.29m, "talk about contempt!!!", 17 },
                    { 18, "Home", new DateTime(2023, 1, 15, 22, 19, 55, 514, DateTimeKind.Local).AddTicks(9164), new DateTime(2022, 4, 11, 2, 56, 24, 260, DateTimeKind.Local).AddTicks(1897), null, 3, 349.81m, 400.13m, 332.78m, "I saw one of these in French Southern and Antarctic Lands and I bought one.", 2 },
                    { 19, "Games", new DateTime(2022, 12, 1, 18, 34, 25, 650, DateTimeKind.Local).AddTicks(6634), new DateTime(2022, 10, 29, 13, 57, 48, 245, DateTimeKind.Local).AddTicks(455), null, 14, 48.79m, 613.58m, 784.26m, "talk about fury.", 8 },
                    { 20, "Books", new DateTime(2022, 10, 17, 14, 48, 55, 786, DateTimeKind.Local).AddTicks(4107), new DateTime(2022, 5, 19, 0, 59, 12, 229, DateTimeKind.Local).AddTicks(9016), null, 4, 747.78m, 827.02m, 235.75m, "I saw one of these in Barbados and I bought one.", 14 }
                });

            migrationBuilder.CreateIndex(
                name: "UQ__Drivers__21B7B583AB601A5C",
                table: "Drivers",
                column: "PhotoID",
                unique: true,
                filter: "[PhotoID] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "UQ__Drivers__2D971C4D3AD2DF5B",
                table: "Drivers",
                column: "CompanyID",
                unique: true,
                filter: "[CompanyID] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_Expenses_DriverID",
                table: "Expenses",
                column: "DriverID");

            migrationBuilder.CreateIndex(
                name: "IX_Expenses_TruckID",
                table: "Expenses",
                column: "TruckID");

            migrationBuilder.CreateIndex(
                name: "IX_Inspections_TruckID",
                table: "Inspections",
                column: "TruckID");

            migrationBuilder.CreateIndex(
                name: "IX_Repairs_TruckID",
                table: "Repairs",
                column: "TruckID");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Expenses");

            migrationBuilder.DropTable(
                name: "Inspections");

            migrationBuilder.DropTable(
                name: "Repairs");

            migrationBuilder.DropTable(
                name: "Drivers");

            migrationBuilder.DropTable(
                name: "Trucks");

            migrationBuilder.DropTable(
                name: "Companies");

            migrationBuilder.DropTable(
                name: "Photos");
        }
    }
}
