// <auto-generated />
using System;
using DriversManagement.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DriversManagement.Migrations
{
    [DbContext(typeof(DriversManagementContext))]
    partial class DriversManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DriversManagement.Domain.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_name");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_person");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_phone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Drivers.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Birthdate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("birthdate");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DriverLicenseCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_license_category");

                    b.Property<string>("DriverLicenseExpirationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_license_expiration_date");

                    b.Property<string>("DriverLicenseIssuingAuthority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_license_issuing_authority");

                    b.Property<string>("DriverLicenseIssuingDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_license_issuing_date");

                    b.Property<string>("DriverLicenseNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_license_number");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("EmploymentEndDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employment_end_date");

                    b.Property<string>("EmploymentStartDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employment_start_date");

                    b.Property<string>("EmploymentStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employment_status");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gender");

                    b.Property<string>("IdentificationExpirationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identification_expiration_date");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identification_number");

                    b.Property<string>("IdentificationType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identification_type");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marital_status");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("middle_name");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("place_of_birth");

                    b.HasKey("Id")
                        .HasName("pk_drivers");

                    b.ToTable("drivers", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Expences.Expence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date");

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("driver_id");

                    b.Property<string>("DriverPaiment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_paiment");

                    b.Property<string>("FuelCost")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fuel_cost");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("MaintanceCost")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("maintance_cost");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<Guid?>("TruckId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("truck_id");

                    b.HasKey("Id")
                        .HasName("pk_expences");

                    b.HasIndex("DriverId")
                        .HasDatabaseName("ix_expences_driver_id");

                    b.HasIndex("TruckId")
                        .HasDatabaseName("ix_expences_truck_id");

                    b.ToTable("expences", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Inspections.Inspection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("InspectionDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inspection_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("result");

                    b.Property<Guid?>("TruckId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("truck_id");

                    b.HasKey("Id")
                        .HasName("pk_inspections");

                    b.HasIndex("TruckId")
                        .HasDatabaseName("ix_inspections_truck_id");

                    b.ToTable("inspections", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Photos.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_type");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_name");

                    b.Property<string>("FileSizels")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_sizels");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("PhotoData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("photo_data");

                    b.HasKey("Id")
                        .HasName("pk_photos");

                    b.ToTable("photos", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Repairs.Repair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cost");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("RepairDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("repair_date");

                    b.Property<Guid?>("TruckId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("truck_id");

                    b.HasKey("Id")
                        .HasName("pk_repairs");

                    b.HasIndex("TruckId")
                        .HasDatabaseName("ix_repairs_truck_id");

                    b.ToTable("repairs", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.RolePermissions.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("permission");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("pk_role_permissions");

                    b.ToTable("role_permissions", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Trucks.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("capacity");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("EngineNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("engine_number");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fuel_type");

                    b.Property<string>("InsuranceInspirationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("insurance_inspiration_date");

                    b.Property<string>("InsurancePolicyNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("insurance_policy_number");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("registration_number");

                    b.Property<string>("TruckNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("truck_number");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vin");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_trucks");

                    b.ToTable("trucks", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Users.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_roles");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_roles_user_id");

                    b.ToTable("user_roles", (string)null);
                });

            modelBuilder.Entity("DriversManagement.Domain.Drivers.Driver", b =>
                {
                    b.HasOne("DriversManagement.Domain.Companies.Company", "Company")
                        .WithOne("Driver")
                        .HasForeignKey("DriversManagement.Domain.Drivers.Driver", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_drivers_companies_company_id");

                    b.HasOne("DriversManagement.Domain.Photos.Photo", "Photo")
                        .WithOne("Driver")
                        .HasForeignKey("DriversManagement.Domain.Drivers.Driver", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_drivers_photos_photo_id");

                    b.Navigation("Company");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("DriversManagement.Domain.Expences.Expence", b =>
                {
                    b.HasOne("DriversManagement.Domain.Drivers.Driver", "Driver")
                        .WithMany("Expences")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("fk_expences_drivers_driver_id");

                    b.HasOne("DriversManagement.Domain.Trucks.Truck", "Truck")
                        .WithMany("Expences")
                        .HasForeignKey("TruckId")
                        .HasConstraintName("fk_expences_trucks_truck_id");

                    b.Navigation("Driver");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("DriversManagement.Domain.Inspections.Inspection", b =>
                {
                    b.HasOne("DriversManagement.Domain.Trucks.Truck", "Truck")
                        .WithMany("Inspections")
                        .HasForeignKey("TruckId")
                        .HasConstraintName("fk_inspections_trucks_truck_id");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("DriversManagement.Domain.Repairs.Repair", b =>
                {
                    b.HasOne("DriversManagement.Domain.Trucks.Truck", "Truck")
                        .WithMany("Repairs")
                        .HasForeignKey("TruckId")
                        .HasConstraintName("fk_repairs_trucks_truck_id");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("DriversManagement.Domain.Users.UserRole", b =>
                {
                    b.HasOne("DriversManagement.Domain.Users.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_roles_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DriversManagement.Domain.Companies.Company", b =>
                {
                    b.Navigation("Driver");
                });

            modelBuilder.Entity("DriversManagement.Domain.Drivers.Driver", b =>
                {
                    b.Navigation("Expences");
                });

            modelBuilder.Entity("DriversManagement.Domain.Photos.Photo", b =>
                {
                    b.Navigation("Driver");
                });

            modelBuilder.Entity("DriversManagement.Domain.Trucks.Truck", b =>
                {
                    b.Navigation("Expences");

                    b.Navigation("Inspections");

                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("DriversManagement.Domain.Users.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
