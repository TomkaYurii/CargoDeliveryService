<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DriversBlogManagement</name>
    </assembly>
    <members>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.GetBlogUsers(DriversBlogManagement.Domain.BlogUsers.Dtos.BlogUserParametersDto)">
            <summary>
            Gets a list of all BlogUsers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.GetAllBlogUsers">
            <summary>
            Gets a list of all BlogUsers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.GetBlogUser(System.Guid)">
            <summary>
            Gets a single BlogUser by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.AddBlogUser(DriversBlogManagement.Domain.BlogUsers.Dtos.BlogUserForCreationDto)">
            <summary>
            Creates a new BlogUser record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.UpdateBlogUser(System.Guid,DriversBlogManagement.Domain.BlogUsers.Dtos.BlogUserForUpdateDto)">
            <summary>
            Updates an entire existing BlogUser.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.BlogUsersController.DeleteBlogUser(System.Guid)">
            <summary>
            Deletes an existing BlogUser record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.GetComments(DriversBlogManagement.Domain.Comments.Dtos.CommentParametersDto)">
            <summary>
            Gets a list of all Comments.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.GetAllComments">
            <summary>
            Gets a list of all Comments.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.GetComment(System.Guid)">
            <summary>
            Gets a single Comment by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.AddComment(DriversBlogManagement.Domain.Comments.Dtos.CommentForCreationDto)">
            <summary>
            Creates a new Comment record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.UpdateComment(System.Guid,DriversBlogManagement.Domain.Comments.Dtos.CommentForUpdateDto)">
            <summary>
            Updates an entire existing Comment.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.CommentsController.DeleteComment(System.Guid)">
            <summary>
            Deletes an existing Comment record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.GetDrivers(DriversBlogManagement.Domain.Drivers.Dtos.DriverParametersDto)">
            <summary>
            Gets a list of all Drivers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.GetAllDrivers">
            <summary>
            Gets a list of all Drivers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.GetDriver(System.Guid)">
            <summary>
            Gets a single Driver by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.AddDriver(DriversBlogManagement.Domain.Drivers.Dtos.DriverForCreationDto)">
            <summary>
            Creates a new Driver record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.UpdateDriver(System.Guid,DriversBlogManagement.Domain.Drivers.Dtos.DriverForUpdateDto)">
            <summary>
            Updates an entire existing Driver.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.DriversController.DeleteDriver(System.Guid)">
            <summary>
            Deletes an existing Driver record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.GetLikes(DriversBlogManagement.Domain.Likes.Dtos.LikeParametersDto)">
            <summary>
            Gets a list of all Likes.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.GetAllLikes">
            <summary>
            Gets a list of all Likes.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.GetLike(System.Guid)">
            <summary>
            Gets a single Like by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.AddLike(DriversBlogManagement.Domain.Likes.Dtos.LikeForCreationDto)">
            <summary>
            Creates a new Like record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.UpdateLike(System.Guid,DriversBlogManagement.Domain.Likes.Dtos.LikeForUpdateDto)">
            <summary>
            Updates an entire existing Like.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.LikesController.DeleteLike(System.Guid)">
            <summary>
            Deletes an existing Like record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PermissionsController.GetPermissions">
            <summary>
            Gets a list of all available permissions.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PermissionsController.GetAssignedPermissions">
            <summary>
            Gets a list of the current user's assigned permissions.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.GetPostAboutDrivers(DriversBlogManagement.Domain.PostAboutDrivers.Dtos.PostAboutDriverParametersDto)">
            <summary>
            Gets a list of all PostAboutDrivers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.GetAllPostAboutDrivers">
            <summary>
            Gets a list of all PostAboutDrivers.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.GetPostAboutDriver(System.Guid)">
            <summary>
            Gets a single PostAboutDriver by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.AddPostAboutDriver(DriversBlogManagement.Domain.PostAboutDrivers.Dtos.PostAboutDriverForCreationDto)">
            <summary>
            Creates a new PostAboutDriver record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.UpdatePostAboutDriver(System.Guid,DriversBlogManagement.Domain.PostAboutDrivers.Dtos.PostAboutDriverForUpdateDto)">
            <summary>
            Updates an entire existing PostAboutDriver.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.PostAboutDriversController.DeletePostAboutDriver(System.Guid)">
            <summary>
            Deletes an existing PostAboutDriver record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolePermissionsController.GetRolePermissions(DriversBlogManagement.Domain.RolePermissions.Dtos.RolePermissionParametersDto)">
            <summary>
            Gets a list of all RolePermissions.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolePermissionsController.GetRolePermission(System.Guid)">
            <summary>
            Gets a single RolePermission by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolePermissionsController.AddRolePermission(DriversBlogManagement.Domain.RolePermissions.Dtos.RolePermissionForCreationDto)">
            <summary>
            Creates a new RolePermission record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolePermissionsController.UpdateRolePermission(System.Guid,DriversBlogManagement.Domain.RolePermissions.Dtos.RolePermissionForUpdateDto)">
            <summary>
            Updates an entire existing RolePermission.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolePermissionsController.DeleteRolePermission(System.Guid)">
            <summary>
            Deletes an existing RolePermission record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.RolesController.GetRoles">
            <summary>
            Gets a list of all available roles.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.AddRole(System.Guid,System.String)">
            <summary>
            Adds a new role to a user.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.RemoveRole(System.Guid,System.String)">
            <summary>
            Removes a role from a User
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.GetUsers(DriversBlogManagement.Domain.Users.Dtos.UserParametersDto)">
            <summary>
            Gets a list of all Users.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.GetUser(System.Guid)">
            <summary>
            Gets a single User by ID.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.AddUser(DriversBlogManagement.Domain.Users.Dtos.UserForCreationDto)">
            <summary>
            Creates a new User record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.UpdateUser(System.Guid,DriversBlogManagement.Domain.Users.Dtos.UserForUpdateDto)">
            <summary>
            Updates an entire existing User.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Controllers.v1.UsersController.DeleteUser(System.Guid)">
            <summary>
            Deletes an existing User record.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.BlogUserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.BlogUsers.BlogUser})">
            <summary>
            The database configuration for BlogUsers. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.CommentConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.Comments.Comment})">
            <summary>
            The database configuration for Comments. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.DriverConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.Drivers.Driver})">
            <summary>
            The database configuration for Drivers. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.LikeConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.Likes.Like})">
            <summary>
            The database configuration for Likes. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.PostAboutDriverConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.PostAboutDrivers.PostAboutDriver})">
            <summary>
            The database configuration for PostAboutDrivers. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.RolePermissionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.RolePermissions.RolePermission})">
            <summary>
            The database configuration for RolePermissions. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.UserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.Users.User})">
            <summary>
            The database configuration for Users. 
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Databases.EntityConfigurations.UserRoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{DriversBlogManagement.Domain.Users.UserRole})">
            <summary>
            The database configuration for UserRoles. 
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.Line1">
            <summary>
            Address line 1 (e.g., street, PO Box, or company name).
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.Line2">
            <summary>
            Address line 2 (e.g., apartment, suite, unit, or building).
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.City">
            <summary>
            City, district, suburb, town, or village.
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.State">
            <summary>
            State, county, province, or region.
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.PostalCode">
            <summary>
            ZIP or postal code.
            </summary>
        </member>
        <member name="P:DriversBlogManagement.Domain.Addresses.Address.Country">
            <summary>
            Two-letter country code <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">(ISO 3166-1 alpha-2)</a>.
            </summary>
        </member>
        <member name="M:DriversBlogManagement.Extensions.Services.WebAppServiceConfiguration.AddBoundaryServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Registers all services in the assembly of the given interface.
            </summary>
        </member>
        <member name="T:DriversBlogManagement.Migrations.InitialMigration">
            <inheritdoc />
        </member>
        <member name="M:DriversBlogManagement.Migrations.InitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DriversBlogManagement.Migrations.InitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DriversBlogManagement.Migrations.InitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:DriversBlogManagement.DriverReflection">
            <summary>Holder for reflection information generated from Domain/Drivers/Protos/Driver.proto</summary>
        </member>
        <member name="P:DriversBlogManagement.DriverReflection.Descriptor">
            <summary>File descriptor for Domain/Drivers/Protos/Driver.proto</summary>
        </member>
        <member name="T:DriversBlogManagement.DriverWithPostsRequest">
            <summary>
            Определение сообщения для запроса на получение водителя с постами
            </summary>
        </member>
        <member name="F:DriversBlogManagement.DriverWithPostsRequest.DriverIdFieldNumber">
            <summary>Field number for the "driver_id" field.</summary>
        </member>
        <member name="T:DriversBlogManagement.DriverWithPostsResponse">
            <summary>
            Определение сообщения для ответа на запрос с информацией о водителе и его постах
            </summary>
        </member>
        <member name="F:DriversBlogManagement.DriverWithPostsResponse.DriverIdFieldNumber">
            <summary>Field number for the "driver_id" field.</summary>
        </member>
        <member name="F:DriversBlogManagement.DriverWithPostsResponse.FirstNameFieldNumber">
            <summary>Field number for the "first_name" field.</summary>
        </member>
        <member name="F:DriversBlogManagement.DriverWithPostsResponse.LastNameFieldNumber">
            <summary>Field number for the "last_name" field.</summary>
        </member>
        <member name="F:DriversBlogManagement.DriverWithPostsResponse.PostsFieldNumber">
            <summary>Field number for the "posts" field.</summary>
        </member>
        <member name="T:DriversBlogManagement.PostAboutDriverResponse">
            <summary>
            Определение сообщения для поста о водителе
            </summary>
        </member>
        <member name="F:DriversBlogManagement.PostAboutDriverResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:DriversBlogManagement.PostAboutDriverResponse.TitleFieldNumber">
            <summary>Field number for the "title" field.</summary>
        </member>
        <member name="F:DriversBlogManagement.PostAboutDriverResponse.ContentFieldNumber">
            <summary>Field number for the "content" field.</summary>
        </member>
        <member name="T:DriversBlogManagement.DriverRpc">
            <summary>
            Определение сервиса gRPC для работы с водителями
            </summary>
        </member>
        <member name="P:DriversBlogManagement.DriverRpc.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:DriversBlogManagement.DriverRpc.DriverRpcBase">
            <summary>Base class for server-side implementations of DriverRpc</summary>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcBase.GetDriverWithPosts(DriversBlogManagement.DriverWithPostsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Метод для получения информации о водителе и его постах
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:DriversBlogManagement.DriverRpc.DriverRpcClient">
            <summary>Client for DriverRpc</summary>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for DriverRpc</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for DriverRpc that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.GetDriverWithPosts(DriversBlogManagement.DriverWithPostsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Метод для получения информации о водителе и его постах
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.GetDriverWithPosts(DriversBlogManagement.DriverWithPostsRequest,Grpc.Core.CallOptions)">
            <summary>
            Метод для получения информации о водителе и его постах
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.GetDriverWithPostsAsync(DriversBlogManagement.DriverWithPostsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Метод для получения информации о водителе и его постах
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.GetDriverWithPostsAsync(DriversBlogManagement.DriverWithPostsRequest,Grpc.Core.CallOptions)">
            <summary>
            Метод для получения информации о водителе и его постах
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.DriverRpcClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.BindService(DriversBlogManagement.DriverRpc.DriverRpcBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:DriversBlogManagement.DriverRpc.BindService(Grpc.Core.ServiceBinderBase,DriversBlogManagement.DriverRpc.DriverRpcBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
